package com.gvt.main.hibernate.model;
// Generated 29-oct-2020 13:48:51 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * Persona generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="persona"
    ,schema="public"
)
public class Persona  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private DistintivoPersona distintivoPersona;
 	
 	private TipoPersona tipoPersona;
 	
 	private EstadoCivil estadoCivil;
 	
 	private Sexo sexo;
 	
 	private OpcionSino opcionSinoByEsEmbarazada;
 	
 	private Profesion profesion;
 	
 	private TipoSangre tipoSangre;
 	
 	private OpcionSino opcionSinoByEsActiva;
 	
 	private TipoDocumentoIdentificacion tipoDocumentoIdentificacion;
 	
 	private CodigoPostal codigoPostal;
 	
 	private NivelEducativo nivelEducativo;
 	
 	private Nacionalidad nacionalidad;
 	
 	private UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaNacimiento;
 	
 	private UbicacionGeografica ubicacionGeograficaByIdPais;
 	
 	private OpcionSino opcionSinoByEsPublica;
 	
 	private String codigoPersona;
 	
 	private String cedulaPersona;
 	
 	private String nombrePersona;
 	
 	private String apellidoPersona;
 	
 	private String rifPersona;
 	
 	private String numeroMsas;
 	
 	private LocalDate fechaNacimientoPersona;
 	
 	private LocalDate fechaDefuncionPersona;
 	
 	private LocalDate fechaVencimientoRif;
 	
 	private String telefonoMovilPersona;
 	
 	private String telefonoFijoPersona;
 	
 	private String EMailPersona;
 	
 	private String direccionPersona;
 	
 	private String nombreContactoUno;
 	
 	private String telefonoContactoUno;
 	
 	private String telefonoMovilContactoUno;
 	
 	private String emailContactoUno;
 	
 	private String parentescoContactoUno;
 	
 	private String nombreContactoDos;
 	
 	private String telefonoContactoDos;
 	
 	private String telefonoMovilContactoDos;
 	
 	private String emailContactoDos;
 	
 	private String parentescoContactoDos;
 	
 	private Float edad;
 	
 	private String url1;
 	
 	private String url1FileName;
 	
 	private Double url1FileSize;
 	
 	private String comentariosAdicionales;
 	
 	private String nombreDoctorReferencia;
 	
 	private String telefonoContactoDoctorReferencia;
 	
 	private String telefonoMovilDoctorReferencia;
 	
 	private String emailDoctorReferencia;
 	
 	private String lugarNacimientoOtro;
 	
 	private String direccionPersonaCalleAvenida;
 	
 	private String direccionPersonaEdificio;
 	
 	private String direccionPersonaConsultorio;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private LocalDateTime fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private LocalDateTime fechaModificacion;
 	
 	private Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricions = new HashSet<ConsultaMedicaFitnessNutricion>(0);
 	
 	private Set<PersonaAntecedentesObstetrica> personaAntecedentesObstetricas = new HashSet<PersonaAntecedentesObstetrica>(0);
 	
 	private Set<CalendarioIncidencias> calendarioIncidenciasesForIdPersona = new HashSet<CalendarioIncidencias>(0);
 	
 	private Set<CitasPendientes> citasPendientesesForIdPersona = new HashSet<CitasPendientes>(0);
 	
 	private Set<Documento> documentos = new HashSet<Documento>(0);
 	
 	private Set<AusenciasMedico> ausenciasMedicos = new HashSet<AusenciasMedico>(0);
 	
 	private Set<Gastos> gastoses = new HashSet<Gastos>(0);
 	
 	private Set<ReporteContenido> reporteContenidos = new HashSet<ReporteContenido>(0);
 	
 	private Set<TimelineProtocoloCie10> timelineProtocoloCie10s = new HashSet<TimelineProtocoloCie10>(0);
 	
 	private Set<Calendario> calendariosForIdDoctor = new HashSet<Calendario>(0);
 	
 	private Set<TiempoEstimadoAtencion> tiempoEstimadoAtencions = new HashSet<TiempoEstimadoAtencion>(0);
 	
 	private Set<TimelineImagen> timelineImagens = new HashSet<TimelineImagen>(0);
 	
 	private Set<ConsultaMedicaObstetricia> consultaMedicaObstetricias = new HashSet<ConsultaMedicaObstetricia>(0);
 	
 	private Set<HorarioExtra> horarioExtras = new HashSet<HorarioExtra>(0);
 	
 	private Set<Recipe> recipes = new HashSet<Recipe>(0);
 	
 	private Set<CitasPendientes> citasPendientesesForIdDoctor = new HashSet<CitasPendientes>(0);
 	
 	private Set<ConsultaMedica> consultaMedicas = new HashSet<ConsultaMedica>(0);
 	
 	private Set<HorarioMedico> horarioMedicos = new HashSet<HorarioMedico>(0);
 	
 	private Set<CartaAval> cartaAvals = new HashSet<CartaAval>(0);
 	
 	private Set<ReferenciaInstitucionPersona> referenciaInstitucionPersonas = new HashSet<ReferenciaInstitucionPersona>(0);
 	
 	private Set<Timeline> timelines = new HashSet<Timeline>(0);
 	
 	private Set<PersonaOrganizacion> personaOrganizacions = new HashSet<PersonaOrganizacion>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacions = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<PersonaAntecedentesFitnessNutricion> personaAntecedentesFitnessNutricions = new HashSet<PersonaAntecedentesFitnessNutricion>(0);
 	
 	private Set<ConsultaMedicaCardiologia> consultaMedicaCardiologias = new HashSet<ConsultaMedicaCardiologia>(0);
 	
 	private Set<CalendarioIncidencias> calendarioIncidenciasesForIdDoctor = new HashSet<CalendarioIncidencias>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticas = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Calendario> calendariosForIdPersona = new HashSet<Calendario>(0);
 	
 	private Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicas = new HashSet<ConsultaMedicaOdontologica>(0);
 	
 	private Set<PersonaAntecedentes> personaAntecedenteses = new HashSet<PersonaAntecedentes>(0);
 	
 	private Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivas = new HashSet<ConsultaMedicaCirugiaPlasticaReconstructiva>(0);

    public Persona() {
    	// default constructor
    }

	
    public Persona(String codigoPersona, String cedulaPersona, String nombrePersona, String telefonoFijoPersona, String direccionPersona) {
        this.codigoPersona = codigoPersona;
        this.cedulaPersona = cedulaPersona;
        this.nombrePersona = nombrePersona;
        this.telefonoFijoPersona = telefonoFijoPersona;
        this.direccionPersona = direccionPersona;
    }
    public Persona(DistintivoPersona distintivoPersona, TipoPersona tipoPersona, EstadoCivil estadoCivil, Sexo sexo, OpcionSino opcionSinoByEsEmbarazada, Profesion profesion, TipoSangre tipoSangre, OpcionSino opcionSinoByEsActiva, TipoDocumentoIdentificacion tipoDocumentoIdentificacion, CodigoPostal codigoPostal, NivelEducativo nivelEducativo, Nacionalidad nacionalidad, UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaNacimiento, UbicacionGeografica ubicacionGeograficaByIdPais, OpcionSino opcionSinoByEsPublica, String codigoPersona, String cedulaPersona, String nombrePersona, String apellidoPersona, String rifPersona, String numeroMsas, LocalDate fechaNacimientoPersona, LocalDate fechaDefuncionPersona, LocalDate fechaVencimientoRif, String telefonoMovilPersona, String telefonoFijoPersona, String EMailPersona, String direccionPersona, String nombreContactoUno, String telefonoContactoUno, String telefonoMovilContactoUno, String emailContactoUno, String parentescoContactoUno, String nombreContactoDos, String telefonoContactoDos, String telefonoMovilContactoDos, String emailContactoDos, String parentescoContactoDos, Float edad, String url1, String url1FileName, Double url1FileSize, String comentariosAdicionales, String nombreDoctorReferencia, String telefonoContactoDoctorReferencia, String telefonoMovilDoctorReferencia, String emailDoctorReferencia, String lugarNacimientoOtro, String direccionPersonaCalleAvenida, String direccionPersonaEdificio, String direccionPersonaConsultorio, String usuarioCreacion, LocalDateTime fechaCreacion, String usuarioModificacion, LocalDateTime fechaModificacion, Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricions, Set<PersonaAntecedentesObstetrica> personaAntecedentesObstetricas, Set<CalendarioIncidencias> calendarioIncidenciasesForIdPersona, Set<CitasPendientes> citasPendientesesForIdPersona, Set<Documento> documentos, Set<AusenciasMedico> ausenciasMedicos, Set<Gastos> gastoses, Set<ReporteContenido> reporteContenidos, Set<TimelineProtocoloCie10> timelineProtocoloCie10s, Set<Calendario> calendariosForIdDoctor, Set<TiempoEstimadoAtencion> tiempoEstimadoAtencions, Set<TimelineImagen> timelineImagens, Set<ConsultaMedicaObstetricia> consultaMedicaObstetricias, Set<HorarioExtra> horarioExtras, Set<Recipe> recipes, Set<CitasPendientes> citasPendientesesForIdDoctor, Set<ConsultaMedica> consultaMedicas, Set<HorarioMedico> horarioMedicos, Set<CartaAval> cartaAvals, Set<ReferenciaInstitucionPersona> referenciaInstitucionPersonas, Set<Timeline> timelines, Set<PersonaOrganizacion> personaOrganizacions, Set<UsuarioOrganizacion> usuarioOrganizacions, Set<PersonaAntecedentesFitnessNutricion> personaAntecedentesFitnessNutricions, Set<ConsultaMedicaCardiologia> consultaMedicaCardiologias, Set<CalendarioIncidencias> calendarioIncidenciasesForIdDoctor, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticas, Set<Calendario> calendariosForIdPersona, Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicas, Set<PersonaAntecedentes> personaAntecedenteses, Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivas) {
       this.distintivoPersona = distintivoPersona;
       this.tipoPersona = tipoPersona;
       this.estadoCivil = estadoCivil;
       this.sexo = sexo;
       this.opcionSinoByEsEmbarazada = opcionSinoByEsEmbarazada;
       this.profesion = profesion;
       this.tipoSangre = tipoSangre;
       this.opcionSinoByEsActiva = opcionSinoByEsActiva;
       this.tipoDocumentoIdentificacion = tipoDocumentoIdentificacion;
       this.codigoPostal = codigoPostal;
       this.nivelEducativo = nivelEducativo;
       this.nacionalidad = nacionalidad;
       this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento = ubicacionGeograficaByIdUbicacionGeograficaNacimiento;
       this.ubicacionGeograficaByIdPais = ubicacionGeograficaByIdPais;
       this.opcionSinoByEsPublica = opcionSinoByEsPublica;
       this.codigoPersona = codigoPersona;
       this.cedulaPersona = cedulaPersona;
       this.nombrePersona = nombrePersona;
       this.apellidoPersona = apellidoPersona;
       this.rifPersona = rifPersona;
       this.numeroMsas = numeroMsas;
       this.fechaNacimientoPersona = fechaNacimientoPersona;
       this.fechaDefuncionPersona = fechaDefuncionPersona;
       this.fechaVencimientoRif = fechaVencimientoRif;
       this.telefonoMovilPersona = telefonoMovilPersona;
       this.telefonoFijoPersona = telefonoFijoPersona;
       this.EMailPersona = EMailPersona;
       this.direccionPersona = direccionPersona;
       this.nombreContactoUno = nombreContactoUno;
       this.telefonoContactoUno = telefonoContactoUno;
       this.telefonoMovilContactoUno = telefonoMovilContactoUno;
       this.emailContactoUno = emailContactoUno;
       this.parentescoContactoUno = parentescoContactoUno;
       this.nombreContactoDos = nombreContactoDos;
       this.telefonoContactoDos = telefonoContactoDos;
       this.telefonoMovilContactoDos = telefonoMovilContactoDos;
       this.emailContactoDos = emailContactoDos;
       this.parentescoContactoDos = parentescoContactoDos;
       this.edad = edad;
       this.url1 = url1;
       this.url1FileName = url1FileName;
       this.url1FileSize = url1FileSize;
       this.comentariosAdicionales = comentariosAdicionales;
       this.nombreDoctorReferencia = nombreDoctorReferencia;
       this.telefonoContactoDoctorReferencia = telefonoContactoDoctorReferencia;
       this.telefonoMovilDoctorReferencia = telefonoMovilDoctorReferencia;
       this.emailDoctorReferencia = emailDoctorReferencia;
       this.lugarNacimientoOtro = lugarNacimientoOtro;
       this.direccionPersonaCalleAvenida = direccionPersonaCalleAvenida;
       this.direccionPersonaEdificio = direccionPersonaEdificio;
       this.direccionPersonaConsultorio = direccionPersonaConsultorio;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
       this.consultaMedicaFitnessNutricions = consultaMedicaFitnessNutricions;
       this.personaAntecedentesObstetricas = personaAntecedentesObstetricas;
       this.calendarioIncidenciasesForIdPersona = calendarioIncidenciasesForIdPersona;
       this.citasPendientesesForIdPersona = citasPendientesesForIdPersona;
       this.documentos = documentos;
       this.ausenciasMedicos = ausenciasMedicos;
       this.gastoses = gastoses;
       this.reporteContenidos = reporteContenidos;
       this.timelineProtocoloCie10s = timelineProtocoloCie10s;
       this.calendariosForIdDoctor = calendariosForIdDoctor;
       this.tiempoEstimadoAtencions = tiempoEstimadoAtencions;
       this.timelineImagens = timelineImagens;
       this.consultaMedicaObstetricias = consultaMedicaObstetricias;
       this.horarioExtras = horarioExtras;
       this.recipes = recipes;
       this.citasPendientesesForIdDoctor = citasPendientesesForIdDoctor;
       this.consultaMedicas = consultaMedicas;
       this.horarioMedicos = horarioMedicos;
       this.cartaAvals = cartaAvals;
       this.referenciaInstitucionPersonas = referenciaInstitucionPersonas;
       this.timelines = timelines;
       this.personaOrganizacions = personaOrganizacions;
       this.usuarioOrganizacions = usuarioOrganizacions;
       this.personaAntecedentesFitnessNutricions = personaAntecedentesFitnessNutricions;
       this.consultaMedicaCardiologias = consultaMedicaCardiologias;
       this.calendarioIncidenciasesForIdDoctor = calendarioIncidenciasesForIdDoctor;
       this.personaAntecedentesDermatoesteticas = personaAntecedentesDermatoesteticas;
       this.calendariosForIdPersona = calendariosForIdPersona;
       this.consultaMedicaOdontologicas = consultaMedicaOdontologicas;
       this.personaAntecedenteses = personaAntecedenteses;
       this.consultaMedicaCirugiaPlasticaReconstructivas = consultaMedicaCirugiaPlasticaReconstructivas;
    }
   
  @GenericGenerator(name = "persona_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "persona_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "persona_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_distintivo_persona")
    public DistintivoPersona getDistintivoPersona() {
        return this.distintivoPersona;
    }
    
    public void setDistintivoPersona(DistintivoPersona distintivoPersona) {
        this.distintivoPersona = distintivoPersona;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_persona")
    public TipoPersona getTipoPersona() {
        return this.tipoPersona;
    }
    
    public void setTipoPersona(TipoPersona tipoPersona) {
        this.tipoPersona = tipoPersona;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_estado_civil")
    public EstadoCivil getEstadoCivil() {
        return this.estadoCivil;
    }
    
    public void setEstadoCivil(EstadoCivil estadoCivil) {
        this.estadoCivil = estadoCivil;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_sexo")
    public Sexo getSexo() {
        return this.sexo;
    }
    
    public void setSexo(Sexo sexo) {
        this.sexo = sexo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_embarazada")
    public OpcionSino getOpcionSinoByEsEmbarazada() {
        return this.opcionSinoByEsEmbarazada;
    }
    
    public void setOpcionSinoByEsEmbarazada(OpcionSino opcionSinoByEsEmbarazada) {
        this.opcionSinoByEsEmbarazada = opcionSinoByEsEmbarazada;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_profesion")
    public Profesion getProfesion() {
        return this.profesion;
    }
    
    public void setProfesion(Profesion profesion) {
        this.profesion = profesion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_sangre")
    public TipoSangre getTipoSangre() {
        return this.tipoSangre;
    }
    
    public void setTipoSangre(TipoSangre tipoSangre) {
        this.tipoSangre = tipoSangre;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_activa")
    public OpcionSino getOpcionSinoByEsActiva() {
        return this.opcionSinoByEsActiva;
    }
    
    public void setOpcionSinoByEsActiva(OpcionSino opcionSinoByEsActiva) {
        this.opcionSinoByEsActiva = opcionSinoByEsActiva;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_documento_identificacion")
    public TipoDocumentoIdentificacion getTipoDocumentoIdentificacion() {
        return this.tipoDocumentoIdentificacion;
    }
    
    public void setTipoDocumentoIdentificacion(TipoDocumentoIdentificacion tipoDocumentoIdentificacion) {
        this.tipoDocumentoIdentificacion = tipoDocumentoIdentificacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_codigo_postal")
    public CodigoPostal getCodigoPostal() {
        return this.codigoPostal;
    }
    
    public void setCodigoPostal(CodigoPostal codigoPostal) {
        this.codigoPostal = codigoPostal;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_nivel_educativo")
    public NivelEducativo getNivelEducativo() {
        return this.nivelEducativo;
    }
    
    public void setNivelEducativo(NivelEducativo nivelEducativo) {
        this.nivelEducativo = nivelEducativo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_nacionalidad")
    public Nacionalidad getNacionalidad() {
        return this.nacionalidad;
    }
    
    public void setNacionalidad(Nacionalidad nacionalidad) {
        this.nacionalidad = nacionalidad;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_ubicacion_geografica_nacimiento")
    public UbicacionGeografica getUbicacionGeograficaByIdUbicacionGeograficaNacimiento() {
        return this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento;
    }
    
    public void setUbicacionGeograficaByIdUbicacionGeograficaNacimiento(UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaNacimiento) {
        this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento = ubicacionGeograficaByIdUbicacionGeograficaNacimiento;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_pais")
    public UbicacionGeografica getUbicacionGeograficaByIdPais() {
        return this.ubicacionGeograficaByIdPais;
    }
    
    public void setUbicacionGeograficaByIdPais(UbicacionGeografica ubicacionGeograficaByIdPais) {
        this.ubicacionGeograficaByIdPais = ubicacionGeograficaByIdPais;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_publica")
    public OpcionSino getOpcionSinoByEsPublica() {
        return this.opcionSinoByEsPublica;
    }
    
    public void setOpcionSinoByEsPublica(OpcionSino opcionSinoByEsPublica) {
        this.opcionSinoByEsPublica = opcionSinoByEsPublica;
    }
    
    @Column(name="codigo_persona", nullable=false, length=16)
    public String getCodigoPersona() {
        return this.codigoPersona;
    }
    
    public void setCodigoPersona(String codigoPersona) {
        this.codigoPersona = codigoPersona;
    }
    
    @Column(name="cedula_persona", nullable=false, length=64)
    public String getCedulaPersona() {
        return this.cedulaPersona;
    }
    
    public void setCedulaPersona(String cedulaPersona) {
        this.cedulaPersona = cedulaPersona;
    }
    
    @Column(name="nombre_persona", nullable=false, length=64)
    public String getNombrePersona() {
        return this.nombrePersona;
    }
    
    public void setNombrePersona(String nombrePersona) {
        this.nombrePersona = nombrePersona;
    }
    
    @Column(name="apellido_persona", length=64)
    public String getApellidoPersona() {
        return this.apellidoPersona;
    }
    
    public void setApellidoPersona(String apellidoPersona) {
        this.apellidoPersona = apellidoPersona;
    }
    
    @Column(name="rif_persona", length=64)
    public String getRifPersona() {
        return this.rifPersona;
    }
    
    public void setRifPersona(String rifPersona) {
        this.rifPersona = rifPersona;
    }
    
    @Column(name="numero_msas")
    public String getNumeroMsas() {
        return this.numeroMsas;
    }
    
    public void setNumeroMsas(String numeroMsas) {
        this.numeroMsas = numeroMsas;
    }
    
    @Column(name="fecha_nacimiento_persona", length=13)
    public LocalDate getFechaNacimientoPersona() {
        return this.fechaNacimientoPersona;
    }
    
    public void setFechaNacimientoPersona(LocalDate fechaNacimientoPersona) {
        this.fechaNacimientoPersona = fechaNacimientoPersona;
    }
    
    @Column(name="fecha_defuncion_persona", length=13)
    public LocalDate getFechaDefuncionPersona() {
        return this.fechaDefuncionPersona;
    }
    
    public void setFechaDefuncionPersona(LocalDate fechaDefuncionPersona) {
        this.fechaDefuncionPersona = fechaDefuncionPersona;
    }
    
    @Column(name="fecha_vencimiento_rif", length=13)
    public LocalDate getFechaVencimientoRif() {
        return this.fechaVencimientoRif;
    }
    
    public void setFechaVencimientoRif(LocalDate fechaVencimientoRif) {
        this.fechaVencimientoRif = fechaVencimientoRif;
    }
    
    @Column(name="telefono_movil_persona", length=32)
    public String getTelefonoMovilPersona() {
        return this.telefonoMovilPersona;
    }
    
    public void setTelefonoMovilPersona(String telefonoMovilPersona) {
        this.telefonoMovilPersona = telefonoMovilPersona;
    }
    
    @Column(name="telefono_fijo_persona", nullable=false, length=32)
    public String getTelefonoFijoPersona() {
        return this.telefonoFijoPersona;
    }
    
    public void setTelefonoFijoPersona(String telefonoFijoPersona) {
        this.telefonoFijoPersona = telefonoFijoPersona;
    }
    
    @Column(name="e_mail_persona", length=64)
    public String getEMailPersona() {
        return this.EMailPersona;
    }
    
    public void setEMailPersona(String EMailPersona) {
        this.EMailPersona = EMailPersona;
    }
    
    @Column(name="direccion_persona", nullable=false)
    public String getDireccionPersona() {
        return this.direccionPersona;
    }
    
    public void setDireccionPersona(String direccionPersona) {
        this.direccionPersona = direccionPersona;
    }
    
    @Column(name="nombre_contacto_uno", length=64)
    public String getNombreContactoUno() {
        return this.nombreContactoUno;
    }
    
    public void setNombreContactoUno(String nombreContactoUno) {
        this.nombreContactoUno = nombreContactoUno;
    }
    
    @Column(name="telefono_contacto_uno", length=32)
    public String getTelefonoContactoUno() {
        return this.telefonoContactoUno;
    }
    
    public void setTelefonoContactoUno(String telefonoContactoUno) {
        this.telefonoContactoUno = telefonoContactoUno;
    }
    
    @Column(name="telefono_movil_contacto_uno", length=32)
    public String getTelefonoMovilContactoUno() {
        return this.telefonoMovilContactoUno;
    }
    
    public void setTelefonoMovilContactoUno(String telefonoMovilContactoUno) {
        this.telefonoMovilContactoUno = telefonoMovilContactoUno;
    }
    
    @Column(name="email_contacto_uno", length=64)
    public String getEmailContactoUno() {
        return this.emailContactoUno;
    }
    
    public void setEmailContactoUno(String emailContactoUno) {
        this.emailContactoUno = emailContactoUno;
    }
    
    @Column(name="parentesco_contacto_uno")
    public String getParentescoContactoUno() {
        return this.parentescoContactoUno;
    }
    
    public void setParentescoContactoUno(String parentescoContactoUno) {
        this.parentescoContactoUno = parentescoContactoUno;
    }
    
    @Column(name="nombre_contacto_dos", length=64)
    public String getNombreContactoDos() {
        return this.nombreContactoDos;
    }
    
    public void setNombreContactoDos(String nombreContactoDos) {
        this.nombreContactoDos = nombreContactoDos;
    }
    
    @Column(name="telefono_contacto_dos", length=32)
    public String getTelefonoContactoDos() {
        return this.telefonoContactoDos;
    }
    
    public void setTelefonoContactoDos(String telefonoContactoDos) {
        this.telefonoContactoDos = telefonoContactoDos;
    }
    
    @Column(name="telefono_movil_contacto_dos", length=32)
    public String getTelefonoMovilContactoDos() {
        return this.telefonoMovilContactoDos;
    }
    
    public void setTelefonoMovilContactoDos(String telefonoMovilContactoDos) {
        this.telefonoMovilContactoDos = telefonoMovilContactoDos;
    }
    
    @Column(name="email_contacto_dos", length=64)
    public String getEmailContactoDos() {
        return this.emailContactoDos;
    }
    
    public void setEmailContactoDos(String emailContactoDos) {
        this.emailContactoDos = emailContactoDos;
    }
    
    @Column(name="parentesco_contacto_dos")
    public String getParentescoContactoDos() {
        return this.parentescoContactoDos;
    }
    
    public void setParentescoContactoDos(String parentescoContactoDos) {
        this.parentescoContactoDos = parentescoContactoDos;
    }
    
    @Column(name="edad", precision=8, scale=8)
    public Float getEdad() {
        return this.edad;
    }
    
    public void setEdad(Float edad) {
        this.edad = edad;
    }
    
    @Column(name="url1")
    public String getUrl1() {
        return this.url1;
    }
    
    public void setUrl1(String url1) {
        this.url1 = url1;
    }
    
    @Column(name="url1_file_name")
    public String getUrl1FileName() {
        return this.url1FileName;
    }
    
    public void setUrl1FileName(String url1FileName) {
        this.url1FileName = url1FileName;
    }
    
    @Column(name="url1_file_size", precision=17, scale=17)
    public Double getUrl1FileSize() {
        return this.url1FileSize;
    }
    
    public void setUrl1FileSize(Double url1FileSize) {
        this.url1FileSize = url1FileSize;
    }
    
    @Column(name="comentarios_adicionales")
    public String getComentariosAdicionales() {
        return this.comentariosAdicionales;
    }
    
    public void setComentariosAdicionales(String comentariosAdicionales) {
        this.comentariosAdicionales = comentariosAdicionales;
    }
    
    @Column(name="nombre_doctor_referencia")
    public String getNombreDoctorReferencia() {
        return this.nombreDoctorReferencia;
    }
    
    public void setNombreDoctorReferencia(String nombreDoctorReferencia) {
        this.nombreDoctorReferencia = nombreDoctorReferencia;
    }
    
    @Column(name="telefono_contacto_doctor_referencia", length=32)
    public String getTelefonoContactoDoctorReferencia() {
        return this.telefonoContactoDoctorReferencia;
    }
    
    public void setTelefonoContactoDoctorReferencia(String telefonoContactoDoctorReferencia) {
        this.telefonoContactoDoctorReferencia = telefonoContactoDoctorReferencia;
    }
    
    @Column(name="telefono_movil_doctor_referencia", length=32)
    public String getTelefonoMovilDoctorReferencia() {
        return this.telefonoMovilDoctorReferencia;
    }
    
    public void setTelefonoMovilDoctorReferencia(String telefonoMovilDoctorReferencia) {
        this.telefonoMovilDoctorReferencia = telefonoMovilDoctorReferencia;
    }
    
    @Column(name="email_doctor_referencia", length=64)
    public String getEmailDoctorReferencia() {
        return this.emailDoctorReferencia;
    }
    
    public void setEmailDoctorReferencia(String emailDoctorReferencia) {
        this.emailDoctorReferencia = emailDoctorReferencia;
    }
    
    @Column(name="lugar_nacimiento_otro", length=128)
    public String getLugarNacimientoOtro() {
        return this.lugarNacimientoOtro;
    }
    
    public void setLugarNacimientoOtro(String lugarNacimientoOtro) {
        this.lugarNacimientoOtro = lugarNacimientoOtro;
    }
    
    @Column(name="direccion_persona_calle_avenida")
    public String getDireccionPersonaCalleAvenida() {
        return this.direccionPersonaCalleAvenida;
    }
    
    public void setDireccionPersonaCalleAvenida(String direccionPersonaCalleAvenida) {
        this.direccionPersonaCalleAvenida = direccionPersonaCalleAvenida;
    }
    
    @Column(name="direccion_persona_edificio")
    public String getDireccionPersonaEdificio() {
        return this.direccionPersonaEdificio;
    }
    
    public void setDireccionPersonaEdificio(String direccionPersonaEdificio) {
        this.direccionPersonaEdificio = direccionPersonaEdificio;
    }
    
    @Column(name="direccion_persona_consultorio")
    public String getDireccionPersonaConsultorio() {
        return this.direccionPersonaConsultorio;
    }
    
    public void setDireccionPersonaConsultorio(String direccionPersonaConsultorio) {
        this.direccionPersonaConsultorio = direccionPersonaConsultorio;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    
    @Column(name="fecha_creacion", length=29)
    public LocalDateTime getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(LocalDateTime fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    
    @Column(name="fecha_modificacion", length=29)
    public LocalDateTime getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(LocalDateTime fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedicaFitnessNutricion> getConsultaMedicaFitnessNutricions() {
        return this.consultaMedicaFitnessNutricions;
    }
    
    public void setConsultaMedicaFitnessNutricions(Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricions) {
        this.consultaMedicaFitnessNutricions = consultaMedicaFitnessNutricions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaAntecedentesObstetrica> getPersonaAntecedentesObstetricas() {
        return this.personaAntecedentesObstetricas;
    }
    
    public void setPersonaAntecedentesObstetricas(Set<PersonaAntecedentesObstetrica> personaAntecedentesObstetricas) {
        this.personaAntecedentesObstetricas = personaAntecedentesObstetricas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdPersona")
    public Set<CalendarioIncidencias> getCalendarioIncidenciasesForIdPersona() {
        return this.calendarioIncidenciasesForIdPersona;
    }
    
    public void setCalendarioIncidenciasesForIdPersona(Set<CalendarioIncidencias> calendarioIncidenciasesForIdPersona) {
        this.calendarioIncidenciasesForIdPersona = calendarioIncidenciasesForIdPersona;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdPersona")
    public Set<CitasPendientes> getCitasPendientesesForIdPersona() {
        return this.citasPendientesesForIdPersona;
    }
    
    public void setCitasPendientesesForIdPersona(Set<CitasPendientes> citasPendientesesForIdPersona) {
        this.citasPendientesesForIdPersona = citasPendientesesForIdPersona;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<Documento> getDocumentos() {
        return this.documentos;
    }
    
    public void setDocumentos(Set<Documento> documentos) {
        this.documentos = documentos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<AusenciasMedico> getAusenciasMedicos() {
        return this.ausenciasMedicos;
    }
    
    public void setAusenciasMedicos(Set<AusenciasMedico> ausenciasMedicos) {
        this.ausenciasMedicos = ausenciasMedicos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<Gastos> getGastoses() {
        return this.gastoses;
    }
    
    public void setGastoses(Set<Gastos> gastoses) {
        this.gastoses = gastoses;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ReporteContenido> getReporteContenidos() {
        return this.reporteContenidos;
    }
    
    public void setReporteContenidos(Set<ReporteContenido> reporteContenidos) {
        this.reporteContenidos = reporteContenidos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<TimelineProtocoloCie10> getTimelineProtocoloCie10s() {
        return this.timelineProtocoloCie10s;
    }
    
    public void setTimelineProtocoloCie10s(Set<TimelineProtocoloCie10> timelineProtocoloCie10s) {
        this.timelineProtocoloCie10s = timelineProtocoloCie10s;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdDoctor")
    public Set<Calendario> getCalendariosForIdDoctor() {
        return this.calendariosForIdDoctor;
    }
    
    public void setCalendariosForIdDoctor(Set<Calendario> calendariosForIdDoctor) {
        this.calendariosForIdDoctor = calendariosForIdDoctor;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<TiempoEstimadoAtencion> getTiempoEstimadoAtencions() {
        return this.tiempoEstimadoAtencions;
    }
    
    public void setTiempoEstimadoAtencions(Set<TiempoEstimadoAtencion> tiempoEstimadoAtencions) {
        this.tiempoEstimadoAtencions = tiempoEstimadoAtencions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<TimelineImagen> getTimelineImagens() {
        return this.timelineImagens;
    }
    
    public void setTimelineImagens(Set<TimelineImagen> timelineImagens) {
        this.timelineImagens = timelineImagens;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedicaObstetricia> getConsultaMedicaObstetricias() {
        return this.consultaMedicaObstetricias;
    }
    
    public void setConsultaMedicaObstetricias(Set<ConsultaMedicaObstetricia> consultaMedicaObstetricias) {
        this.consultaMedicaObstetricias = consultaMedicaObstetricias;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<HorarioExtra> getHorarioExtras() {
        return this.horarioExtras;
    }
    
    public void setHorarioExtras(Set<HorarioExtra> horarioExtras) {
        this.horarioExtras = horarioExtras;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<Recipe> getRecipes() {
        return this.recipes;
    }
    
    public void setRecipes(Set<Recipe> recipes) {
        this.recipes = recipes;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdDoctor")
    public Set<CitasPendientes> getCitasPendientesesForIdDoctor() {
        return this.citasPendientesesForIdDoctor;
    }
    
    public void setCitasPendientesesForIdDoctor(Set<CitasPendientes> citasPendientesesForIdDoctor) {
        this.citasPendientesesForIdDoctor = citasPendientesesForIdDoctor;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedica> getConsultaMedicas() {
        return this.consultaMedicas;
    }
    
    public void setConsultaMedicas(Set<ConsultaMedica> consultaMedicas) {
        this.consultaMedicas = consultaMedicas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<HorarioMedico> getHorarioMedicos() {
        return this.horarioMedicos;
    }
    
    public void setHorarioMedicos(Set<HorarioMedico> horarioMedicos) {
        this.horarioMedicos = horarioMedicos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<CartaAval> getCartaAvals() {
        return this.cartaAvals;
    }
    
    public void setCartaAvals(Set<CartaAval> cartaAvals) {
        this.cartaAvals = cartaAvals;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ReferenciaInstitucionPersona> getReferenciaInstitucionPersonas() {
        return this.referenciaInstitucionPersonas;
    }
    
    public void setReferenciaInstitucionPersonas(Set<ReferenciaInstitucionPersona> referenciaInstitucionPersonas) {
        this.referenciaInstitucionPersonas = referenciaInstitucionPersonas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<Timeline> getTimelines() {
        return this.timelines;
    }
    
    public void setTimelines(Set<Timeline> timelines) {
        this.timelines = timelines;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaOrganizacion> getPersonaOrganizacions() {
        return this.personaOrganizacions;
    }
    
    public void setPersonaOrganizacions(Set<PersonaOrganizacion> personaOrganizacions) {
        this.personaOrganizacions = personaOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacions() {
        return this.usuarioOrganizacions;
    }
    
    public void setUsuarioOrganizacions(Set<UsuarioOrganizacion> usuarioOrganizacions) {
        this.usuarioOrganizacions = usuarioOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaAntecedentesFitnessNutricion> getPersonaAntecedentesFitnessNutricions() {
        return this.personaAntecedentesFitnessNutricions;
    }
    
    public void setPersonaAntecedentesFitnessNutricions(Set<PersonaAntecedentesFitnessNutricion> personaAntecedentesFitnessNutricions) {
        this.personaAntecedentesFitnessNutricions = personaAntecedentesFitnessNutricions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedicaCardiologia> getConsultaMedicaCardiologias() {
        return this.consultaMedicaCardiologias;
    }
    
    public void setConsultaMedicaCardiologias(Set<ConsultaMedicaCardiologia> consultaMedicaCardiologias) {
        this.consultaMedicaCardiologias = consultaMedicaCardiologias;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdDoctor")
    public Set<CalendarioIncidencias> getCalendarioIncidenciasesForIdDoctor() {
        return this.calendarioIncidenciasesForIdDoctor;
    }
    
    public void setCalendarioIncidenciasesForIdDoctor(Set<CalendarioIncidencias> calendarioIncidenciasesForIdDoctor) {
        this.calendarioIncidenciasesForIdDoctor = calendarioIncidenciasesForIdDoctor;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticas() {
        return this.personaAntecedentesDermatoesteticas;
    }
    
    public void setPersonaAntecedentesDermatoesteticas(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticas) {
        this.personaAntecedentesDermatoesteticas = personaAntecedentesDermatoesteticas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="personaByIdPersona")
    public Set<Calendario> getCalendariosForIdPersona() {
        return this.calendariosForIdPersona;
    }
    
    public void setCalendariosForIdPersona(Set<Calendario> calendariosForIdPersona) {
        this.calendariosForIdPersona = calendariosForIdPersona;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedicaOdontologica> getConsultaMedicaOdontologicas() {
        return this.consultaMedicaOdontologicas;
    }
    
    public void setConsultaMedicaOdontologicas(Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicas) {
        this.consultaMedicaOdontologicas = consultaMedicaOdontologicas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaAntecedentes> getPersonaAntecedenteses() {
        return this.personaAntecedenteses;
    }
    
    public void setPersonaAntecedenteses(Set<PersonaAntecedentes> personaAntecedenteses) {
        this.personaAntecedenteses = personaAntecedenteses;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="persona")
    public Set<ConsultaMedicaCirugiaPlasticaReconstructiva> getConsultaMedicaCirugiaPlasticaReconstructivas() {
        return this.consultaMedicaCirugiaPlasticaReconstructivas;
    }
    
    public void setConsultaMedicaCirugiaPlasticaReconstructivas(Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivas) {
        this.consultaMedicaCirugiaPlasticaReconstructivas = consultaMedicaCirugiaPlasticaReconstructivas;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("distintivoPersona").append("='").append(getDistintivoPersona()).append("' ");			
      buffer.append("tipoPersona").append("='").append(getTipoPersona()).append("' ");			
      buffer.append("estadoCivil").append("='").append(getEstadoCivil()).append("' ");			
      buffer.append("sexo").append("='").append(getSexo()).append("' ");			
      buffer.append("opcionSinoByEsEmbarazada").append("='").append(getOpcionSinoByEsEmbarazada()).append("' ");			
      buffer.append("profesion").append("='").append(getProfesion()).append("' ");			
      buffer.append("tipoSangre").append("='").append(getTipoSangre()).append("' ");			
      buffer.append("opcionSinoByEsActiva").append("='").append(getOpcionSinoByEsActiva()).append("' ");			
      buffer.append("tipoDocumentoIdentificacion").append("='").append(getTipoDocumentoIdentificacion()).append("' ");			
      buffer.append("codigoPostal").append("='").append(getCodigoPostal()).append("' ");			
      buffer.append("nivelEducativo").append("='").append(getNivelEducativo()).append("' ");			
      buffer.append("nacionalidad").append("='").append(getNacionalidad()).append("' ");			
      buffer.append("ubicacionGeograficaByIdUbicacionGeograficaNacimiento").append("='").append(getUbicacionGeograficaByIdUbicacionGeograficaNacimiento()).append("' ");			
      buffer.append("ubicacionGeograficaByIdPais").append("='").append(getUbicacionGeograficaByIdPais()).append("' ");			
      buffer.append("opcionSinoByEsPublica").append("='").append(getOpcionSinoByEsPublica()).append("' ");			
      buffer.append("codigoPersona").append("='").append(getCodigoPersona()).append("' ");			
      buffer.append("cedulaPersona").append("='").append(getCedulaPersona()).append("' ");			
      buffer.append("nombrePersona").append("='").append(getNombrePersona()).append("' ");			
      buffer.append("apellidoPersona").append("='").append(getApellidoPersona()).append("' ");			
      buffer.append("rifPersona").append("='").append(getRifPersona()).append("' ");			
      buffer.append("numeroMsas").append("='").append(getNumeroMsas()).append("' ");			
      buffer.append("fechaNacimientoPersona").append("='").append(getFechaNacimientoPersona()).append("' ");			
      buffer.append("fechaDefuncionPersona").append("='").append(getFechaDefuncionPersona()).append("' ");			
      buffer.append("fechaVencimientoRif").append("='").append(getFechaVencimientoRif()).append("' ");			
      buffer.append("telefonoMovilPersona").append("='").append(getTelefonoMovilPersona()).append("' ");			
      buffer.append("telefonoFijoPersona").append("='").append(getTelefonoFijoPersona()).append("' ");			
      buffer.append("EMailPersona").append("='").append(getEMailPersona()).append("' ");			
      buffer.append("direccionPersona").append("='").append(getDireccionPersona()).append("' ");			
      buffer.append("nombreContactoUno").append("='").append(getNombreContactoUno()).append("' ");			
      buffer.append("telefonoContactoUno").append("='").append(getTelefonoContactoUno()).append("' ");			
      buffer.append("telefonoMovilContactoUno").append("='").append(getTelefonoMovilContactoUno()).append("' ");			
      buffer.append("emailContactoUno").append("='").append(getEmailContactoUno()).append("' ");			
      buffer.append("parentescoContactoUno").append("='").append(getParentescoContactoUno()).append("' ");			
      buffer.append("nombreContactoDos").append("='").append(getNombreContactoDos()).append("' ");			
      buffer.append("telefonoContactoDos").append("='").append(getTelefonoContactoDos()).append("' ");			
      buffer.append("telefonoMovilContactoDos").append("='").append(getTelefonoMovilContactoDos()).append("' ");			
      buffer.append("emailContactoDos").append("='").append(getEmailContactoDos()).append("' ");			
      buffer.append("parentescoContactoDos").append("='").append(getParentescoContactoDos()).append("' ");			
      buffer.append("edad").append("='").append(getEdad()).append("' ");			
      buffer.append("url1").append("='").append(getUrl1()).append("' ");			
      buffer.append("url1FileName").append("='").append(getUrl1FileName()).append("' ");			
      buffer.append("url1FileSize").append("='").append(getUrl1FileSize()).append("' ");			
      buffer.append("comentariosAdicionales").append("='").append(getComentariosAdicionales()).append("' ");			
      buffer.append("nombreDoctorReferencia").append("='").append(getNombreDoctorReferencia()).append("' ");			
      buffer.append("telefonoContactoDoctorReferencia").append("='").append(getTelefonoContactoDoctorReferencia()).append("' ");			
      buffer.append("telefonoMovilDoctorReferencia").append("='").append(getTelefonoMovilDoctorReferencia()).append("' ");			
      buffer.append("emailDoctorReferencia").append("='").append(getEmailDoctorReferencia()).append("' ");			
      buffer.append("lugarNacimientoOtro").append("='").append(getLugarNacimientoOtro()).append("' ");			
      buffer.append("direccionPersonaCalleAvenida").append("='").append(getDireccionPersonaCalleAvenida()).append("' ");			
      buffer.append("direccionPersonaEdificio").append("='").append(getDireccionPersonaEdificio()).append("' ");			
      buffer.append("direccionPersonaConsultorio").append("='").append(getDireccionPersonaConsultorio()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof Persona)) 
		 	return false;
		 	
		 Persona castOther = ( Persona ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
		if(this.distintivoPersona != null &&
			(distintivoPersona.getId() == null || this.distintivoPersona.getId().longValue() == 0)) {
			distintivoPersona = null;
		}
		if(this.tipoPersona != null &&
			(tipoPersona.getId() == null || this.tipoPersona.getId().longValue() == 0)) {
			tipoPersona = null;
		}
		if(this.estadoCivil != null &&
			(estadoCivil.getId() == null || this.estadoCivil.getId().longValue() == 0)) {
			estadoCivil = null;
		}
		if(this.sexo != null &&
			(sexo.getId() == null || this.sexo.getId().longValue() == 0)) {
			sexo = null;
		}
		if(this.opcionSinoByEsEmbarazada != null &&
			(opcionSinoByEsEmbarazada.getId() == null || this.opcionSinoByEsEmbarazada.getId().longValue() == 0)) {
			opcionSinoByEsEmbarazada = null;
		}
		if(this.profesion != null &&
			(profesion.getId() == null || this.profesion.getId().longValue() == 0)) {
			profesion = null;
		}
		if(this.tipoSangre != null &&
			(tipoSangre.getId() == null || this.tipoSangre.getId().longValue() == 0)) {
			tipoSangre = null;
		}
		if(this.opcionSinoByEsActiva != null &&
			(opcionSinoByEsActiva.getId() == null || this.opcionSinoByEsActiva.getId().longValue() == 0)) {
			opcionSinoByEsActiva = null;
		}
		if(this.tipoDocumentoIdentificacion != null &&
			(tipoDocumentoIdentificacion.getId() == null || this.tipoDocumentoIdentificacion.getId().longValue() == 0)) {
			tipoDocumentoIdentificacion = null;
		}
		if(this.codigoPostal != null &&
			(codigoPostal.getId() == null || this.codigoPostal.getId().longValue() == 0)) {
			codigoPostal = null;
		}
		if(this.nivelEducativo != null &&
			(nivelEducativo.getId() == null || this.nivelEducativo.getId().longValue() == 0)) {
			nivelEducativo = null;
		}
		if(this.nacionalidad != null &&
			(nacionalidad.getId() == null || this.nacionalidad.getId().longValue() == 0)) {
			nacionalidad = null;
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento != null &&
			(ubicacionGeograficaByIdUbicacionGeograficaNacimiento.getId() == null || this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento.getId().longValue() == 0)) {
			ubicacionGeograficaByIdUbicacionGeograficaNacimiento = null;
		}
		if(this.ubicacionGeograficaByIdPais != null &&
			(ubicacionGeograficaByIdPais.getId() == null || this.ubicacionGeograficaByIdPais.getId().longValue() == 0)) {
			ubicacionGeograficaByIdPais = null;
		}
		if(this.opcionSinoByEsPublica != null &&
			(opcionSinoByEsPublica.getId() == null || this.opcionSinoByEsPublica.getId().longValue() == 0)) {
			opcionSinoByEsPublica = null;
		}
    }
    
    public void fillPOJO() {
		if(this.distintivoPersona == null) {
			distintivoPersona = new DistintivoPersona();
		}
		if(this.tipoPersona == null) {
			tipoPersona = new TipoPersona();
		}
		if(this.estadoCivil == null) {
			estadoCivil = new EstadoCivil();
		}
		if(this.sexo == null) {
			sexo = new Sexo();
		}
		if(this.opcionSinoByEsEmbarazada == null) {
			opcionSinoByEsEmbarazada = new OpcionSino();
		}
		if(this.profesion == null) {
			profesion = new Profesion();
		}
		if(this.tipoSangre == null) {
			tipoSangre = new TipoSangre();
		}
		if(this.opcionSinoByEsActiva == null) {
			opcionSinoByEsActiva = new OpcionSino();
		}
		if(this.tipoDocumentoIdentificacion == null) {
			tipoDocumentoIdentificacion = new TipoDocumentoIdentificacion();
		}
		if(this.codigoPostal == null) {
			codigoPostal = new CodigoPostal();
		}
		if(this.nivelEducativo == null) {
			nivelEducativo = new NivelEducativo();
		}
		if(this.nacionalidad == null) {
			nacionalidad = new Nacionalidad();
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaNacimiento == null) {
			ubicacionGeograficaByIdUbicacionGeograficaNacimiento = new UbicacionGeografica();
		}
		if(this.ubicacionGeograficaByIdPais == null) {
			ubicacionGeograficaByIdPais = new UbicacionGeografica();
		}
		if(this.opcionSinoByEsPublica == null) {
			opcionSinoByEsPublica = new OpcionSino();
		}
    }
    
    public Persona createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

