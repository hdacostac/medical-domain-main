package com.gvt.main.hibernate.model;
// Generated 09-feb-2020 20:04:15 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * OpcionSino generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="opcion_sino"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="codigo_opcion_sino") 
)
public class OpcionSino  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private String codigoOpcionSino;
 	
 	private String nombreOpcionSino;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private Date fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private Date fechaModificacion;
 	
 	private Set<Persona> personasForEsEmbarazada = new HashSet<Persona>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIpl = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Usuario> usuariosForEsCuentaExpirada = new HashSet<Usuario>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcnePapa = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsQuimioexfoliacion = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Compras> comprasesForEsPagada = new HashSet<Compras>(0);
 	
 	private Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsActiva = new HashSet<ConsultaMedicaFitnessNutricion>(0);
 	
 	private Set<TipoProducto> tipoProductosForEsDeshabilitado = new HashSet<TipoProducto>(0);
 	
 	private Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsActiva = new HashSet<ConsultaMedicaOdontologica>(0);
 	
 	private Set<Organizacion> organizacionsForEsCondicionPacienteRequired = new HashSet<Organizacion>(0);
 	
 	private Set<ConsultaMedica> consultaMedicasForEsActiva = new HashSet<ConsultaMedica>(0);
 	
 	private Set<Recipe> recipes = new HashSet<Recipe>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Organizacion> organizacionsForEsPersonaContactoRequired = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaHuevo = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<TipoProductoAlmacen> tipoProductoAlmacens = new HashSet<TipoProductoAlmacen>(0);
 	
 	private Set<Compras> comprasesForEsBloqueada = new HashSet<Compras>(0);
 	
 	private Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions = new HashSet<PlantillaReporteOrganizacion>(0);
 	
 	private Set<Organizacion> organizacionsForControlUsesSeparator = new HashSet<Organizacion>(0);
 	
 	private Set<TipoProducto> tipoProductosForEsIvaGeneral = new HashSet<TipoProducto>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLimpiezaFacial = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDepilacionLaser = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Organizacion> organizacionsForEsConfiguradoPapeleria = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserErbium = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Pedido> pedidosForEsLiberado = new HashSet<Pedido>(0);
 	
 	private Set<TipoProducto> tipoProductosForEsLote = new HashSet<TipoProducto>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsUltracavitacion = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Vademecum> vademecums = new HashSet<Vademecum>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcneMama = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaCafe = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<TipoProducto> tipoProductosForEsExento = new HashSet<TipoProducto>(0);
 	
 	private Set<Organizacion> organizacionsForDocumentoUsesSeparator = new HashSet<Organizacion>(0);
 	
 	private Set<Persona> personasForEsPublica = new HashSet<Persona>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserGalaxy = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<RegistroPagoDocumento> registroPagoDocumentosForEsIslr = new HashSet<RegistroPagoDocumento>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMenopausia = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsEmbarazada = new HashSet<ConsultaMedicaObstetricia>(0);
 	
 	private Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsActiva = new HashSet<ConsultaMedicaObstetricia>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<TipoProductoOrganizacion> tipoProductoOrganizacions = new HashSet<TipoProductoOrganizacion>(0);
 	
 	private Set<Compras> comprasesForEsCargadoInventario = new HashSet<Compras>(0);
 	
 	private Set<Organizacion> organizacionsForEsCasoActivo = new HashSet<Organizacion>(0);
 	
 	private Set<Usuario> usuariosForEsCredencialesExpiradas = new HashSet<Usuario>(0);
 	
 	private Set<Organizacion> organizacionsForPrintTicketCita = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsSop = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsPublica = new HashSet<ConsultaMedicaOdontologica>(0);
 	
 	private Set<Organizacion> organizacionsForIdInventoryControl = new HashSet<Organizacion>(0);
 	
 	private Set<Organizacion> organizacionsForEsDoctorPrincipalRequired = new HashSet<Organizacion>(0);
 	
 	private Set<ConsultaMedica> consultaMedicasForEsPublica = new HashSet<ConsultaMedica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipertiroidismo = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Organizacion> organizacionsForEsHabilitado = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsPublica = new HashSet<ConsultaMedicaCirugiaPlasticaReconstructiva>(0);
 	
 	private Set<Organizacion> organizacionsForEsConfiguradoPagos = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsProtesisMamarias = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaMedicamento = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Usuario> usuariosForEsPinHabilitado = new HashSet<Usuario>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserVbeam = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsPublica = new HashSet<ConsultaMedicaObstetricia>(0);
 	
 	private Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsActiva = new HashSet<ConsultaMedicaCirugiaPlasticaReconstructiva>(0);
 	
 	private Set<Documento> documentosForEsAnulado = new HashSet<Documento>(0);
 	
 	private Set<Pedido> pedidosForEsPote = new HashSet<Pedido>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsVelashape = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDiabetes = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Usuario> usuariosForEsCuentaBloqueada = new HashSet<Usuario>(0);
 	
 	private Set<Organizacion> organizacionsForNotaDebitoUsesSeparator = new HashSet<Organizacion>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaYodo = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipotiroidismo = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<RenglonCompras> renglonComprases = new HashSet<RenglonCompras>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserQswitch = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuarios = new HashSet<UsuarioConfigurarUsuario>(0);
 	
 	private Set<Calendario> calendariosForEsEliminado = new HashSet<Calendario>(0);
 	
 	private Set<Usuario> usuariosForEsConfiguradoPerfil = new HashSet<Usuario>(0);
 	
 	private Set<Pedido> pedidosForEsDespachado = new HashSet<Pedido>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Documento> documentosForEsImpresa = new HashSet<Documento>(0);
 	
 	private Set<RenglonPedido> renglonPedidos = new HashSet<RenglonPedido>(0);
 	
 	private Set<Usuario> usuariosForPrintTicketCita = new HashSet<Usuario>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFuma = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<Documento> documentosForEsPagada = new HashSet<Documento>(0);
 	
 	private Set<Calendario> calendariosForEsRevisado = new HashSet<Calendario>(0);
 	
 	private Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsPublica = new HashSet<ConsultaMedicaFitnessNutricion>(0);
 	
 	private Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsAdulto = new HashSet<ConsultaMedicaOdontologica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaLicor = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserCo2 = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAsma = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTensionArterial = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcidoHialuronico = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsPublica = new HashSet<ConsultaMedicaCardiologia>(0);
 	
 	private Set<TipoProducto> tipoProductosForEsServicio = new HashSet<TipoProducto>(0);
 	
 	private Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsRadiofrecuencia = new HashSet<PersonaAntecedentesDermatoestetica>(0);
 	
 	private Set<RegistroPagoDocumento> registroPagoDocumentosForEsOtroImpuesto = new HashSet<RegistroPagoDocumento>(0);
 	
 	private Set<Organizacion> organizacionsForNotaCreditoUsesSeparator = new HashSet<Organizacion>(0);
 	
 	private Set<Usuario> usuariosForEsActiva = new HashSet<Usuario>(0);
 	
 	private Set<Pedido> pedidosForEsImpresa = new HashSet<Pedido>(0);
 	
 	private Set<Persona> personasForEsActiva = new HashSet<Persona>(0);
 	
 	private Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsActiva = new HashSet<ConsultaMedicaCardiologia>(0);

    public OpcionSino() {
    	// default constructor
    }

	
    public OpcionSino(String codigoOpcionSino, String nombreOpcionSino) {
        this.codigoOpcionSino = codigoOpcionSino;
        this.nombreOpcionSino = nombreOpcionSino;
    }
    public OpcionSino(String codigoOpcionSino, String nombreOpcionSino, String usuarioCreacion, Date fechaCreacion, String usuarioModificacion, Date fechaModificacion, Set<Persona> personasForEsEmbarazada, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIpl, Set<Usuario> usuariosForEsCuentaExpirada, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcnePapa, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsQuimioexfoliacion, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta, Set<Compras> comprasesForEsPagada, Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsActiva, Set<TipoProducto> tipoProductosForEsDeshabilitado, Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsActiva, Set<Organizacion> organizacionsForEsCondicionPacienteRequired, Set<ConsultaMedica> consultaMedicasForEsActiva, Set<Recipe> recipes, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico, Set<Organizacion> organizacionsForEsPersonaContactoRequired, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaHuevo, Set<TipoProductoAlmacen> tipoProductoAlmacens, Set<Compras> comprasesForEsBloqueada, Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions, Set<Organizacion> organizacionsForControlUsesSeparator, Set<TipoProducto> tipoProductosForEsIvaGeneral, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLimpiezaFacial, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDepilacionLaser, Set<Organizacion> organizacionsForEsConfiguradoPapeleria, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserErbium, Set<Pedido> pedidosForEsLiberado, Set<TipoProducto> tipoProductosForEsLote, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsUltracavitacion, Set<Vademecum> vademecums, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcneMama, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaCafe, Set<TipoProducto> tipoProductosForEsExento, Set<Organizacion> organizacionsForDocumentoUsesSeparator, Set<Persona> personasForEsPublica, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserGalaxy, Set<RegistroPagoDocumento> registroPagoDocumentosForEsIslr, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMenopausia, Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsEmbarazada, Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsActiva, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia, Set<TipoProductoOrganizacion> tipoProductoOrganizacions, Set<Compras> comprasesForEsCargadoInventario, Set<Organizacion> organizacionsForEsCasoActivo, Set<Usuario> usuariosForEsCredencialesExpiradas, Set<Organizacion> organizacionsForPrintTicketCita, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsSop, Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsPublica, Set<Organizacion> organizacionsForIdInventoryControl, Set<Organizacion> organizacionsForEsDoctorPrincipalRequired, Set<ConsultaMedica> consultaMedicasForEsPublica, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipertiroidismo, Set<Organizacion> organizacionsForEsHabilitado, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno, Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsPublica, Set<Organizacion> organizacionsForEsConfiguradoPagos, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsProtesisMamarias, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaMedicamento, Set<Usuario> usuariosForEsPinHabilitado, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserVbeam, Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsPublica, Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsActiva, Set<Documento> documentosForEsAnulado, Set<Pedido> pedidosForEsPote, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsVelashape, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDiabetes, Set<Usuario> usuariosForEsCuentaBloqueada, Set<Organizacion> organizacionsForNotaDebitoUsesSeparator, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaYodo, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipotiroidismo, Set<RenglonCompras> renglonComprases, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserQswitch, Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuarios, Set<Calendario> calendariosForEsEliminado, Set<Usuario> usuariosForEsConfiguradoPerfil, Set<Pedido> pedidosForEsDespachado, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno, Set<Documento> documentosForEsImpresa, Set<RenglonPedido> renglonPedidos, Set<Usuario> usuariosForPrintTicketCita, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFuma, Set<Documento> documentosForEsPagada, Set<Calendario> calendariosForEsRevisado, Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsPublica, Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsAdulto, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaLicor, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserCo2, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAsma, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTensionArterial, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcidoHialuronico, Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsPublica, Set<TipoProducto> tipoProductosForEsServicio, Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsRadiofrecuencia, Set<RegistroPagoDocumento> registroPagoDocumentosForEsOtroImpuesto, Set<Organizacion> organizacionsForNotaCreditoUsesSeparator, Set<Usuario> usuariosForEsActiva, Set<Pedido> pedidosForEsImpresa, Set<Persona> personasForEsActiva, Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsActiva) {
       this.codigoOpcionSino = codigoOpcionSino;
       this.nombreOpcionSino = nombreOpcionSino;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
       this.personasForEsEmbarazada = personasForEsEmbarazada;
       this.personaAntecedentesDermatoesteticasForEsIpl = personaAntecedentesDermatoesteticasForEsIpl;
       this.usuariosForEsCuentaExpirada = usuariosForEsCuentaExpirada;
       this.personaAntecedentesDermatoesteticasForEsAcnePapa = personaAntecedentesDermatoesteticasForEsAcnePapa;
       this.personaAntecedentesDermatoesteticasForEsQuimioexfoliacion = personaAntecedentesDermatoesteticasForEsQuimioexfoliacion;
       this.personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta = personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta;
       this.comprasesForEsPagada = comprasesForEsPagada;
       this.consultaMedicaFitnessNutricionsForEsActiva = consultaMedicaFitnessNutricionsForEsActiva;
       this.tipoProductosForEsDeshabilitado = tipoProductosForEsDeshabilitado;
       this.consultaMedicaOdontologicasForEsActiva = consultaMedicaOdontologicasForEsActiva;
       this.organizacionsForEsCondicionPacienteRequired = organizacionsForEsCondicionPacienteRequired;
       this.consultaMedicasForEsActiva = consultaMedicasForEsActiva;
       this.recipes = recipes;
       this.personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico = personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico;
       this.organizacionsForEsPersonaContactoRequired = organizacionsForEsPersonaContactoRequired;
       this.personaAntecedentesDermatoesteticasForEsAlergiaHuevo = personaAntecedentesDermatoesteticasForEsAlergiaHuevo;
       this.tipoProductoAlmacens = tipoProductoAlmacens;
       this.comprasesForEsBloqueada = comprasesForEsBloqueada;
       this.plantillaReporteOrganizacions = plantillaReporteOrganizacions;
       this.organizacionsForControlUsesSeparator = organizacionsForControlUsesSeparator;
       this.tipoProductosForEsIvaGeneral = tipoProductosForEsIvaGeneral;
       this.personaAntecedentesDermatoesteticasForEsLimpiezaFacial = personaAntecedentesDermatoesteticasForEsLimpiezaFacial;
       this.personaAntecedentesDermatoesteticasForEsDepilacionLaser = personaAntecedentesDermatoesteticasForEsDepilacionLaser;
       this.organizacionsForEsConfiguradoPapeleria = organizacionsForEsConfiguradoPapeleria;
       this.personaAntecedentesDermatoesteticasForEsLaserErbium = personaAntecedentesDermatoesteticasForEsLaserErbium;
       this.pedidosForEsLiberado = pedidosForEsLiberado;
       this.tipoProductosForEsLote = tipoProductosForEsLote;
       this.personaAntecedentesDermatoesteticasForEsUltracavitacion = personaAntecedentesDermatoesteticasForEsUltracavitacion;
       this.vademecums = vademecums;
       this.personaAntecedentesDermatoesteticasForEsAcneMama = personaAntecedentesDermatoesteticasForEsAcneMama;
       this.personaAntecedentesDermatoesteticasForEsTomaCafe = personaAntecedentesDermatoesteticasForEsTomaCafe;
       this.tipoProductosForEsExento = tipoProductosForEsExento;
       this.organizacionsForDocumentoUsesSeparator = organizacionsForDocumentoUsesSeparator;
       this.personasForEsPublica = personasForEsPublica;
       this.personaAntecedentesDermatoesteticasForEsLaserGalaxy = personaAntecedentesDermatoesteticasForEsLaserGalaxy;
       this.registroPagoDocumentosForEsIslr = registroPagoDocumentosForEsIslr;
       this.personaAntecedentesDermatoesteticasForEsMenopausia = personaAntecedentesDermatoesteticasForEsMenopausia;
       this.consultaMedicaObstetriciasForEsEmbarazada = consultaMedicaObstetriciasForEsEmbarazada;
       this.consultaMedicaObstetriciasForEsActiva = consultaMedicaObstetriciasForEsActiva;
       this.personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia = personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia;
       this.tipoProductoOrganizacions = tipoProductoOrganizacions;
       this.comprasesForEsCargadoInventario = comprasesForEsCargadoInventario;
       this.organizacionsForEsCasoActivo = organizacionsForEsCasoActivo;
       this.usuariosForEsCredencialesExpiradas = usuariosForEsCredencialesExpiradas;
       this.organizacionsForPrintTicketCita = organizacionsForPrintTicketCita;
       this.personaAntecedentesDermatoesteticasForEsSop = personaAntecedentesDermatoesteticasForEsSop;
       this.consultaMedicaOdontologicasForEsPublica = consultaMedicaOdontologicasForEsPublica;
       this.organizacionsForIdInventoryControl = organizacionsForIdInventoryControl;
       this.organizacionsForEsDoctorPrincipalRequired = organizacionsForEsDoctorPrincipalRequired;
       this.consultaMedicasForEsPublica = consultaMedicasForEsPublica;
       this.personaAntecedentesDermatoesteticasForEsHipertiroidismo = personaAntecedentesDermatoesteticasForEsHipertiroidismo;
       this.organizacionsForEsHabilitado = organizacionsForEsHabilitado;
       this.personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno = personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno;
       this.consultaMedicaCirugiaPlasticaReconstructivasForEsPublica = consultaMedicaCirugiaPlasticaReconstructivasForEsPublica;
       this.organizacionsForEsConfiguradoPagos = organizacionsForEsConfiguradoPagos;
       this.personaAntecedentesDermatoesteticasForEsProtesisMamarias = personaAntecedentesDermatoesteticasForEsProtesisMamarias;
       this.personaAntecedentesDermatoesteticasForEsAlergiaMedicamento = personaAntecedentesDermatoesteticasForEsAlergiaMedicamento;
       this.usuariosForEsPinHabilitado = usuariosForEsPinHabilitado;
       this.personaAntecedentesDermatoesteticasForEsLaserVbeam = personaAntecedentesDermatoesteticasForEsLaserVbeam;
       this.consultaMedicaObstetriciasForEsPublica = consultaMedicaObstetriciasForEsPublica;
       this.consultaMedicaCirugiaPlasticaReconstructivasForEsActiva = consultaMedicaCirugiaPlasticaReconstructivasForEsActiva;
       this.documentosForEsAnulado = documentosForEsAnulado;
       this.pedidosForEsPote = pedidosForEsPote;
       this.personaAntecedentesDermatoesteticasForEsVelashape = personaAntecedentesDermatoesteticasForEsVelashape;
       this.personaAntecedentesDermatoesteticasForEsDiabetes = personaAntecedentesDermatoesteticasForEsDiabetes;
       this.usuariosForEsCuentaBloqueada = usuariosForEsCuentaBloqueada;
       this.organizacionsForNotaDebitoUsesSeparator = organizacionsForNotaDebitoUsesSeparator;
       this.personaAntecedentesDermatoesteticasForEsAlergiaYodo = personaAntecedentesDermatoesteticasForEsAlergiaYodo;
       this.personaAntecedentesDermatoesteticasForEsHipotiroidismo = personaAntecedentesDermatoesteticasForEsHipotiroidismo;
       this.renglonComprases = renglonComprases;
       this.personaAntecedentesDermatoesteticasForEsLaserQswitch = personaAntecedentesDermatoesteticasForEsLaserQswitch;
       this.usuarioConfigurarUsuarios = usuarioConfigurarUsuarios;
       this.calendariosForEsEliminado = calendariosForEsEliminado;
       this.usuariosForEsConfiguradoPerfil = usuariosForEsConfiguradoPerfil;
       this.pedidosForEsDespachado = pedidosForEsDespachado;
       this.personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual = personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual;
       this.personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno = personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno;
       this.documentosForEsImpresa = documentosForEsImpresa;
       this.renglonPedidos = renglonPedidos;
       this.usuariosForPrintTicketCita = usuariosForPrintTicketCita;
       this.personaAntecedentesDermatoesteticasForEsFuma = personaAntecedentesDermatoesteticasForEsFuma;
       this.documentosForEsPagada = documentosForEsPagada;
       this.calendariosForEsRevisado = calendariosForEsRevisado;
       this.consultaMedicaFitnessNutricionsForEsPublica = consultaMedicaFitnessNutricionsForEsPublica;
       this.consultaMedicaOdontologicasForEsAdulto = consultaMedicaOdontologicasForEsAdulto;
       this.personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica = personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica;
       this.personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales = personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales;
       this.personaAntecedentesDermatoesteticasForEsTomaLicor = personaAntecedentesDermatoesteticasForEsTomaLicor;
       this.personaAntecedentesDermatoesteticasForEsLaserCo2 = personaAntecedentesDermatoesteticasForEsLaserCo2;
       this.personaAntecedentesDermatoesteticasForEsAsma = personaAntecedentesDermatoesteticasForEsAsma;
       this.personaAntecedentesDermatoesteticasForEsTensionArterial = personaAntecedentesDermatoesteticasForEsTensionArterial;
       this.personaAntecedentesDermatoesteticasForEsAcidoHialuronico = personaAntecedentesDermatoesteticasForEsAcidoHialuronico;
       this.consultaMedicaCardiologiasForEsPublica = consultaMedicaCardiologiasForEsPublica;
       this.tipoProductosForEsServicio = tipoProductosForEsServicio;
       this.personaAntecedentesDermatoesteticasForEsRadiofrecuencia = personaAntecedentesDermatoesteticasForEsRadiofrecuencia;
       this.registroPagoDocumentosForEsOtroImpuesto = registroPagoDocumentosForEsOtroImpuesto;
       this.organizacionsForNotaCreditoUsesSeparator = organizacionsForNotaCreditoUsesSeparator;
       this.usuariosForEsActiva = usuariosForEsActiva;
       this.pedidosForEsImpresa = pedidosForEsImpresa;
       this.personasForEsActiva = personasForEsActiva;
       this.consultaMedicaCardiologiasForEsActiva = consultaMedicaCardiologiasForEsActiva;
    }
   
  @GenericGenerator(name = "opcion_sino_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "opcion_sino_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "opcion_sino_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
    
    @Column(name="codigo_opcion_sino", unique=true, nullable=false, length=16)
    public String getCodigoOpcionSino() {
        return this.codigoOpcionSino;
    }
    
    public void setCodigoOpcionSino(String codigoOpcionSino) {
        this.codigoOpcionSino = codigoOpcionSino;
    }
    
    @Column(name="nombre_opcion_sino", nullable=false, length=64)
    public String getNombreOpcionSino() {
        return this.nombreOpcionSino;
    }
    
    public void setNombreOpcionSino(String nombreOpcionSino) {
        this.nombreOpcionSino = nombreOpcionSino;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_creacion", length=29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_modificacion", length=29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsEmbarazada")
    public Set<Persona> getPersonasForEsEmbarazada() {
        return this.personasForEsEmbarazada;
    }
    
    public void setPersonasForEsEmbarazada(Set<Persona> personasForEsEmbarazada) {
        this.personasForEsEmbarazada = personasForEsEmbarazada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsIpl")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsIpl() {
        return this.personaAntecedentesDermatoesteticasForEsIpl;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsIpl(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIpl) {
        this.personaAntecedentesDermatoesteticasForEsIpl = personaAntecedentesDermatoesteticasForEsIpl;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCuentaExpirada")
    public Set<Usuario> getUsuariosForEsCuentaExpirada() {
        return this.usuariosForEsCuentaExpirada;
    }
    
    public void setUsuariosForEsCuentaExpirada(Set<Usuario> usuariosForEsCuentaExpirada) {
        this.usuariosForEsCuentaExpirada = usuariosForEsCuentaExpirada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAcnePapa")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAcnePapa() {
        return this.personaAntecedentesDermatoesteticasForEsAcnePapa;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAcnePapa(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcnePapa) {
        this.personaAntecedentesDermatoesteticasForEsAcnePapa = personaAntecedentesDermatoesteticasForEsAcnePapa;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsQuimioexfoliacion")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsQuimioexfoliacion() {
        return this.personaAntecedentesDermatoesteticasForEsQuimioexfoliacion;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsQuimioexfoliacion(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsQuimioexfoliacion) {
        this.personaAntecedentesDermatoesteticasForEsQuimioexfoliacion = personaAntecedentesDermatoesteticasForEsQuimioexfoliacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPlasmaRicoPlaqueta")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta() {
        return this.personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta) {
        this.personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta = personaAntecedentesDermatoesteticasForEsPlasmaRicoPlaqueta;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPagada")
    public Set<Compras> getComprasesForEsPagada() {
        return this.comprasesForEsPagada;
    }
    
    public void setComprasesForEsPagada(Set<Compras> comprasesForEsPagada) {
        this.comprasesForEsPagada = comprasesForEsPagada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedicaFitnessNutricion> getConsultaMedicaFitnessNutricionsForEsActiva() {
        return this.consultaMedicaFitnessNutricionsForEsActiva;
    }
    
    public void setConsultaMedicaFitnessNutricionsForEsActiva(Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsActiva) {
        this.consultaMedicaFitnessNutricionsForEsActiva = consultaMedicaFitnessNutricionsForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDeshabilitado")
    public Set<TipoProducto> getTipoProductosForEsDeshabilitado() {
        return this.tipoProductosForEsDeshabilitado;
    }
    
    public void setTipoProductosForEsDeshabilitado(Set<TipoProducto> tipoProductosForEsDeshabilitado) {
        this.tipoProductosForEsDeshabilitado = tipoProductosForEsDeshabilitado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedicaOdontologica> getConsultaMedicaOdontologicasForEsActiva() {
        return this.consultaMedicaOdontologicasForEsActiva;
    }
    
    public void setConsultaMedicaOdontologicasForEsActiva(Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsActiva) {
        this.consultaMedicaOdontologicasForEsActiva = consultaMedicaOdontologicasForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCondicionPacienteRequired")
    public Set<Organizacion> getOrganizacionsForEsCondicionPacienteRequired() {
        return this.organizacionsForEsCondicionPacienteRequired;
    }
    
    public void setOrganizacionsForEsCondicionPacienteRequired(Set<Organizacion> organizacionsForEsCondicionPacienteRequired) {
        this.organizacionsForEsCondicionPacienteRequired = organizacionsForEsCondicionPacienteRequired;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedica> getConsultaMedicasForEsActiva() {
        return this.consultaMedicasForEsActiva;
    }
    
    public void setConsultaMedicasForEsActiva(Set<ConsultaMedica> consultaMedicasForEsActiva) {
        this.consultaMedicasForEsActiva = consultaMedicasForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<Recipe> getRecipes() {
        return this.recipes;
    }
    
    public void setRecipes(Set<Recipe> recipes) {
        this.recipes = recipes;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsMasajeDrenajeLinfatico")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico() {
        return this.personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico) {
        this.personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico = personaAntecedentesDermatoesteticasForEsMasajeDrenajeLinfatico;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPersonaContactoRequired")
    public Set<Organizacion> getOrganizacionsForEsPersonaContactoRequired() {
        return this.organizacionsForEsPersonaContactoRequired;
    }
    
    public void setOrganizacionsForEsPersonaContactoRequired(Set<Organizacion> organizacionsForEsPersonaContactoRequired) {
        this.organizacionsForEsPersonaContactoRequired = organizacionsForEsPersonaContactoRequired;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAlergiaHuevo")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAlergiaHuevo() {
        return this.personaAntecedentesDermatoesteticasForEsAlergiaHuevo;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAlergiaHuevo(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaHuevo) {
        this.personaAntecedentesDermatoesteticasForEsAlergiaHuevo = personaAntecedentesDermatoesteticasForEsAlergiaHuevo;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<TipoProductoAlmacen> getTipoProductoAlmacens() {
        return this.tipoProductoAlmacens;
    }
    
    public void setTipoProductoAlmacens(Set<TipoProductoAlmacen> tipoProductoAlmacens) {
        this.tipoProductoAlmacens = tipoProductoAlmacens;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsBloqueada")
    public Set<Compras> getComprasesForEsBloqueada() {
        return this.comprasesForEsBloqueada;
    }
    
    public void setComprasesForEsBloqueada(Set<Compras> comprasesForEsBloqueada) {
        this.comprasesForEsBloqueada = comprasesForEsBloqueada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<PlantillaReporteOrganizacion> getPlantillaReporteOrganizacions() {
        return this.plantillaReporteOrganizacions;
    }
    
    public void setPlantillaReporteOrganizacions(Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions) {
        this.plantillaReporteOrganizacions = plantillaReporteOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByControlUsesSeparator")
    public Set<Organizacion> getOrganizacionsForControlUsesSeparator() {
        return this.organizacionsForControlUsesSeparator;
    }
    
    public void setOrganizacionsForControlUsesSeparator(Set<Organizacion> organizacionsForControlUsesSeparator) {
        this.organizacionsForControlUsesSeparator = organizacionsForControlUsesSeparator;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsIvaGeneral")
    public Set<TipoProducto> getTipoProductosForEsIvaGeneral() {
        return this.tipoProductosForEsIvaGeneral;
    }
    
    public void setTipoProductosForEsIvaGeneral(Set<TipoProducto> tipoProductosForEsIvaGeneral) {
        this.tipoProductosForEsIvaGeneral = tipoProductosForEsIvaGeneral;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLimpiezaFacial")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLimpiezaFacial() {
        return this.personaAntecedentesDermatoesteticasForEsLimpiezaFacial;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLimpiezaFacial(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLimpiezaFacial) {
        this.personaAntecedentesDermatoesteticasForEsLimpiezaFacial = personaAntecedentesDermatoesteticasForEsLimpiezaFacial;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDepilacionLaser")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsDepilacionLaser() {
        return this.personaAntecedentesDermatoesteticasForEsDepilacionLaser;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsDepilacionLaser(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDepilacionLaser) {
        this.personaAntecedentesDermatoesteticasForEsDepilacionLaser = personaAntecedentesDermatoesteticasForEsDepilacionLaser;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsConfiguradoPapeleria")
    public Set<Organizacion> getOrganizacionsForEsConfiguradoPapeleria() {
        return this.organizacionsForEsConfiguradoPapeleria;
    }
    
    public void setOrganizacionsForEsConfiguradoPapeleria(Set<Organizacion> organizacionsForEsConfiguradoPapeleria) {
        this.organizacionsForEsConfiguradoPapeleria = organizacionsForEsConfiguradoPapeleria;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLaserErbium")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLaserErbium() {
        return this.personaAntecedentesDermatoesteticasForEsLaserErbium;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLaserErbium(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserErbium) {
        this.personaAntecedentesDermatoesteticasForEsLaserErbium = personaAntecedentesDermatoesteticasForEsLaserErbium;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLiberado")
    public Set<Pedido> getPedidosForEsLiberado() {
        return this.pedidosForEsLiberado;
    }
    
    public void setPedidosForEsLiberado(Set<Pedido> pedidosForEsLiberado) {
        this.pedidosForEsLiberado = pedidosForEsLiberado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLote")
    public Set<TipoProducto> getTipoProductosForEsLote() {
        return this.tipoProductosForEsLote;
    }
    
    public void setTipoProductosForEsLote(Set<TipoProducto> tipoProductosForEsLote) {
        this.tipoProductosForEsLote = tipoProductosForEsLote;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsUltracavitacion")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsUltracavitacion() {
        return this.personaAntecedentesDermatoesteticasForEsUltracavitacion;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsUltracavitacion(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsUltracavitacion) {
        this.personaAntecedentesDermatoesteticasForEsUltracavitacion = personaAntecedentesDermatoesteticasForEsUltracavitacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<Vademecum> getVademecums() {
        return this.vademecums;
    }
    
    public void setVademecums(Set<Vademecum> vademecums) {
        this.vademecums = vademecums;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAcneMama")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAcneMama() {
        return this.personaAntecedentesDermatoesteticasForEsAcneMama;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAcneMama(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcneMama) {
        this.personaAntecedentesDermatoesteticasForEsAcneMama = personaAntecedentesDermatoesteticasForEsAcneMama;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsTomaCafe")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsTomaCafe() {
        return this.personaAntecedentesDermatoesteticasForEsTomaCafe;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsTomaCafe(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaCafe) {
        this.personaAntecedentesDermatoesteticasForEsTomaCafe = personaAntecedentesDermatoesteticasForEsTomaCafe;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsExento")
    public Set<TipoProducto> getTipoProductosForEsExento() {
        return this.tipoProductosForEsExento;
    }
    
    public void setTipoProductosForEsExento(Set<TipoProducto> tipoProductosForEsExento) {
        this.tipoProductosForEsExento = tipoProductosForEsExento;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByDocumentoUsesSeparator")
    public Set<Organizacion> getOrganizacionsForDocumentoUsesSeparator() {
        return this.organizacionsForDocumentoUsesSeparator;
    }
    
    public void setOrganizacionsForDocumentoUsesSeparator(Set<Organizacion> organizacionsForDocumentoUsesSeparator) {
        this.organizacionsForDocumentoUsesSeparator = organizacionsForDocumentoUsesSeparator;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<Persona> getPersonasForEsPublica() {
        return this.personasForEsPublica;
    }
    
    public void setPersonasForEsPublica(Set<Persona> personasForEsPublica) {
        this.personasForEsPublica = personasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLaserGalaxy")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLaserGalaxy() {
        return this.personaAntecedentesDermatoesteticasForEsLaserGalaxy;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLaserGalaxy(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserGalaxy) {
        this.personaAntecedentesDermatoesteticasForEsLaserGalaxy = personaAntecedentesDermatoesteticasForEsLaserGalaxy;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsIslr")
    public Set<RegistroPagoDocumento> getRegistroPagoDocumentosForEsIslr() {
        return this.registroPagoDocumentosForEsIslr;
    }
    
    public void setRegistroPagoDocumentosForEsIslr(Set<RegistroPagoDocumento> registroPagoDocumentosForEsIslr) {
        this.registroPagoDocumentosForEsIslr = registroPagoDocumentosForEsIslr;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsMenopausia")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsMenopausia() {
        return this.personaAntecedentesDermatoesteticasForEsMenopausia;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsMenopausia(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsMenopausia) {
        this.personaAntecedentesDermatoesteticasForEsMenopausia = personaAntecedentesDermatoesteticasForEsMenopausia;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsEmbarazada")
    public Set<ConsultaMedicaObstetricia> getConsultaMedicaObstetriciasForEsEmbarazada() {
        return this.consultaMedicaObstetriciasForEsEmbarazada;
    }
    
    public void setConsultaMedicaObstetriciasForEsEmbarazada(Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsEmbarazada) {
        this.consultaMedicaObstetriciasForEsEmbarazada = consultaMedicaObstetriciasForEsEmbarazada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedicaObstetricia> getConsultaMedicaObstetriciasForEsActiva() {
        return this.consultaMedicaObstetriciasForEsActiva;
    }
    
    public void setConsultaMedicaObstetriciasForEsActiva(Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsActiva) {
        this.consultaMedicaObstetriciasForEsActiva = consultaMedicaObstetriciasForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCirugiaDermolipectomia")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia() {
        return this.personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia) {
        this.personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia = personaAntecedentesDermatoesteticasForEsCirugiaDermolipectomia;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<TipoProductoOrganizacion> getTipoProductoOrganizacions() {
        return this.tipoProductoOrganizacions;
    }
    
    public void setTipoProductoOrganizacions(Set<TipoProductoOrganizacion> tipoProductoOrganizacions) {
        this.tipoProductoOrganizacions = tipoProductoOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCargadoInventario")
    public Set<Compras> getComprasesForEsCargadoInventario() {
        return this.comprasesForEsCargadoInventario;
    }
    
    public void setComprasesForEsCargadoInventario(Set<Compras> comprasesForEsCargadoInventario) {
        this.comprasesForEsCargadoInventario = comprasesForEsCargadoInventario;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCasoActivo")
    public Set<Organizacion> getOrganizacionsForEsCasoActivo() {
        return this.organizacionsForEsCasoActivo;
    }
    
    public void setOrganizacionsForEsCasoActivo(Set<Organizacion> organizacionsForEsCasoActivo) {
        this.organizacionsForEsCasoActivo = organizacionsForEsCasoActivo;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCredencialesExpiradas")
    public Set<Usuario> getUsuariosForEsCredencialesExpiradas() {
        return this.usuariosForEsCredencialesExpiradas;
    }
    
    public void setUsuariosForEsCredencialesExpiradas(Set<Usuario> usuariosForEsCredencialesExpiradas) {
        this.usuariosForEsCredencialesExpiradas = usuariosForEsCredencialesExpiradas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByPrintTicketCita")
    public Set<Organizacion> getOrganizacionsForPrintTicketCita() {
        return this.organizacionsForPrintTicketCita;
    }
    
    public void setOrganizacionsForPrintTicketCita(Set<Organizacion> organizacionsForPrintTicketCita) {
        this.organizacionsForPrintTicketCita = organizacionsForPrintTicketCita;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsSop")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsSop() {
        return this.personaAntecedentesDermatoesteticasForEsSop;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsSop(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsSop) {
        this.personaAntecedentesDermatoesteticasForEsSop = personaAntecedentesDermatoesteticasForEsSop;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedicaOdontologica> getConsultaMedicaOdontologicasForEsPublica() {
        return this.consultaMedicaOdontologicasForEsPublica;
    }
    
    public void setConsultaMedicaOdontologicasForEsPublica(Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsPublica) {
        this.consultaMedicaOdontologicasForEsPublica = consultaMedicaOdontologicasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByIdInventoryControl")
    public Set<Organizacion> getOrganizacionsForIdInventoryControl() {
        return this.organizacionsForIdInventoryControl;
    }
    
    public void setOrganizacionsForIdInventoryControl(Set<Organizacion> organizacionsForIdInventoryControl) {
        this.organizacionsForIdInventoryControl = organizacionsForIdInventoryControl;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDoctorPrincipalRequired")
    public Set<Organizacion> getOrganizacionsForEsDoctorPrincipalRequired() {
        return this.organizacionsForEsDoctorPrincipalRequired;
    }
    
    public void setOrganizacionsForEsDoctorPrincipalRequired(Set<Organizacion> organizacionsForEsDoctorPrincipalRequired) {
        this.organizacionsForEsDoctorPrincipalRequired = organizacionsForEsDoctorPrincipalRequired;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedica> getConsultaMedicasForEsPublica() {
        return this.consultaMedicasForEsPublica;
    }
    
    public void setConsultaMedicasForEsPublica(Set<ConsultaMedica> consultaMedicasForEsPublica) {
        this.consultaMedicasForEsPublica = consultaMedicasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsHipertiroidismo")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsHipertiroidismo() {
        return this.personaAntecedentesDermatoesteticasForEsHipertiroidismo;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsHipertiroidismo(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipertiroidismo) {
        this.personaAntecedentesDermatoesteticasForEsHipertiroidismo = personaAntecedentesDermatoesteticasForEsHipertiroidismo;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsHabilitado")
    public Set<Organizacion> getOrganizacionsForEsHabilitado() {
        return this.organizacionsForEsHabilitado;
    }
    
    public void setOrganizacionsForEsHabilitado(Set<Organizacion> organizacionsForEsHabilitado) {
        this.organizacionsForEsHabilitado = organizacionsForEsHabilitado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsFamiliaCalviciePaterno")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno() {
        return this.personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno) {
        this.personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno = personaAntecedentesDermatoesteticasForEsFamiliaCalviciePaterno;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedicaCirugiaPlasticaReconstructiva> getConsultaMedicaCirugiaPlasticaReconstructivasForEsPublica() {
        return this.consultaMedicaCirugiaPlasticaReconstructivasForEsPublica;
    }
    
    public void setConsultaMedicaCirugiaPlasticaReconstructivasForEsPublica(Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsPublica) {
        this.consultaMedicaCirugiaPlasticaReconstructivasForEsPublica = consultaMedicaCirugiaPlasticaReconstructivasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsConfiguradoPagos")
    public Set<Organizacion> getOrganizacionsForEsConfiguradoPagos() {
        return this.organizacionsForEsConfiguradoPagos;
    }
    
    public void setOrganizacionsForEsConfiguradoPagos(Set<Organizacion> organizacionsForEsConfiguradoPagos) {
        this.organizacionsForEsConfiguradoPagos = organizacionsForEsConfiguradoPagos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsProtesisMamarias")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsProtesisMamarias() {
        return this.personaAntecedentesDermatoesteticasForEsProtesisMamarias;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsProtesisMamarias(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsProtesisMamarias) {
        this.personaAntecedentesDermatoesteticasForEsProtesisMamarias = personaAntecedentesDermatoesteticasForEsProtesisMamarias;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAlergiaMedicamento")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAlergiaMedicamento() {
        return this.personaAntecedentesDermatoesteticasForEsAlergiaMedicamento;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAlergiaMedicamento(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaMedicamento) {
        this.personaAntecedentesDermatoesteticasForEsAlergiaMedicamento = personaAntecedentesDermatoesteticasForEsAlergiaMedicamento;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPinHabilitado")
    public Set<Usuario> getUsuariosForEsPinHabilitado() {
        return this.usuariosForEsPinHabilitado;
    }
    
    public void setUsuariosForEsPinHabilitado(Set<Usuario> usuariosForEsPinHabilitado) {
        this.usuariosForEsPinHabilitado = usuariosForEsPinHabilitado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLaserVbeam")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLaserVbeam() {
        return this.personaAntecedentesDermatoesteticasForEsLaserVbeam;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLaserVbeam(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserVbeam) {
        this.personaAntecedentesDermatoesteticasForEsLaserVbeam = personaAntecedentesDermatoesteticasForEsLaserVbeam;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedicaObstetricia> getConsultaMedicaObstetriciasForEsPublica() {
        return this.consultaMedicaObstetriciasForEsPublica;
    }
    
    public void setConsultaMedicaObstetriciasForEsPublica(Set<ConsultaMedicaObstetricia> consultaMedicaObstetriciasForEsPublica) {
        this.consultaMedicaObstetriciasForEsPublica = consultaMedicaObstetriciasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedicaCirugiaPlasticaReconstructiva> getConsultaMedicaCirugiaPlasticaReconstructivasForEsActiva() {
        return this.consultaMedicaCirugiaPlasticaReconstructivasForEsActiva;
    }
    
    public void setConsultaMedicaCirugiaPlasticaReconstructivasForEsActiva(Set<ConsultaMedicaCirugiaPlasticaReconstructiva> consultaMedicaCirugiaPlasticaReconstructivasForEsActiva) {
        this.consultaMedicaCirugiaPlasticaReconstructivasForEsActiva = consultaMedicaCirugiaPlasticaReconstructivasForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAnulado")
    public Set<Documento> getDocumentosForEsAnulado() {
        return this.documentosForEsAnulado;
    }
    
    public void setDocumentosForEsAnulado(Set<Documento> documentosForEsAnulado) {
        this.documentosForEsAnulado = documentosForEsAnulado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPote")
    public Set<Pedido> getPedidosForEsPote() {
        return this.pedidosForEsPote;
    }
    
    public void setPedidosForEsPote(Set<Pedido> pedidosForEsPote) {
        this.pedidosForEsPote = pedidosForEsPote;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsVelashape")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsVelashape() {
        return this.personaAntecedentesDermatoesteticasForEsVelashape;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsVelashape(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsVelashape) {
        this.personaAntecedentesDermatoesteticasForEsVelashape = personaAntecedentesDermatoesteticasForEsVelashape;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDiabetes")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsDiabetes() {
        return this.personaAntecedentesDermatoesteticasForEsDiabetes;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsDiabetes(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDiabetes) {
        this.personaAntecedentesDermatoesteticasForEsDiabetes = personaAntecedentesDermatoesteticasForEsDiabetes;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsCuentaBloqueada")
    public Set<Usuario> getUsuariosForEsCuentaBloqueada() {
        return this.usuariosForEsCuentaBloqueada;
    }
    
    public void setUsuariosForEsCuentaBloqueada(Set<Usuario> usuariosForEsCuentaBloqueada) {
        this.usuariosForEsCuentaBloqueada = usuariosForEsCuentaBloqueada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByNotaDebitoUsesSeparator")
    public Set<Organizacion> getOrganizacionsForNotaDebitoUsesSeparator() {
        return this.organizacionsForNotaDebitoUsesSeparator;
    }
    
    public void setOrganizacionsForNotaDebitoUsesSeparator(Set<Organizacion> organizacionsForNotaDebitoUsesSeparator) {
        this.organizacionsForNotaDebitoUsesSeparator = organizacionsForNotaDebitoUsesSeparator;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAlergiaYodo")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAlergiaYodo() {
        return this.personaAntecedentesDermatoesteticasForEsAlergiaYodo;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAlergiaYodo(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAlergiaYodo) {
        this.personaAntecedentesDermatoesteticasForEsAlergiaYodo = personaAntecedentesDermatoesteticasForEsAlergiaYodo;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsHipotiroidismo")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsHipotiroidismo() {
        return this.personaAntecedentesDermatoesteticasForEsHipotiroidismo;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsHipotiroidismo(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsHipotiroidismo) {
        this.personaAntecedentesDermatoesteticasForEsHipotiroidismo = personaAntecedentesDermatoesteticasForEsHipotiroidismo;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<RenglonCompras> getRenglonComprases() {
        return this.renglonComprases;
    }
    
    public void setRenglonComprases(Set<RenglonCompras> renglonComprases) {
        this.renglonComprases = renglonComprases;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLaserQswitch")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLaserQswitch() {
        return this.personaAntecedentesDermatoesteticasForEsLaserQswitch;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLaserQswitch(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserQswitch) {
        this.personaAntecedentesDermatoesteticasForEsLaserQswitch = personaAntecedentesDermatoesteticasForEsLaserQswitch;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<UsuarioConfigurarUsuario> getUsuarioConfigurarUsuarios() {
        return this.usuarioConfigurarUsuarios;
    }
    
    public void setUsuarioConfigurarUsuarios(Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuarios) {
        this.usuarioConfigurarUsuarios = usuarioConfigurarUsuarios;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsEliminado")
    public Set<Calendario> getCalendariosForEsEliminado() {
        return this.calendariosForEsEliminado;
    }
    
    public void setCalendariosForEsEliminado(Set<Calendario> calendariosForEsEliminado) {
        this.calendariosForEsEliminado = calendariosForEsEliminado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsConfiguradoPerfil")
    public Set<Usuario> getUsuariosForEsConfiguradoPerfil() {
        return this.usuariosForEsConfiguradoPerfil;
    }
    
    public void setUsuariosForEsConfiguradoPerfil(Set<Usuario> usuariosForEsConfiguradoPerfil) {
        this.usuariosForEsConfiguradoPerfil = usuariosForEsConfiguradoPerfil;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDespachado")
    public Set<Pedido> getPedidosForEsDespachado() {
        return this.pedidosForEsDespachado;
    }
    
    public void setPedidosForEsDespachado(Set<Pedido> pedidosForEsDespachado) {
        this.pedidosForEsDespachado = pedidosForEsDespachado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsDolorPeriodoMenstrual")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual() {
        return this.personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual) {
        this.personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual = personaAntecedentesDermatoesteticasForEsDolorPeriodoMenstrual;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsFamiliaCalvicieMaterno")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno() {
        return this.personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno) {
        this.personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno = personaAntecedentesDermatoesteticasForEsFamiliaCalvicieMaterno;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsImpresa")
    public Set<Documento> getDocumentosForEsImpresa() {
        return this.documentosForEsImpresa;
    }
    
    public void setDocumentosForEsImpresa(Set<Documento> documentosForEsImpresa) {
        this.documentosForEsImpresa = documentosForEsImpresa;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSino")
    public Set<RenglonPedido> getRenglonPedidos() {
        return this.renglonPedidos;
    }
    
    public void setRenglonPedidos(Set<RenglonPedido> renglonPedidos) {
        this.renglonPedidos = renglonPedidos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByPrintTicketCita")
    public Set<Usuario> getUsuariosForPrintTicketCita() {
        return this.usuariosForPrintTicketCita;
    }
    
    public void setUsuariosForPrintTicketCita(Set<Usuario> usuariosForPrintTicketCita) {
        this.usuariosForPrintTicketCita = usuariosForPrintTicketCita;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsFuma")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsFuma() {
        return this.personaAntecedentesDermatoesteticasForEsFuma;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsFuma(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsFuma) {
        this.personaAntecedentesDermatoesteticasForEsFuma = personaAntecedentesDermatoesteticasForEsFuma;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPagada")
    public Set<Documento> getDocumentosForEsPagada() {
        return this.documentosForEsPagada;
    }
    
    public void setDocumentosForEsPagada(Set<Documento> documentosForEsPagada) {
        this.documentosForEsPagada = documentosForEsPagada;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsRevisado")
    public Set<Calendario> getCalendariosForEsRevisado() {
        return this.calendariosForEsRevisado;
    }
    
    public void setCalendariosForEsRevisado(Set<Calendario> calendariosForEsRevisado) {
        this.calendariosForEsRevisado = calendariosForEsRevisado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedicaFitnessNutricion> getConsultaMedicaFitnessNutricionsForEsPublica() {
        return this.consultaMedicaFitnessNutricionsForEsPublica;
    }
    
    public void setConsultaMedicaFitnessNutricionsForEsPublica(Set<ConsultaMedicaFitnessNutricion> consultaMedicaFitnessNutricionsForEsPublica) {
        this.consultaMedicaFitnessNutricionsForEsPublica = consultaMedicaFitnessNutricionsForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAdulto")
    public Set<ConsultaMedicaOdontologica> getConsultaMedicaOdontologicasForEsAdulto() {
        return this.consultaMedicaOdontologicasForEsAdulto;
    }
    
    public void setConsultaMedicaOdontologicasForEsAdulto(Set<ConsultaMedicaOdontologica> consultaMedicaOdontologicasForEsAdulto) {
        this.consultaMedicaOdontologicasForEsAdulto = consultaMedicaOdontologicasForEsAdulto;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsIntervencionQuirurgica")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsIntervencionQuirurgica() {
        return this.personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsIntervencionQuirurgica(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica) {
        this.personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica = personaAntecedentesDermatoesteticasForEsIntervencionQuirurgica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAnticonceptivosOrales")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAnticonceptivosOrales() {
        return this.personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAnticonceptivosOrales(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales) {
        this.personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales = personaAntecedentesDermatoesteticasForEsAnticonceptivosOrales;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsTomaLicor")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsTomaLicor() {
        return this.personaAntecedentesDermatoesteticasForEsTomaLicor;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsTomaLicor(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTomaLicor) {
        this.personaAntecedentesDermatoesteticasForEsTomaLicor = personaAntecedentesDermatoesteticasForEsTomaLicor;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsLaserCo2")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsLaserCo2() {
        return this.personaAntecedentesDermatoesteticasForEsLaserCo2;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsLaserCo2(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsLaserCo2) {
        this.personaAntecedentesDermatoesteticasForEsLaserCo2 = personaAntecedentesDermatoesteticasForEsLaserCo2;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAsma")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAsma() {
        return this.personaAntecedentesDermatoesteticasForEsAsma;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAsma(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAsma) {
        this.personaAntecedentesDermatoesteticasForEsAsma = personaAntecedentesDermatoesteticasForEsAsma;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsTensionArterial")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsTensionArterial() {
        return this.personaAntecedentesDermatoesteticasForEsTensionArterial;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsTensionArterial(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsTensionArterial) {
        this.personaAntecedentesDermatoesteticasForEsTensionArterial = personaAntecedentesDermatoesteticasForEsTensionArterial;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsAcidoHialuronico")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsAcidoHialuronico() {
        return this.personaAntecedentesDermatoesteticasForEsAcidoHialuronico;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsAcidoHialuronico(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsAcidoHialuronico) {
        this.personaAntecedentesDermatoesteticasForEsAcidoHialuronico = personaAntecedentesDermatoesteticasForEsAcidoHialuronico;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsPublica")
    public Set<ConsultaMedicaCardiologia> getConsultaMedicaCardiologiasForEsPublica() {
        return this.consultaMedicaCardiologiasForEsPublica;
    }
    
    public void setConsultaMedicaCardiologiasForEsPublica(Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsPublica) {
        this.consultaMedicaCardiologiasForEsPublica = consultaMedicaCardiologiasForEsPublica;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsServicio")
    public Set<TipoProducto> getTipoProductosForEsServicio() {
        return this.tipoProductosForEsServicio;
    }
    
    public void setTipoProductosForEsServicio(Set<TipoProducto> tipoProductosForEsServicio) {
        this.tipoProductosForEsServicio = tipoProductosForEsServicio;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsRadiofrecuencia")
    public Set<PersonaAntecedentesDermatoestetica> getPersonaAntecedentesDermatoesteticasForEsRadiofrecuencia() {
        return this.personaAntecedentesDermatoesteticasForEsRadiofrecuencia;
    }
    
    public void setPersonaAntecedentesDermatoesteticasForEsRadiofrecuencia(Set<PersonaAntecedentesDermatoestetica> personaAntecedentesDermatoesteticasForEsRadiofrecuencia) {
        this.personaAntecedentesDermatoesteticasForEsRadiofrecuencia = personaAntecedentesDermatoesteticasForEsRadiofrecuencia;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsOtroImpuesto")
    public Set<RegistroPagoDocumento> getRegistroPagoDocumentosForEsOtroImpuesto() {
        return this.registroPagoDocumentosForEsOtroImpuesto;
    }
    
    public void setRegistroPagoDocumentosForEsOtroImpuesto(Set<RegistroPagoDocumento> registroPagoDocumentosForEsOtroImpuesto) {
        this.registroPagoDocumentosForEsOtroImpuesto = registroPagoDocumentosForEsOtroImpuesto;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByNotaCreditoUsesSeparator")
    public Set<Organizacion> getOrganizacionsForNotaCreditoUsesSeparator() {
        return this.organizacionsForNotaCreditoUsesSeparator;
    }
    
    public void setOrganizacionsForNotaCreditoUsesSeparator(Set<Organizacion> organizacionsForNotaCreditoUsesSeparator) {
        this.organizacionsForNotaCreditoUsesSeparator = organizacionsForNotaCreditoUsesSeparator;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<Usuario> getUsuariosForEsActiva() {
        return this.usuariosForEsActiva;
    }
    
    public void setUsuariosForEsActiva(Set<Usuario> usuariosForEsActiva) {
        this.usuariosForEsActiva = usuariosForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsImpresa")
    public Set<Pedido> getPedidosForEsImpresa() {
        return this.pedidosForEsImpresa;
    }
    
    public void setPedidosForEsImpresa(Set<Pedido> pedidosForEsImpresa) {
        this.pedidosForEsImpresa = pedidosForEsImpresa;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<Persona> getPersonasForEsActiva() {
        return this.personasForEsActiva;
    }
    
    public void setPersonasForEsActiva(Set<Persona> personasForEsActiva) {
        this.personasForEsActiva = personasForEsActiva;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="opcionSinoByEsActiva")
    public Set<ConsultaMedicaCardiologia> getConsultaMedicaCardiologiasForEsActiva() {
        return this.consultaMedicaCardiologiasForEsActiva;
    }
    
    public void setConsultaMedicaCardiologiasForEsActiva(Set<ConsultaMedicaCardiologia> consultaMedicaCardiologiasForEsActiva) {
        this.consultaMedicaCardiologiasForEsActiva = consultaMedicaCardiologiasForEsActiva;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("codigoOpcionSino").append("='").append(getCodigoOpcionSino()).append("' ");			
      buffer.append("nombreOpcionSino").append("='").append(getNombreOpcionSino()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof OpcionSino)) 
		 	return false;
		 	
		 OpcionSino castOther = ( OpcionSino ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
    }
    
    public void fillPOJO() {
    }
    
    public OpcionSino createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

