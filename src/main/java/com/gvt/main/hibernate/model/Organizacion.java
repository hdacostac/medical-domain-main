package com.gvt.main.hibernate.model;
// Generated 21-jul-2019 22:45:07 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.domain.types.Auditable;
import com.gvt.domain.types.Cleanable;
import com.gvt.domain.types.Fillable;
import com.gvt.domain.types.Identificable;
import com.gvt.domain.types.Seleccionable;
import com.gvt.domain.types.Versionable;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * Organizacion generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="organizacion"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames={"rif_organizacion", "id_organizacion_padre"}) 
)
public class Organizacion  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private TipoOrganizacion tipoOrganizacion;
 	
 	private OpcionSino opcionSinoByEsConfiguradoPapeleria;
 	
 	private OpcionSino opcionSinoByNotaDebitoUsesSeparator;
 	
 	private UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaPais;
 	
 	private OpcionSino opcionSinoByEsConfiguradoPagos;
 	
 	private OpcionSino opcionSinoByPrintTicketCita;
 	
 	private OpcionSino opcionSinoByDocumentoUsesSeparator;
 	
 	private OpcionSino opcionSinoByEsCasoActivo;
 	
 	private OpcionSino opcionSinoByEsCondicionPacienteRequired;
 	
 	private OpcionSino opcionSinoByEsHabilitado;
 	
 	private OpcionSino opcionSinoByIdInventoryControl;
 	
 	private Organizacion organizacion;
 	
 	private OpcionSino opcionSinoByEsDoctorPrincipalRequired;
 	
 	private OpcionSino opcionSinoByNotaCreditoUsesSeparator;
 	
 	private OpcionSino opcionSinoByEsPersonaContactoRequired;
 	
 	private UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaEstado;
 	
 	private OpcionSino opcionSinoByControlUsesSeparator;
 	
 	private Almacen almacen;
 	
 	private String rifOrganizacion;
 	
 	private String nitOrganizacion;
 	
 	private String razonOrganizacion;
 	
 	private String telefonoFijoOrganizacion;
 	
 	private String telefonoSecundarioOrganizacion;
 	
 	private String EMailOrganizacion;
 	
 	private String direccionOrganizacion;
 	
 	private String cabecera;
 	
 	private Integer rellenoCerosDocumento;
 	
 	private Integer rellenoCerosControl;
 	
 	private Integer rellenoCerosPrefijoDocumento;
 	
 	private Integer rellenoCerosPrefijoControl;
 	
 	private String url1;
 	
 	private String url1FileName;
 	
 	private Double url1FileSize;
 	
 	private String formatoCabecera;
 	
 	private String formatoPiePagina;
 	
 	private String formatoFirma;
 	
 	private Long nextNroPedido;
 	
 	private Long nextNroHistoria;
 	
 	private Long nextNroCaso;
 	
 	private Long nextNroOrdenSalidaExpediente;
 	
 	private Long nextNroSolicitudExpediente;
 	
 	private Long nextNroEmpleado;
 	
 	private Long nextNroAcreedor;
 	
 	private Long nextNroMiscelaneo;
 	
 	private Long nextNroCompra;
 	
 	private String numeroImpFiscal;
 	
 	private Integer prefijoControlOrganizacion;
 	
 	private Integer prefijoTd001Organizacion;
 	
 	private Integer prefijoTd002Organizacion;
 	
 	private Integer prefijoTd003Organizacion;
 	
 	private Integer prefijoTd004Organizacion;
 	
 	private Integer prefijoTd005Organizacion;
 	
 	private Integer prefijoTd006Organizacion;
 	
 	private Integer prefijoTd007Organizacion;
 	
 	private Integer prefijoTd008Organizacion;
 	
 	private Integer prefijoTd009Organizacion;
 	
 	private Integer prefijoTd010Organizacion;
 	
 	private Integer prefijoTd011Organizacion;
 	
 	private Integer prefijoTd012Organizacion;
 	
 	private Integer prefijoTd013Organizacion;
 	
 	private Integer prefijoTd014Organizacion;
 	
 	private Integer prefijoTd015Organizacion;
 	
 	private Long idClienteAdminpanel;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private Date fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private Date fechaModificacion;
 	
 	private Set<Almacen> almacens = new HashSet<Almacen>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio6 = new HashSet<HorarioMedico>(0);
 	
 	private Set<Pedido> pedidos = new HashSet<Pedido>(0);
 	
 	private Set<ExternalDataSource> externalDataSources = new HashSet<ExternalDataSource>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio3 = new HashSet<HorarioMedico>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio8 = new HashSet<HorarioMedico>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSede = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<HorarioExtra> horarioExtras = new HashSet<HorarioExtra>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacionsForIdOrganizacion = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<Recipe> recipes = new HashSet<Recipe>(0);
 	
 	private Set<Rol> rols = new HashSet<Rol>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio5 = new HashSet<HorarioMedico>(0);
 	
 	private Set<VademecumIndicacion> vademecumIndicacions = new HashSet<VademecumIndicacion>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSedeDefault = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<CalendarioIncidencias> calendarioIncidenciases = new HashSet<CalendarioIncidencias>(0);
 	
 	private Set<PatologiaOrganizacion> patologiaOrganizacions = new HashSet<PatologiaOrganizacion>(0);
 	
 	private Set<Compras> comprases = new HashSet<Compras>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio7 = new HashSet<HorarioMedico>(0);
 	
 	private Set<Persona> personas = new HashSet<Persona>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio2 = new HashSet<HorarioMedico>(0);
 	
 	private Set<Vademecum> vademecums = new HashSet<Vademecum>(0);
 	
 	private Set<CitasPendientes> citasPendienteses = new HashSet<CitasPendientes>(0);
 	
 	private Set<Calendario> calendarios = new HashSet<Calendario>(0);
 	
 	private Set<Caja> cajas = new HashSet<Caja>(0);
 	
 	private Set<ReporteContenido> reporteContenidos = new HashSet<ReporteContenido>(0);
 	
 	private Set<CategoriaProducto> categoriaProductos = new HashSet<CategoriaProducto>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio4 = new HashSet<HorarioMedico>(0);
 	
 	private Set<Documento> documentos = new HashSet<Documento>(0);
 	
 	private Set<HorarioMedico> horarioMedicosForIdSedeInicio1 = new HashSet<HorarioMedico>(0);
 	
 	private Set<TipoProductoOrganizacion> tipoProductoOrganizacions = new HashSet<TipoProductoOrganizacion>(0);
 	
 	private Set<AusenciasMedico> ausenciasMedicos = new HashSet<AusenciasMedico>(0);
 	
 	private Set<MotivoCalendarioOrganizacion> motivoCalendarioOrganizacions = new HashSet<MotivoCalendarioOrganizacion>(0);
 	
 	private Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions = new HashSet<PlantillaReporteOrganizacion>(0);
 	
 	private Set<TipoProducto> tipoProductos = new HashSet<TipoProducto>(0);
 	
 	private Set<GastosAdministrativos> gastosAdministrativoses = new HashSet<GastosAdministrativos>(0);
 	
 	private Set<Organizacion> organizacions = new HashSet<Organizacion>(0);

    public Organizacion() {
    	// default constructor
    }

	
    public Organizacion(OpcionSino opcionSinoByEsHabilitado, String rifOrganizacion, String razonOrganizacion) {
        this.opcionSinoByEsHabilitado = opcionSinoByEsHabilitado;
        this.rifOrganizacion = rifOrganizacion;
        this.razonOrganizacion = razonOrganizacion;
    }
    public Organizacion(TipoOrganizacion tipoOrganizacion, OpcionSino opcionSinoByEsConfiguradoPapeleria, OpcionSino opcionSinoByNotaDebitoUsesSeparator, UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaPais, OpcionSino opcionSinoByEsConfiguradoPagos, OpcionSino opcionSinoByPrintTicketCita, OpcionSino opcionSinoByDocumentoUsesSeparator, OpcionSino opcionSinoByEsCasoActivo, OpcionSino opcionSinoByEsCondicionPacienteRequired, OpcionSino opcionSinoByEsHabilitado, OpcionSino opcionSinoByIdInventoryControl, Organizacion organizacion, OpcionSino opcionSinoByEsDoctorPrincipalRequired, OpcionSino opcionSinoByNotaCreditoUsesSeparator, OpcionSino opcionSinoByEsPersonaContactoRequired, UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaEstado, OpcionSino opcionSinoByControlUsesSeparator, Almacen almacen, String rifOrganizacion, String nitOrganizacion, String razonOrganizacion, String telefonoFijoOrganizacion, String telefonoSecundarioOrganizacion, String EMailOrganizacion, String direccionOrganizacion, String cabecera, Integer rellenoCerosDocumento, Integer rellenoCerosControl, Integer rellenoCerosPrefijoDocumento, Integer rellenoCerosPrefijoControl, String url1, String url1FileName, Double url1FileSize, String formatoCabecera, String formatoPiePagina, String formatoFirma, Long nextNroPedido, Long nextNroHistoria, Long nextNroCaso, Long nextNroOrdenSalidaExpediente, Long nextNroSolicitudExpediente, Long nextNroEmpleado, Long nextNroAcreedor, Long nextNroMiscelaneo, Long nextNroCompra, String numeroImpFiscal, Integer prefijoControlOrganizacion, Integer prefijoTd001Organizacion, Integer prefijoTd002Organizacion, Integer prefijoTd003Organizacion, Integer prefijoTd004Organizacion, Integer prefijoTd005Organizacion, Integer prefijoTd006Organizacion, Integer prefijoTd007Organizacion, Integer prefijoTd008Organizacion, Integer prefijoTd009Organizacion, Integer prefijoTd010Organizacion, Integer prefijoTd011Organizacion, Integer prefijoTd012Organizacion, Integer prefijoTd013Organizacion, Integer prefijoTd014Organizacion, Integer prefijoTd015Organizacion, Long idClienteAdminpanel, String usuarioCreacion, Date fechaCreacion, String usuarioModificacion, Date fechaModificacion, Set<Almacen> almacens, Set<HorarioMedico> horarioMedicosForIdSedeInicio6, Set<Pedido> pedidos, Set<ExternalDataSource> externalDataSources, Set<HorarioMedico> horarioMedicosForIdSedeInicio3, Set<HorarioMedico> horarioMedicosForIdSedeInicio8, Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSede, Set<HorarioExtra> horarioExtras, Set<UsuarioOrganizacion> usuarioOrganizacionsForIdOrganizacion, Set<Recipe> recipes, Set<Rol> rols, Set<HorarioMedico> horarioMedicosForIdSedeInicio5, Set<VademecumIndicacion> vademecumIndicacions, Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSedeDefault, Set<CalendarioIncidencias> calendarioIncidenciases, Set<PatologiaOrganizacion> patologiaOrganizacions, Set<Compras> comprases, Set<HorarioMedico> horarioMedicosForIdSedeInicio7, Set<Persona> personas, Set<HorarioMedico> horarioMedicosForIdSedeInicio2, Set<Vademecum> vademecums, Set<CitasPendientes> citasPendienteses, Set<Calendario> calendarios, Set<Caja> cajas, Set<ReporteContenido> reporteContenidos, Set<CategoriaProducto> categoriaProductos, Set<HorarioMedico> horarioMedicosForIdSedeInicio4, Set<Documento> documentos, Set<HorarioMedico> horarioMedicosForIdSedeInicio1, Set<TipoProductoOrganizacion> tipoProductoOrganizacions, Set<AusenciasMedico> ausenciasMedicos, Set<MotivoCalendarioOrganizacion> motivoCalendarioOrganizacions, Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions, Set<TipoProducto> tipoProductos, Set<GastosAdministrativos> gastosAdministrativoses, Set<Organizacion> organizacions) {
       this.tipoOrganizacion = tipoOrganizacion;
       this.opcionSinoByEsConfiguradoPapeleria = opcionSinoByEsConfiguradoPapeleria;
       this.opcionSinoByNotaDebitoUsesSeparator = opcionSinoByNotaDebitoUsesSeparator;
       this.ubicacionGeograficaByIdUbicacionGeograficaPais = ubicacionGeograficaByIdUbicacionGeograficaPais;
       this.opcionSinoByEsConfiguradoPagos = opcionSinoByEsConfiguradoPagos;
       this.opcionSinoByPrintTicketCita = opcionSinoByPrintTicketCita;
       this.opcionSinoByDocumentoUsesSeparator = opcionSinoByDocumentoUsesSeparator;
       this.opcionSinoByEsCasoActivo = opcionSinoByEsCasoActivo;
       this.opcionSinoByEsCondicionPacienteRequired = opcionSinoByEsCondicionPacienteRequired;
       this.opcionSinoByEsHabilitado = opcionSinoByEsHabilitado;
       this.opcionSinoByIdInventoryControl = opcionSinoByIdInventoryControl;
       this.organizacion = organizacion;
       this.opcionSinoByEsDoctorPrincipalRequired = opcionSinoByEsDoctorPrincipalRequired;
       this.opcionSinoByNotaCreditoUsesSeparator = opcionSinoByNotaCreditoUsesSeparator;
       this.opcionSinoByEsPersonaContactoRequired = opcionSinoByEsPersonaContactoRequired;
       this.ubicacionGeograficaByIdUbicacionGeograficaEstado = ubicacionGeograficaByIdUbicacionGeograficaEstado;
       this.opcionSinoByControlUsesSeparator = opcionSinoByControlUsesSeparator;
       this.almacen = almacen;
       this.rifOrganizacion = rifOrganizacion;
       this.nitOrganizacion = nitOrganizacion;
       this.razonOrganizacion = razonOrganizacion;
       this.telefonoFijoOrganizacion = telefonoFijoOrganizacion;
       this.telefonoSecundarioOrganizacion = telefonoSecundarioOrganizacion;
       this.EMailOrganizacion = EMailOrganizacion;
       this.direccionOrganizacion = direccionOrganizacion;
       this.cabecera = cabecera;
       this.rellenoCerosDocumento = rellenoCerosDocumento;
       this.rellenoCerosControl = rellenoCerosControl;
       this.rellenoCerosPrefijoDocumento = rellenoCerosPrefijoDocumento;
       this.rellenoCerosPrefijoControl = rellenoCerosPrefijoControl;
       this.url1 = url1;
       this.url1FileName = url1FileName;
       this.url1FileSize = url1FileSize;
       this.formatoCabecera = formatoCabecera;
       this.formatoPiePagina = formatoPiePagina;
       this.formatoFirma = formatoFirma;
       this.nextNroPedido = nextNroPedido;
       this.nextNroHistoria = nextNroHistoria;
       this.nextNroCaso = nextNroCaso;
       this.nextNroOrdenSalidaExpediente = nextNroOrdenSalidaExpediente;
       this.nextNroSolicitudExpediente = nextNroSolicitudExpediente;
       this.nextNroEmpleado = nextNroEmpleado;
       this.nextNroAcreedor = nextNroAcreedor;
       this.nextNroMiscelaneo = nextNroMiscelaneo;
       this.nextNroCompra = nextNroCompra;
       this.numeroImpFiscal = numeroImpFiscal;
       this.prefijoControlOrganizacion = prefijoControlOrganizacion;
       this.prefijoTd001Organizacion = prefijoTd001Organizacion;
       this.prefijoTd002Organizacion = prefijoTd002Organizacion;
       this.prefijoTd003Organizacion = prefijoTd003Organizacion;
       this.prefijoTd004Organizacion = prefijoTd004Organizacion;
       this.prefijoTd005Organizacion = prefijoTd005Organizacion;
       this.prefijoTd006Organizacion = prefijoTd006Organizacion;
       this.prefijoTd007Organizacion = prefijoTd007Organizacion;
       this.prefijoTd008Organizacion = prefijoTd008Organizacion;
       this.prefijoTd009Organizacion = prefijoTd009Organizacion;
       this.prefijoTd010Organizacion = prefijoTd010Organizacion;
       this.prefijoTd011Organizacion = prefijoTd011Organizacion;
       this.prefijoTd012Organizacion = prefijoTd012Organizacion;
       this.prefijoTd013Organizacion = prefijoTd013Organizacion;
       this.prefijoTd014Organizacion = prefijoTd014Organizacion;
       this.prefijoTd015Organizacion = prefijoTd015Organizacion;
       this.idClienteAdminpanel = idClienteAdminpanel;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
       this.almacens = almacens;
       this.horarioMedicosForIdSedeInicio6 = horarioMedicosForIdSedeInicio6;
       this.pedidos = pedidos;
       this.externalDataSources = externalDataSources;
       this.horarioMedicosForIdSedeInicio3 = horarioMedicosForIdSedeInicio3;
       this.horarioMedicosForIdSedeInicio8 = horarioMedicosForIdSedeInicio8;
       this.usuarioOrganizacionsForIdSede = usuarioOrganizacionsForIdSede;
       this.horarioExtras = horarioExtras;
       this.usuarioOrganizacionsForIdOrganizacion = usuarioOrganizacionsForIdOrganizacion;
       this.recipes = recipes;
       this.rols = rols;
       this.horarioMedicosForIdSedeInicio5 = horarioMedicosForIdSedeInicio5;
       this.vademecumIndicacions = vademecumIndicacions;
       this.usuarioOrganizacionsForIdSedeDefault = usuarioOrganizacionsForIdSedeDefault;
       this.calendarioIncidenciases = calendarioIncidenciases;
       this.patologiaOrganizacions = patologiaOrganizacions;
       this.comprases = comprases;
       this.horarioMedicosForIdSedeInicio7 = horarioMedicosForIdSedeInicio7;
       this.personas = personas;
       this.horarioMedicosForIdSedeInicio2 = horarioMedicosForIdSedeInicio2;
       this.vademecums = vademecums;
       this.citasPendienteses = citasPendienteses;
       this.calendarios = calendarios;
       this.cajas = cajas;
       this.reporteContenidos = reporteContenidos;
       this.categoriaProductos = categoriaProductos;
       this.horarioMedicosForIdSedeInicio4 = horarioMedicosForIdSedeInicio4;
       this.documentos = documentos;
       this.horarioMedicosForIdSedeInicio1 = horarioMedicosForIdSedeInicio1;
       this.tipoProductoOrganizacions = tipoProductoOrganizacions;
       this.ausenciasMedicos = ausenciasMedicos;
       this.motivoCalendarioOrganizacions = motivoCalendarioOrganizacions;
       this.plantillaReporteOrganizacions = plantillaReporteOrganizacions;
       this.tipoProductos = tipoProductos;
       this.gastosAdministrativoses = gastosAdministrativoses;
       this.organizacions = organizacions;
    }
   
  @GenericGenerator(name = "organizacion_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "organizacion_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "organizacion_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_organizacion")
    public TipoOrganizacion getTipoOrganizacion() {
        return this.tipoOrganizacion;
    }
    
    public void setTipoOrganizacion(TipoOrganizacion tipoOrganizacion) {
        this.tipoOrganizacion = tipoOrganizacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_configurado_papeleria")
    public OpcionSino getOpcionSinoByEsConfiguradoPapeleria() {
        return this.opcionSinoByEsConfiguradoPapeleria;
    }
    
    public void setOpcionSinoByEsConfiguradoPapeleria(OpcionSino opcionSinoByEsConfiguradoPapeleria) {
        this.opcionSinoByEsConfiguradoPapeleria = opcionSinoByEsConfiguradoPapeleria;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="nota_debito_uses_separator")
    public OpcionSino getOpcionSinoByNotaDebitoUsesSeparator() {
        return this.opcionSinoByNotaDebitoUsesSeparator;
    }
    
    public void setOpcionSinoByNotaDebitoUsesSeparator(OpcionSino opcionSinoByNotaDebitoUsesSeparator) {
        this.opcionSinoByNotaDebitoUsesSeparator = opcionSinoByNotaDebitoUsesSeparator;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_ubicacion_geografica_pais")
    public UbicacionGeografica getUbicacionGeograficaByIdUbicacionGeograficaPais() {
        return this.ubicacionGeograficaByIdUbicacionGeograficaPais;
    }
    
    public void setUbicacionGeograficaByIdUbicacionGeograficaPais(UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaPais) {
        this.ubicacionGeograficaByIdUbicacionGeograficaPais = ubicacionGeograficaByIdUbicacionGeograficaPais;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_configurado_pagos")
    public OpcionSino getOpcionSinoByEsConfiguradoPagos() {
        return this.opcionSinoByEsConfiguradoPagos;
    }
    
    public void setOpcionSinoByEsConfiguradoPagos(OpcionSino opcionSinoByEsConfiguradoPagos) {
        this.opcionSinoByEsConfiguradoPagos = opcionSinoByEsConfiguradoPagos;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="print_ticket_cita")
    public OpcionSino getOpcionSinoByPrintTicketCita() {
        return this.opcionSinoByPrintTicketCita;
    }
    
    public void setOpcionSinoByPrintTicketCita(OpcionSino opcionSinoByPrintTicketCita) {
        this.opcionSinoByPrintTicketCita = opcionSinoByPrintTicketCita;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="documento_uses_separator")
    public OpcionSino getOpcionSinoByDocumentoUsesSeparator() {
        return this.opcionSinoByDocumentoUsesSeparator;
    }
    
    public void setOpcionSinoByDocumentoUsesSeparator(OpcionSino opcionSinoByDocumentoUsesSeparator) {
        this.opcionSinoByDocumentoUsesSeparator = opcionSinoByDocumentoUsesSeparator;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_caso_activo")
    public OpcionSino getOpcionSinoByEsCasoActivo() {
        return this.opcionSinoByEsCasoActivo;
    }
    
    public void setOpcionSinoByEsCasoActivo(OpcionSino opcionSinoByEsCasoActivo) {
        this.opcionSinoByEsCasoActivo = opcionSinoByEsCasoActivo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_condicion_paciente_required")
    public OpcionSino getOpcionSinoByEsCondicionPacienteRequired() {
        return this.opcionSinoByEsCondicionPacienteRequired;
    }
    
    public void setOpcionSinoByEsCondicionPacienteRequired(OpcionSino opcionSinoByEsCondicionPacienteRequired) {
        this.opcionSinoByEsCondicionPacienteRequired = opcionSinoByEsCondicionPacienteRequired;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_habilitado", nullable=false)
    public OpcionSino getOpcionSinoByEsHabilitado() {
        return this.opcionSinoByEsHabilitado;
    }
    
    public void setOpcionSinoByEsHabilitado(OpcionSino opcionSinoByEsHabilitado) {
        this.opcionSinoByEsHabilitado = opcionSinoByEsHabilitado;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_inventory_control")
    public OpcionSino getOpcionSinoByIdInventoryControl() {
        return this.opcionSinoByIdInventoryControl;
    }
    
    public void setOpcionSinoByIdInventoryControl(OpcionSino opcionSinoByIdInventoryControl) {
        this.opcionSinoByIdInventoryControl = opcionSinoByIdInventoryControl;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_organizacion_padre")
    public Organizacion getOrganizacion() {
        return this.organizacion;
    }
    
    public void setOrganizacion(Organizacion organizacion) {
        this.organizacion = organizacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_doctor_principal_required")
    public OpcionSino getOpcionSinoByEsDoctorPrincipalRequired() {
        return this.opcionSinoByEsDoctorPrincipalRequired;
    }
    
    public void setOpcionSinoByEsDoctorPrincipalRequired(OpcionSino opcionSinoByEsDoctorPrincipalRequired) {
        this.opcionSinoByEsDoctorPrincipalRequired = opcionSinoByEsDoctorPrincipalRequired;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="nota_credito_uses_separator")
    public OpcionSino getOpcionSinoByNotaCreditoUsesSeparator() {
        return this.opcionSinoByNotaCreditoUsesSeparator;
    }
    
    public void setOpcionSinoByNotaCreditoUsesSeparator(OpcionSino opcionSinoByNotaCreditoUsesSeparator) {
        this.opcionSinoByNotaCreditoUsesSeparator = opcionSinoByNotaCreditoUsesSeparator;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_persona_contacto_required")
    public OpcionSino getOpcionSinoByEsPersonaContactoRequired() {
        return this.opcionSinoByEsPersonaContactoRequired;
    }
    
    public void setOpcionSinoByEsPersonaContactoRequired(OpcionSino opcionSinoByEsPersonaContactoRequired) {
        this.opcionSinoByEsPersonaContactoRequired = opcionSinoByEsPersonaContactoRequired;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_ubicacion_geografica_estado")
    public UbicacionGeografica getUbicacionGeograficaByIdUbicacionGeograficaEstado() {
        return this.ubicacionGeograficaByIdUbicacionGeograficaEstado;
    }
    
    public void setUbicacionGeograficaByIdUbicacionGeograficaEstado(UbicacionGeografica ubicacionGeograficaByIdUbicacionGeograficaEstado) {
        this.ubicacionGeograficaByIdUbicacionGeograficaEstado = ubicacionGeograficaByIdUbicacionGeograficaEstado;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="control_uses_separator")
    public OpcionSino getOpcionSinoByControlUsesSeparator() {
        return this.opcionSinoByControlUsesSeparator;
    }
    
    public void setOpcionSinoByControlUsesSeparator(OpcionSino opcionSinoByControlUsesSeparator) {
        this.opcionSinoByControlUsesSeparator = opcionSinoByControlUsesSeparator;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_almacen")
    public Almacen getAlmacen() {
        return this.almacen;
    }
    
    public void setAlmacen(Almacen almacen) {
        this.almacen = almacen;
    }
    
    @Column(name="rif_organizacion", nullable=false, length=64)
    public String getRifOrganizacion() {
        return this.rifOrganizacion;
    }
    
    public void setRifOrganizacion(String rifOrganizacion) {
        this.rifOrganizacion = rifOrganizacion;
    }
    
    @Column(name="nit_organizacion", length=64)
    public String getNitOrganizacion() {
        return this.nitOrganizacion;
    }
    
    public void setNitOrganizacion(String nitOrganizacion) {
        this.nitOrganizacion = nitOrganizacion;
    }
    
    @Column(name="razon_organizacion", nullable=false)
    public String getRazonOrganizacion() {
        return this.razonOrganizacion;
    }
    
    public void setRazonOrganizacion(String razonOrganizacion) {
        this.razonOrganizacion = razonOrganizacion;
    }
    
    @Column(name="telefono_fijo_organizacion", length=32)
    public String getTelefonoFijoOrganizacion() {
        return this.telefonoFijoOrganizacion;
    }
    
    public void setTelefonoFijoOrganizacion(String telefonoFijoOrganizacion) {
        this.telefonoFijoOrganizacion = telefonoFijoOrganizacion;
    }
    
    @Column(name="telefono_secundario_organizacion", length=32)
    public String getTelefonoSecundarioOrganizacion() {
        return this.telefonoSecundarioOrganizacion;
    }
    
    public void setTelefonoSecundarioOrganizacion(String telefonoSecundarioOrganizacion) {
        this.telefonoSecundarioOrganizacion = telefonoSecundarioOrganizacion;
    }
    
    @Column(name="e_mail_organizacion", length=64)
    public String getEMailOrganizacion() {
        return this.EMailOrganizacion;
    }
    
    public void setEMailOrganizacion(String EMailOrganizacion) {
        this.EMailOrganizacion = EMailOrganizacion;
    }
    
    @Column(name="direccion_organizacion")
    public String getDireccionOrganizacion() {
        return this.direccionOrganizacion;
    }
    
    public void setDireccionOrganizacion(String direccionOrganizacion) {
        this.direccionOrganizacion = direccionOrganizacion;
    }
    
    @Column(name="cabecera")
    public String getCabecera() {
        return this.cabecera;
    }
    
    public void setCabecera(String cabecera) {
        this.cabecera = cabecera;
    }
    
    @Column(name="relleno_ceros_documento")
    public Integer getRellenoCerosDocumento() {
        return this.rellenoCerosDocumento;
    }
    
    public void setRellenoCerosDocumento(Integer rellenoCerosDocumento) {
        this.rellenoCerosDocumento = rellenoCerosDocumento;
    }
    
    @Column(name="relleno_ceros_control")
    public Integer getRellenoCerosControl() {
        return this.rellenoCerosControl;
    }
    
    public void setRellenoCerosControl(Integer rellenoCerosControl) {
        this.rellenoCerosControl = rellenoCerosControl;
    }
    
    @Column(name="relleno_ceros_prefijo_documento")
    public Integer getRellenoCerosPrefijoDocumento() {
        return this.rellenoCerosPrefijoDocumento;
    }
    
    public void setRellenoCerosPrefijoDocumento(Integer rellenoCerosPrefijoDocumento) {
        this.rellenoCerosPrefijoDocumento = rellenoCerosPrefijoDocumento;
    }
    
    @Column(name="relleno_ceros_prefijo_control")
    public Integer getRellenoCerosPrefijoControl() {
        return this.rellenoCerosPrefijoControl;
    }
    
    public void setRellenoCerosPrefijoControl(Integer rellenoCerosPrefijoControl) {
        this.rellenoCerosPrefijoControl = rellenoCerosPrefijoControl;
    }
    
    @Column(name="url1")
    public String getUrl1() {
        return this.url1;
    }
    
    public void setUrl1(String url1) {
        this.url1 = url1;
    }
    
    @Column(name="url1_file_name")
    public String getUrl1FileName() {
        return this.url1FileName;
    }
    
    public void setUrl1FileName(String url1FileName) {
        this.url1FileName = url1FileName;
    }
    
    @Column(name="url1_file_size", precision=17, scale=17)
    public Double getUrl1FileSize() {
        return this.url1FileSize;
    }
    
    public void setUrl1FileSize(Double url1FileSize) {
        this.url1FileSize = url1FileSize;
    }
    
    @Column(name="formato_cabecera")
    public String getFormatoCabecera() {
        return this.formatoCabecera;
    }
    
    public void setFormatoCabecera(String formatoCabecera) {
        this.formatoCabecera = formatoCabecera;
    }
    
    @Column(name="formato_pie_pagina")
    public String getFormatoPiePagina() {
        return this.formatoPiePagina;
    }
    
    public void setFormatoPiePagina(String formatoPiePagina) {
        this.formatoPiePagina = formatoPiePagina;
    }
    
    @Column(name="formato_firma")
    public String getFormatoFirma() {
        return this.formatoFirma;
    }
    
    public void setFormatoFirma(String formatoFirma) {
        this.formatoFirma = formatoFirma;
    }
    
    @Column(name="next_nro_pedido")
    public Long getNextNroPedido() {
        return this.nextNroPedido;
    }
    
    public void setNextNroPedido(Long nextNroPedido) {
        this.nextNroPedido = nextNroPedido;
    }
    
    @Column(name="next_nro_historia")
    public Long getNextNroHistoria() {
        return this.nextNroHistoria;
    }
    
    public void setNextNroHistoria(Long nextNroHistoria) {
        this.nextNroHistoria = nextNroHistoria;
    }
    
    @Column(name="next_nro_caso")
    public Long getNextNroCaso() {
        return this.nextNroCaso;
    }
    
    public void setNextNroCaso(Long nextNroCaso) {
        this.nextNroCaso = nextNroCaso;
    }
    
    @Column(name="next_nro_orden_salida_expediente")
    public Long getNextNroOrdenSalidaExpediente() {
        return this.nextNroOrdenSalidaExpediente;
    }
    
    public void setNextNroOrdenSalidaExpediente(Long nextNroOrdenSalidaExpediente) {
        this.nextNroOrdenSalidaExpediente = nextNroOrdenSalidaExpediente;
    }
    
    @Column(name="next_nro_solicitud_expediente")
    public Long getNextNroSolicitudExpediente() {
        return this.nextNroSolicitudExpediente;
    }
    
    public void setNextNroSolicitudExpediente(Long nextNroSolicitudExpediente) {
        this.nextNroSolicitudExpediente = nextNroSolicitudExpediente;
    }
    
    @Column(name="next_nro_empleado")
    public Long getNextNroEmpleado() {
        return this.nextNroEmpleado;
    }
    
    public void setNextNroEmpleado(Long nextNroEmpleado) {
        this.nextNroEmpleado = nextNroEmpleado;
    }
    
    @Column(name="next_nro_acreedor")
    public Long getNextNroAcreedor() {
        return this.nextNroAcreedor;
    }
    
    public void setNextNroAcreedor(Long nextNroAcreedor) {
        this.nextNroAcreedor = nextNroAcreedor;
    }
    
    @Column(name="next_nro_miscelaneo")
    public Long getNextNroMiscelaneo() {
        return this.nextNroMiscelaneo;
    }
    
    public void setNextNroMiscelaneo(Long nextNroMiscelaneo) {
        this.nextNroMiscelaneo = nextNroMiscelaneo;
    }
    
    @Column(name="next_nro_compra")
    public Long getNextNroCompra() {
        return this.nextNroCompra;
    }
    
    public void setNextNroCompra(Long nextNroCompra) {
        this.nextNroCompra = nextNroCompra;
    }
    
    @Column(name="numero_imp_fiscal", length=128)
    public String getNumeroImpFiscal() {
        return this.numeroImpFiscal;
    }
    
    public void setNumeroImpFiscal(String numeroImpFiscal) {
        this.numeroImpFiscal = numeroImpFiscal;
    }
    
    @Column(name="prefijo_control_organizacion")
    public Integer getPrefijoControlOrganizacion() {
        return this.prefijoControlOrganizacion;
    }
    
    public void setPrefijoControlOrganizacion(Integer prefijoControlOrganizacion) {
        this.prefijoControlOrganizacion = prefijoControlOrganizacion;
    }
    
    @Column(name="prefijo_td001_organizacion")
    public Integer getPrefijoTd001Organizacion() {
        return this.prefijoTd001Organizacion;
    }
    
    public void setPrefijoTd001Organizacion(Integer prefijoTd001Organizacion) {
        this.prefijoTd001Organizacion = prefijoTd001Organizacion;
    }
    
    @Column(name="prefijo_td002_organizacion")
    public Integer getPrefijoTd002Organizacion() {
        return this.prefijoTd002Organizacion;
    }
    
    public void setPrefijoTd002Organizacion(Integer prefijoTd002Organizacion) {
        this.prefijoTd002Organizacion = prefijoTd002Organizacion;
    }
    
    @Column(name="prefijo_td003_organizacion")
    public Integer getPrefijoTd003Organizacion() {
        return this.prefijoTd003Organizacion;
    }
    
    public void setPrefijoTd003Organizacion(Integer prefijoTd003Organizacion) {
        this.prefijoTd003Organizacion = prefijoTd003Organizacion;
    }
    
    @Column(name="prefijo_td004_organizacion")
    public Integer getPrefijoTd004Organizacion() {
        return this.prefijoTd004Organizacion;
    }
    
    public void setPrefijoTd004Organizacion(Integer prefijoTd004Organizacion) {
        this.prefijoTd004Organizacion = prefijoTd004Organizacion;
    }
    
    @Column(name="prefijo_td005_organizacion")
    public Integer getPrefijoTd005Organizacion() {
        return this.prefijoTd005Organizacion;
    }
    
    public void setPrefijoTd005Organizacion(Integer prefijoTd005Organizacion) {
        this.prefijoTd005Organizacion = prefijoTd005Organizacion;
    }
    
    @Column(name="prefijo_td006_organizacion")
    public Integer getPrefijoTd006Organizacion() {
        return this.prefijoTd006Organizacion;
    }
    
    public void setPrefijoTd006Organizacion(Integer prefijoTd006Organizacion) {
        this.prefijoTd006Organizacion = prefijoTd006Organizacion;
    }
    
    @Column(name="prefijo_td007_organizacion")
    public Integer getPrefijoTd007Organizacion() {
        return this.prefijoTd007Organizacion;
    }
    
    public void setPrefijoTd007Organizacion(Integer prefijoTd007Organizacion) {
        this.prefijoTd007Organizacion = prefijoTd007Organizacion;
    }
    
    @Column(name="prefijo_td008_organizacion")
    public Integer getPrefijoTd008Organizacion() {
        return this.prefijoTd008Organizacion;
    }
    
    public void setPrefijoTd008Organizacion(Integer prefijoTd008Organizacion) {
        this.prefijoTd008Organizacion = prefijoTd008Organizacion;
    }
    
    @Column(name="prefijo_td009_organizacion")
    public Integer getPrefijoTd009Organizacion() {
        return this.prefijoTd009Organizacion;
    }
    
    public void setPrefijoTd009Organizacion(Integer prefijoTd009Organizacion) {
        this.prefijoTd009Organizacion = prefijoTd009Organizacion;
    }
    
    @Column(name="prefijo_td010_organizacion")
    public Integer getPrefijoTd010Organizacion() {
        return this.prefijoTd010Organizacion;
    }
    
    public void setPrefijoTd010Organizacion(Integer prefijoTd010Organizacion) {
        this.prefijoTd010Organizacion = prefijoTd010Organizacion;
    }
    
    @Column(name="prefijo_td011_organizacion")
    public Integer getPrefijoTd011Organizacion() {
        return this.prefijoTd011Organizacion;
    }
    
    public void setPrefijoTd011Organizacion(Integer prefijoTd011Organizacion) {
        this.prefijoTd011Organizacion = prefijoTd011Organizacion;
    }
    
    @Column(name="prefijo_td012_organizacion")
    public Integer getPrefijoTd012Organizacion() {
        return this.prefijoTd012Organizacion;
    }
    
    public void setPrefijoTd012Organizacion(Integer prefijoTd012Organizacion) {
        this.prefijoTd012Organizacion = prefijoTd012Organizacion;
    }
    
    @Column(name="prefijo_td013_organizacion")
    public Integer getPrefijoTd013Organizacion() {
        return this.prefijoTd013Organizacion;
    }
    
    public void setPrefijoTd013Organizacion(Integer prefijoTd013Organizacion) {
        this.prefijoTd013Organizacion = prefijoTd013Organizacion;
    }
    
    @Column(name="prefijo_td014_organizacion")
    public Integer getPrefijoTd014Organizacion() {
        return this.prefijoTd014Organizacion;
    }
    
    public void setPrefijoTd014Organizacion(Integer prefijoTd014Organizacion) {
        this.prefijoTd014Organizacion = prefijoTd014Organizacion;
    }
    
    @Column(name="prefijo_td015_organizacion")
    public Integer getPrefijoTd015Organizacion() {
        return this.prefijoTd015Organizacion;
    }
    
    public void setPrefijoTd015Organizacion(Integer prefijoTd015Organizacion) {
        this.prefijoTd015Organizacion = prefijoTd015Organizacion;
    }
    
    @Column(name="id_cliente_adminpanel")
    public Long getIdClienteAdminpanel() {
        return this.idClienteAdminpanel;
    }
    
    public void setIdClienteAdminpanel(Long idClienteAdminpanel) {
        this.idClienteAdminpanel = idClienteAdminpanel;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_creacion", length=29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_modificacion", length=29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Almacen> getAlmacens() {
        return this.almacens;
    }
    
    public void setAlmacens(Set<Almacen> almacens) {
        this.almacens = almacens;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio6")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio6() {
        return this.horarioMedicosForIdSedeInicio6;
    }
    
    public void setHorarioMedicosForIdSedeInicio6(Set<HorarioMedico> horarioMedicosForIdSedeInicio6) {
        this.horarioMedicosForIdSedeInicio6 = horarioMedicosForIdSedeInicio6;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Pedido> getPedidos() {
        return this.pedidos;
    }
    
    public void setPedidos(Set<Pedido> pedidos) {
        this.pedidos = pedidos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<ExternalDataSource> getExternalDataSources() {
        return this.externalDataSources;
    }
    
    public void setExternalDataSources(Set<ExternalDataSource> externalDataSources) {
        this.externalDataSources = externalDataSources;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio3")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio3() {
        return this.horarioMedicosForIdSedeInicio3;
    }
    
    public void setHorarioMedicosForIdSedeInicio3(Set<HorarioMedico> horarioMedicosForIdSedeInicio3) {
        this.horarioMedicosForIdSedeInicio3 = horarioMedicosForIdSedeInicio3;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio8")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio8() {
        return this.horarioMedicosForIdSedeInicio8;
    }
    
    public void setHorarioMedicosForIdSedeInicio8(Set<HorarioMedico> horarioMedicosForIdSedeInicio8) {
        this.horarioMedicosForIdSedeInicio8 = horarioMedicosForIdSedeInicio8;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSede")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacionsForIdSede() {
        return this.usuarioOrganizacionsForIdSede;
    }
    
    public void setUsuarioOrganizacionsForIdSede(Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSede) {
        this.usuarioOrganizacionsForIdSede = usuarioOrganizacionsForIdSede;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<HorarioExtra> getHorarioExtras() {
        return this.horarioExtras;
    }
    
    public void setHorarioExtras(Set<HorarioExtra> horarioExtras) {
        this.horarioExtras = horarioExtras;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdOrganizacion")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacionsForIdOrganizacion() {
        return this.usuarioOrganizacionsForIdOrganizacion;
    }
    
    public void setUsuarioOrganizacionsForIdOrganizacion(Set<UsuarioOrganizacion> usuarioOrganizacionsForIdOrganizacion) {
        this.usuarioOrganizacionsForIdOrganizacion = usuarioOrganizacionsForIdOrganizacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Recipe> getRecipes() {
        return this.recipes;
    }
    
    public void setRecipes(Set<Recipe> recipes) {
        this.recipes = recipes;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Rol> getRols() {
        return this.rols;
    }
    
    public void setRols(Set<Rol> rols) {
        this.rols = rols;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio5")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio5() {
        return this.horarioMedicosForIdSedeInicio5;
    }
    
    public void setHorarioMedicosForIdSedeInicio5(Set<HorarioMedico> horarioMedicosForIdSedeInicio5) {
        this.horarioMedicosForIdSedeInicio5 = horarioMedicosForIdSedeInicio5;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<VademecumIndicacion> getVademecumIndicacions() {
        return this.vademecumIndicacions;
    }
    
    public void setVademecumIndicacions(Set<VademecumIndicacion> vademecumIndicacions) {
        this.vademecumIndicacions = vademecumIndicacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeDefault")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacionsForIdSedeDefault() {
        return this.usuarioOrganizacionsForIdSedeDefault;
    }
    
    public void setUsuarioOrganizacionsForIdSedeDefault(Set<UsuarioOrganizacion> usuarioOrganizacionsForIdSedeDefault) {
        this.usuarioOrganizacionsForIdSedeDefault = usuarioOrganizacionsForIdSedeDefault;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<CalendarioIncidencias> getCalendarioIncidenciases() {
        return this.calendarioIncidenciases;
    }
    
    public void setCalendarioIncidenciases(Set<CalendarioIncidencias> calendarioIncidenciases) {
        this.calendarioIncidenciases = calendarioIncidenciases;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<PatologiaOrganizacion> getPatologiaOrganizacions() {
        return this.patologiaOrganizacions;
    }
    
    public void setPatologiaOrganizacions(Set<PatologiaOrganizacion> patologiaOrganizacions) {
        this.patologiaOrganizacions = patologiaOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Compras> getComprases() {
        return this.comprases;
    }
    
    public void setComprases(Set<Compras> comprases) {
        this.comprases = comprases;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio7")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio7() {
        return this.horarioMedicosForIdSedeInicio7;
    }
    
    public void setHorarioMedicosForIdSedeInicio7(Set<HorarioMedico> horarioMedicosForIdSedeInicio7) {
        this.horarioMedicosForIdSedeInicio7 = horarioMedicosForIdSedeInicio7;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Persona> getPersonas() {
        return this.personas;
    }
    
    public void setPersonas(Set<Persona> personas) {
        this.personas = personas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio2")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio2() {
        return this.horarioMedicosForIdSedeInicio2;
    }
    
    public void setHorarioMedicosForIdSedeInicio2(Set<HorarioMedico> horarioMedicosForIdSedeInicio2) {
        this.horarioMedicosForIdSedeInicio2 = horarioMedicosForIdSedeInicio2;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Vademecum> getVademecums() {
        return this.vademecums;
    }
    
    public void setVademecums(Set<Vademecum> vademecums) {
        this.vademecums = vademecums;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<CitasPendientes> getCitasPendienteses() {
        return this.citasPendienteses;
    }
    
    public void setCitasPendienteses(Set<CitasPendientes> citasPendienteses) {
        this.citasPendienteses = citasPendienteses;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Calendario> getCalendarios() {
        return this.calendarios;
    }
    
    public void setCalendarios(Set<Calendario> calendarios) {
        this.calendarios = calendarios;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Caja> getCajas() {
        return this.cajas;
    }
    
    public void setCajas(Set<Caja> cajas) {
        this.cajas = cajas;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<ReporteContenido> getReporteContenidos() {
        return this.reporteContenidos;
    }
    
    public void setReporteContenidos(Set<ReporteContenido> reporteContenidos) {
        this.reporteContenidos = reporteContenidos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<CategoriaProducto> getCategoriaProductos() {
        return this.categoriaProductos;
    }
    
    public void setCategoriaProductos(Set<CategoriaProducto> categoriaProductos) {
        this.categoriaProductos = categoriaProductos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio4")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio4() {
        return this.horarioMedicosForIdSedeInicio4;
    }
    
    public void setHorarioMedicosForIdSedeInicio4(Set<HorarioMedico> horarioMedicosForIdSedeInicio4) {
        this.horarioMedicosForIdSedeInicio4 = horarioMedicosForIdSedeInicio4;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Documento> getDocumentos() {
        return this.documentos;
    }
    
    public void setDocumentos(Set<Documento> documentos) {
        this.documentos = documentos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacionByIdSedeInicio1")
    public Set<HorarioMedico> getHorarioMedicosForIdSedeInicio1() {
        return this.horarioMedicosForIdSedeInicio1;
    }
    
    public void setHorarioMedicosForIdSedeInicio1(Set<HorarioMedico> horarioMedicosForIdSedeInicio1) {
        this.horarioMedicosForIdSedeInicio1 = horarioMedicosForIdSedeInicio1;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<TipoProductoOrganizacion> getTipoProductoOrganizacions() {
        return this.tipoProductoOrganizacions;
    }
    
    public void setTipoProductoOrganizacions(Set<TipoProductoOrganizacion> tipoProductoOrganizacions) {
        this.tipoProductoOrganizacions = tipoProductoOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<AusenciasMedico> getAusenciasMedicos() {
        return this.ausenciasMedicos;
    }
    
    public void setAusenciasMedicos(Set<AusenciasMedico> ausenciasMedicos) {
        this.ausenciasMedicos = ausenciasMedicos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<MotivoCalendarioOrganizacion> getMotivoCalendarioOrganizacions() {
        return this.motivoCalendarioOrganizacions;
    }
    
    public void setMotivoCalendarioOrganizacions(Set<MotivoCalendarioOrganizacion> motivoCalendarioOrganizacions) {
        this.motivoCalendarioOrganizacions = motivoCalendarioOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<PlantillaReporteOrganizacion> getPlantillaReporteOrganizacions() {
        return this.plantillaReporteOrganizacions;
    }
    
    public void setPlantillaReporteOrganizacions(Set<PlantillaReporteOrganizacion> plantillaReporteOrganizacions) {
        this.plantillaReporteOrganizacions = plantillaReporteOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<TipoProducto> getTipoProductos() {
        return this.tipoProductos;
    }
    
    public void setTipoProductos(Set<TipoProducto> tipoProductos) {
        this.tipoProductos = tipoProductos;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<GastosAdministrativos> getGastosAdministrativoses() {
        return this.gastosAdministrativoses;
    }
    
    public void setGastosAdministrativoses(Set<GastosAdministrativos> gastosAdministrativoses) {
        this.gastosAdministrativoses = gastosAdministrativoses;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="organizacion")
    public Set<Organizacion> getOrganizacions() {
        return this.organizacions;
    }
    
    public void setOrganizacions(Set<Organizacion> organizacions) {
        this.organizacions = organizacions;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("tipoOrganizacion").append("='").append(getTipoOrganizacion()).append("' ");			
      buffer.append("opcionSinoByEsConfiguradoPapeleria").append("='").append(getOpcionSinoByEsConfiguradoPapeleria()).append("' ");			
      buffer.append("opcionSinoByNotaDebitoUsesSeparator").append("='").append(getOpcionSinoByNotaDebitoUsesSeparator()).append("' ");			
      buffer.append("ubicacionGeograficaByIdUbicacionGeograficaPais").append("='").append(getUbicacionGeograficaByIdUbicacionGeograficaPais()).append("' ");			
      buffer.append("opcionSinoByEsConfiguradoPagos").append("='").append(getOpcionSinoByEsConfiguradoPagos()).append("' ");			
      buffer.append("opcionSinoByPrintTicketCita").append("='").append(getOpcionSinoByPrintTicketCita()).append("' ");			
      buffer.append("opcionSinoByDocumentoUsesSeparator").append("='").append(getOpcionSinoByDocumentoUsesSeparator()).append("' ");			
      buffer.append("opcionSinoByEsCasoActivo").append("='").append(getOpcionSinoByEsCasoActivo()).append("' ");			
      buffer.append("opcionSinoByEsCondicionPacienteRequired").append("='").append(getOpcionSinoByEsCondicionPacienteRequired()).append("' ");			
      buffer.append("opcionSinoByEsHabilitado").append("='").append(getOpcionSinoByEsHabilitado()).append("' ");			
      buffer.append("opcionSinoByIdInventoryControl").append("='").append(getOpcionSinoByIdInventoryControl()).append("' ");			
      buffer.append("organizacion").append("='").append(getOrganizacion()).append("' ");			
      buffer.append("opcionSinoByEsDoctorPrincipalRequired").append("='").append(getOpcionSinoByEsDoctorPrincipalRequired()).append("' ");			
      buffer.append("opcionSinoByNotaCreditoUsesSeparator").append("='").append(getOpcionSinoByNotaCreditoUsesSeparator()).append("' ");			
      buffer.append("opcionSinoByEsPersonaContactoRequired").append("='").append(getOpcionSinoByEsPersonaContactoRequired()).append("' ");			
      buffer.append("ubicacionGeograficaByIdUbicacionGeograficaEstado").append("='").append(getUbicacionGeograficaByIdUbicacionGeograficaEstado()).append("' ");			
      buffer.append("opcionSinoByControlUsesSeparator").append("='").append(getOpcionSinoByControlUsesSeparator()).append("' ");			
      buffer.append("almacen").append("='").append(getAlmacen()).append("' ");			
      buffer.append("rifOrganizacion").append("='").append(getRifOrganizacion()).append("' ");			
      buffer.append("nitOrganizacion").append("='").append(getNitOrganizacion()).append("' ");			
      buffer.append("razonOrganizacion").append("='").append(getRazonOrganizacion()).append("' ");			
      buffer.append("telefonoFijoOrganizacion").append("='").append(getTelefonoFijoOrganizacion()).append("' ");			
      buffer.append("telefonoSecundarioOrganizacion").append("='").append(getTelefonoSecundarioOrganizacion()).append("' ");			
      buffer.append("EMailOrganizacion").append("='").append(getEMailOrganizacion()).append("' ");			
      buffer.append("direccionOrganizacion").append("='").append(getDireccionOrganizacion()).append("' ");			
      buffer.append("cabecera").append("='").append(getCabecera()).append("' ");			
      buffer.append("rellenoCerosDocumento").append("='").append(getRellenoCerosDocumento()).append("' ");			
      buffer.append("rellenoCerosControl").append("='").append(getRellenoCerosControl()).append("' ");			
      buffer.append("rellenoCerosPrefijoDocumento").append("='").append(getRellenoCerosPrefijoDocumento()).append("' ");			
      buffer.append("rellenoCerosPrefijoControl").append("='").append(getRellenoCerosPrefijoControl()).append("' ");			
      buffer.append("url1").append("='").append(getUrl1()).append("' ");			
      buffer.append("url1FileName").append("='").append(getUrl1FileName()).append("' ");			
      buffer.append("url1FileSize").append("='").append(getUrl1FileSize()).append("' ");			
      buffer.append("formatoCabecera").append("='").append(getFormatoCabecera()).append("' ");			
      buffer.append("formatoPiePagina").append("='").append(getFormatoPiePagina()).append("' ");			
      buffer.append("formatoFirma").append("='").append(getFormatoFirma()).append("' ");			
      buffer.append("nextNroPedido").append("='").append(getNextNroPedido()).append("' ");			
      buffer.append("nextNroHistoria").append("='").append(getNextNroHistoria()).append("' ");			
      buffer.append("nextNroCaso").append("='").append(getNextNroCaso()).append("' ");			
      buffer.append("nextNroOrdenSalidaExpediente").append("='").append(getNextNroOrdenSalidaExpediente()).append("' ");			
      buffer.append("nextNroSolicitudExpediente").append("='").append(getNextNroSolicitudExpediente()).append("' ");			
      buffer.append("nextNroEmpleado").append("='").append(getNextNroEmpleado()).append("' ");			
      buffer.append("nextNroAcreedor").append("='").append(getNextNroAcreedor()).append("' ");			
      buffer.append("nextNroMiscelaneo").append("='").append(getNextNroMiscelaneo()).append("' ");			
      buffer.append("nextNroCompra").append("='").append(getNextNroCompra()).append("' ");			
      buffer.append("numeroImpFiscal").append("='").append(getNumeroImpFiscal()).append("' ");			
      buffer.append("prefijoControlOrganizacion").append("='").append(getPrefijoControlOrganizacion()).append("' ");			
      buffer.append("prefijoTd001Organizacion").append("='").append(getPrefijoTd001Organizacion()).append("' ");			
      buffer.append("prefijoTd002Organizacion").append("='").append(getPrefijoTd002Organizacion()).append("' ");			
      buffer.append("prefijoTd003Organizacion").append("='").append(getPrefijoTd003Organizacion()).append("' ");			
      buffer.append("prefijoTd004Organizacion").append("='").append(getPrefijoTd004Organizacion()).append("' ");			
      buffer.append("prefijoTd005Organizacion").append("='").append(getPrefijoTd005Organizacion()).append("' ");			
      buffer.append("prefijoTd006Organizacion").append("='").append(getPrefijoTd006Organizacion()).append("' ");			
      buffer.append("prefijoTd007Organizacion").append("='").append(getPrefijoTd007Organizacion()).append("' ");			
      buffer.append("prefijoTd008Organizacion").append("='").append(getPrefijoTd008Organizacion()).append("' ");			
      buffer.append("prefijoTd009Organizacion").append("='").append(getPrefijoTd009Organizacion()).append("' ");			
      buffer.append("prefijoTd010Organizacion").append("='").append(getPrefijoTd010Organizacion()).append("' ");			
      buffer.append("prefijoTd011Organizacion").append("='").append(getPrefijoTd011Organizacion()).append("' ");			
      buffer.append("prefijoTd012Organizacion").append("='").append(getPrefijoTd012Organizacion()).append("' ");			
      buffer.append("prefijoTd013Organizacion").append("='").append(getPrefijoTd013Organizacion()).append("' ");			
      buffer.append("prefijoTd014Organizacion").append("='").append(getPrefijoTd014Organizacion()).append("' ");			
      buffer.append("prefijoTd015Organizacion").append("='").append(getPrefijoTd015Organizacion()).append("' ");			
      buffer.append("idClienteAdminpanel").append("='").append(getIdClienteAdminpanel()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof Organizacion)) 
		 	return false;
		 	
		 Organizacion castOther = ( Organizacion ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
		if(this.tipoOrganizacion != null &&
			(tipoOrganizacion.getId() == null || this.tipoOrganizacion.getId().longValue() == 0)) {
			tipoOrganizacion = null;
		}
		if(this.opcionSinoByEsConfiguradoPapeleria != null &&
			(opcionSinoByEsConfiguradoPapeleria.getId() == null || this.opcionSinoByEsConfiguradoPapeleria.getId().longValue() == 0)) {
			opcionSinoByEsConfiguradoPapeleria = null;
		}
		if(this.opcionSinoByNotaDebitoUsesSeparator != null &&
			(opcionSinoByNotaDebitoUsesSeparator.getId() == null || this.opcionSinoByNotaDebitoUsesSeparator.getId().longValue() == 0)) {
			opcionSinoByNotaDebitoUsesSeparator = null;
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaPais != null &&
			(ubicacionGeograficaByIdUbicacionGeograficaPais.getId() == null || this.ubicacionGeograficaByIdUbicacionGeograficaPais.getId().longValue() == 0)) {
			ubicacionGeograficaByIdUbicacionGeograficaPais = null;
		}
		if(this.opcionSinoByEsConfiguradoPagos != null &&
			(opcionSinoByEsConfiguradoPagos.getId() == null || this.opcionSinoByEsConfiguradoPagos.getId().longValue() == 0)) {
			opcionSinoByEsConfiguradoPagos = null;
		}
		if(this.opcionSinoByPrintTicketCita != null &&
			(opcionSinoByPrintTicketCita.getId() == null || this.opcionSinoByPrintTicketCita.getId().longValue() == 0)) {
			opcionSinoByPrintTicketCita = null;
		}
		if(this.opcionSinoByDocumentoUsesSeparator != null &&
			(opcionSinoByDocumentoUsesSeparator.getId() == null || this.opcionSinoByDocumentoUsesSeparator.getId().longValue() == 0)) {
			opcionSinoByDocumentoUsesSeparator = null;
		}
		if(this.opcionSinoByEsCasoActivo != null &&
			(opcionSinoByEsCasoActivo.getId() == null || this.opcionSinoByEsCasoActivo.getId().longValue() == 0)) {
			opcionSinoByEsCasoActivo = null;
		}
		if(this.opcionSinoByEsCondicionPacienteRequired != null &&
			(opcionSinoByEsCondicionPacienteRequired.getId() == null || this.opcionSinoByEsCondicionPacienteRequired.getId().longValue() == 0)) {
			opcionSinoByEsCondicionPacienteRequired = null;
		}
		if(this.opcionSinoByEsHabilitado != null &&
			(opcionSinoByEsHabilitado.getId() == null || this.opcionSinoByEsHabilitado.getId().longValue() == 0)) {
			opcionSinoByEsHabilitado = null;
		}
		if(this.opcionSinoByIdInventoryControl != null &&
			(opcionSinoByIdInventoryControl.getId() == null || this.opcionSinoByIdInventoryControl.getId().longValue() == 0)) {
			opcionSinoByIdInventoryControl = null;
		}
		if(this.organizacion != null &&
			(organizacion.getId() == null || this.organizacion.getId().longValue() == 0)) {
			organizacion = null;
		}
		if(this.opcionSinoByEsDoctorPrincipalRequired != null &&
			(opcionSinoByEsDoctorPrincipalRequired.getId() == null || this.opcionSinoByEsDoctorPrincipalRequired.getId().longValue() == 0)) {
			opcionSinoByEsDoctorPrincipalRequired = null;
		}
		if(this.opcionSinoByNotaCreditoUsesSeparator != null &&
			(opcionSinoByNotaCreditoUsesSeparator.getId() == null || this.opcionSinoByNotaCreditoUsesSeparator.getId().longValue() == 0)) {
			opcionSinoByNotaCreditoUsesSeparator = null;
		}
		if(this.opcionSinoByEsPersonaContactoRequired != null &&
			(opcionSinoByEsPersonaContactoRequired.getId() == null || this.opcionSinoByEsPersonaContactoRequired.getId().longValue() == 0)) {
			opcionSinoByEsPersonaContactoRequired = null;
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaEstado != null &&
			(ubicacionGeograficaByIdUbicacionGeograficaEstado.getId() == null || this.ubicacionGeograficaByIdUbicacionGeograficaEstado.getId().longValue() == 0)) {
			ubicacionGeograficaByIdUbicacionGeograficaEstado = null;
		}
		if(this.opcionSinoByControlUsesSeparator != null &&
			(opcionSinoByControlUsesSeparator.getId() == null || this.opcionSinoByControlUsesSeparator.getId().longValue() == 0)) {
			opcionSinoByControlUsesSeparator = null;
		}
		if(this.almacen != null &&
			(almacen.getId() == null || this.almacen.getId().longValue() == 0)) {
			almacen = null;
		}
    }
    
    public void fillPOJO() {
		if(this.tipoOrganizacion == null) {
			tipoOrganizacion = new TipoOrganizacion();
		}
		if(this.opcionSinoByEsConfiguradoPapeleria == null) {
			opcionSinoByEsConfiguradoPapeleria = new OpcionSino();
		}
		if(this.opcionSinoByNotaDebitoUsesSeparator == null) {
			opcionSinoByNotaDebitoUsesSeparator = new OpcionSino();
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaPais == null) {
			ubicacionGeograficaByIdUbicacionGeograficaPais = new UbicacionGeografica();
		}
		if(this.opcionSinoByEsConfiguradoPagos == null) {
			opcionSinoByEsConfiguradoPagos = new OpcionSino();
		}
		if(this.opcionSinoByPrintTicketCita == null) {
			opcionSinoByPrintTicketCita = new OpcionSino();
		}
		if(this.opcionSinoByDocumentoUsesSeparator == null) {
			opcionSinoByDocumentoUsesSeparator = new OpcionSino();
		}
		if(this.opcionSinoByEsCasoActivo == null) {
			opcionSinoByEsCasoActivo = new OpcionSino();
		}
		if(this.opcionSinoByEsCondicionPacienteRequired == null) {
			opcionSinoByEsCondicionPacienteRequired = new OpcionSino();
		}
		if(this.opcionSinoByEsHabilitado == null) {
			opcionSinoByEsHabilitado = new OpcionSino();
		}
		if(this.opcionSinoByIdInventoryControl == null) {
			opcionSinoByIdInventoryControl = new OpcionSino();
		}
		if(this.organizacion == null) {
			organizacion = new Organizacion();
		}
		if(this.opcionSinoByEsDoctorPrincipalRequired == null) {
			opcionSinoByEsDoctorPrincipalRequired = new OpcionSino();
		}
		if(this.opcionSinoByNotaCreditoUsesSeparator == null) {
			opcionSinoByNotaCreditoUsesSeparator = new OpcionSino();
		}
		if(this.opcionSinoByEsPersonaContactoRequired == null) {
			opcionSinoByEsPersonaContactoRequired = new OpcionSino();
		}
		if(this.ubicacionGeograficaByIdUbicacionGeograficaEstado == null) {
			ubicacionGeograficaByIdUbicacionGeograficaEstado = new UbicacionGeografica();
		}
		if(this.opcionSinoByControlUsesSeparator == null) {
			opcionSinoByControlUsesSeparator = new OpcionSino();
		}
		if(this.almacen == null) {
			almacen = new Almacen();
		}
    }
    
    public Organizacion createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

