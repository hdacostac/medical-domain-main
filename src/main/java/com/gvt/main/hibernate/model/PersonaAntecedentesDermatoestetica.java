package com.gvt.main.hibernate.model;
// Generated 09-feb-2020 20:04:15 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.sql.Timestamp;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * PersonaAntecedentesDermatoestetica generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="persona_antecedentes_dermatoestetica"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="id_persona") 
)
public class PersonaAntecedentesDermatoestetica  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoProtesisMamarias;
 	
 	private OpcionSino opcionSinoByEsCirugiaDermolipectomia;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta;
 	
 	private OpcionSino opcionSinoByEsFamiliaCalviciePaterno;
 	
 	private OpcionSino opcionSinoByEsLaserVbeam;
 	
 	private OpcionSino opcionSinoByEsSop;
 	
 	private Fototipo fototipo;
 	
 	private OpcionSino opcionSinoByEsUltracavitacion;
 	
 	private OpcionSino opcionSinoByEsFuma;
 	
 	private OpcionSino opcionSinoByEsAlergiaYodo;
 	
 	private OpcionSino opcionSinoByEsIntervencionQuirurgica;
 	
 	private Persona persona;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoRadiofrecuencia;
 	
 	private OpcionSino opcionSinoByEsAcnePapa;
 	
 	private OpcionSino opcionSinoByEsAcneMama;
 	
 	private OpcionSino opcionSinoByEsDolorPeriodoMenstrual;
 	
 	private OpcionSino opcionSinoByEsProtesisMamarias;
 	
 	private FrecuenciaActividad frecuenciaActividad;
 	
 	private OpcionSino opcionSinoByEsFamiliaCalvicieMaterno;
 	
 	private OpcionSino opcionSinoByEsHipotiroidismo;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoVelashape;
 	
 	private OpcionSino opcionSinoByEsPlasmaRicoPlaqueta;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserVbeam;
 	
 	private OpcionSino opcionSinoByEsLaserGalaxy;
 	
 	private OpcionSino opcionSinoByEsLaserQswitch;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserGalaxy;
 	
 	private OpcionSino opcionSinoByEsLaserCo2;
 	
 	private OpcionSino opcionSinoByEsMenopausia;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoQuimioexfoliacion;
 	
 	private OpcionSino opcionSinoByEsTomaLicor;
 	
 	private ActividadFisica actividadFisica;
 	
 	private OpcionSino opcionSinoByEsHipertiroidismo;
 	
 	private OpcionSino opcionSinoByEsIpl;
 	
 	private OpcionSino opcionSinoByEsAcidoHialuronico;
 	
 	private EscalaEvaluacion escalaEvaluacion;
 	
 	private OpcionSino opcionSinoByEsTomaCafe;
 	
 	private OpcionSino opcionSinoByEsAlergiaMedicamento;
 	
 	private OpcionSino opcionSinoByEsTensionArterial;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoAcidoHialuronico;
 	
 	private OpcionSino opcionSinoByEsAlergiaHuevo;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLimpiezaFacial;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserQswitch;
 	
 	private Fotoenvejecimiento fotoenvejecimiento;
 	
 	private OpcionSino opcionSinoByEsDiabetes;
 	
 	private OpcionSino opcionSinoByEsAnticonceptivosOrales;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoIpl;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoUltracavitacion;
 	
 	private OpcionSino opcionSinoByEsQuimioexfoliacion;
 	
 	private OpcionSino opcionSinoByEsMasajeDrenajeLinfatico;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoDepilacionLaser;
 	
 	private OpcionSino opcionSinoByEsVelashape;
 	
 	private OpcionSino opcionSinoByEsLaserErbium;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserCo2;
 	
 	private OpcionSino opcionSinoByEsAsma;
 	
 	private OpcionSino opcionSinoByEsLimpiezaFacial;
 	
 	private OpcionSino opcionSinoByEsDepilacionLaser;
 	
 	private TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserErbium;
 	
 	private OpcionSino opcionSinoByEsRadiofrecuencia;
 	
 	private String tensionArterialTto;
 	
 	private String diabetesTto;
 	
 	private String asmaTto;
 	
 	private String alergiaHuevoTto;
 	
 	private String alergiaMedicamentoTto;
 	
 	private String alergiaYodoTto;
 	
 	private String hipotiroidismoTto;
 	
 	private String hipertiroidismoTto;
 	
 	private Long fumaCuantoDescripcion;
 	
 	private Date fumaFechaDesde;
 	
 	private Date fumaFechaHasta;
 	
 	private Double cigarroPaqueteDia;
 	
 	private String licorCuantoDescripcion;
 	
 	private String cafeCuantoDescripcion;
 	
 	private String intervencionQuirurgicaDescripcion;
 	
 	private String evacuacionesDiarias;
 	
 	private String otrasAlergias;
 	
 	private String medicamentosConsume;
 	
 	private String edadMenarquia;
 	
 	private String duracionPeriodoMenstrual;
 	
 	private String frecuenciaPeriodoMenstrual;
 	
 	private String edadMenopausia;
 	
 	private Long numeroGestas;
 	
 	private Long numeroPartos;
 	
 	private Long numeroAbortos;
 	
 	private Long numeroCesareas;
 	
 	private String edadUltimoEmbarazo;
 	
 	private String edadAcneAdolescencia;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private Date fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private Date fechaModificacion;

    public PersonaAntecedentesDermatoestetica() {
    	// default constructor
    }

	
    public PersonaAntecedentesDermatoestetica(Persona persona) {
        this.persona = persona;
    }
    public PersonaAntecedentesDermatoestetica(TipoTratamiento tipoTratamientoByIdTipoTratamientoProtesisMamarias, OpcionSino opcionSinoByEsCirugiaDermolipectomia, TipoTratamiento tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta, OpcionSino opcionSinoByEsFamiliaCalviciePaterno, OpcionSino opcionSinoByEsLaserVbeam, OpcionSino opcionSinoByEsSop, Fototipo fototipo, OpcionSino opcionSinoByEsUltracavitacion, OpcionSino opcionSinoByEsFuma, OpcionSino opcionSinoByEsAlergiaYodo, OpcionSino opcionSinoByEsIntervencionQuirurgica, Persona persona, TipoTratamiento tipoTratamientoByIdTipoTratamientoRadiofrecuencia, OpcionSino opcionSinoByEsAcnePapa, OpcionSino opcionSinoByEsAcneMama, OpcionSino opcionSinoByEsDolorPeriodoMenstrual, OpcionSino opcionSinoByEsProtesisMamarias, FrecuenciaActividad frecuenciaActividad, OpcionSino opcionSinoByEsFamiliaCalvicieMaterno, OpcionSino opcionSinoByEsHipotiroidismo, TipoTratamiento tipoTratamientoByIdTipoTratamientoVelashape, OpcionSino opcionSinoByEsPlasmaRicoPlaqueta, TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserVbeam, OpcionSino opcionSinoByEsLaserGalaxy, OpcionSino opcionSinoByEsLaserQswitch, TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserGalaxy, OpcionSino opcionSinoByEsLaserCo2, OpcionSino opcionSinoByEsMenopausia, TipoTratamiento tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia, TipoTratamiento tipoTratamientoByIdTipoTratamientoQuimioexfoliacion, OpcionSino opcionSinoByEsTomaLicor, ActividadFisica actividadFisica, OpcionSino opcionSinoByEsHipertiroidismo, OpcionSino opcionSinoByEsIpl, OpcionSino opcionSinoByEsAcidoHialuronico, EscalaEvaluacion escalaEvaluacion, OpcionSino opcionSinoByEsTomaCafe, OpcionSino opcionSinoByEsAlergiaMedicamento, OpcionSino opcionSinoByEsTensionArterial, TipoTratamiento tipoTratamientoByIdTipoTratamientoAcidoHialuronico, OpcionSino opcionSinoByEsAlergiaHuevo, TipoTratamiento tipoTratamientoByIdTipoTratamientoLimpiezaFacial, TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserQswitch, Fotoenvejecimiento fotoenvejecimiento, OpcionSino opcionSinoByEsDiabetes, OpcionSino opcionSinoByEsAnticonceptivosOrales, TipoTratamiento tipoTratamientoByIdTipoTratamientoIpl, TipoTratamiento tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico, TipoTratamiento tipoTratamientoByIdTipoTratamientoUltracavitacion, OpcionSino opcionSinoByEsQuimioexfoliacion, OpcionSino opcionSinoByEsMasajeDrenajeLinfatico, TipoTratamiento tipoTratamientoByIdTipoTratamientoDepilacionLaser, OpcionSino opcionSinoByEsVelashape, OpcionSino opcionSinoByEsLaserErbium, TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserCo2, OpcionSino opcionSinoByEsAsma, OpcionSino opcionSinoByEsLimpiezaFacial, OpcionSino opcionSinoByEsDepilacionLaser, TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserErbium, OpcionSino opcionSinoByEsRadiofrecuencia, String tensionArterialTto, String diabetesTto, String asmaTto, String alergiaHuevoTto, String alergiaMedicamentoTto, String alergiaYodoTto, String hipotiroidismoTto, String hipertiroidismoTto, Long fumaCuantoDescripcion, Date fumaFechaDesde, Date fumaFechaHasta, Double cigarroPaqueteDia, String licorCuantoDescripcion, String cafeCuantoDescripcion, String intervencionQuirurgicaDescripcion, String evacuacionesDiarias, String otrasAlergias, String medicamentosConsume, String edadMenarquia, String duracionPeriodoMenstrual, String frecuenciaPeriodoMenstrual, String edadMenopausia, Long numeroGestas, Long numeroPartos, Long numeroAbortos, Long numeroCesareas, String edadUltimoEmbarazo, String edadAcneAdolescencia, String usuarioCreacion, Date fechaCreacion, String usuarioModificacion, Date fechaModificacion) {
       this.tipoTratamientoByIdTipoTratamientoProtesisMamarias = tipoTratamientoByIdTipoTratamientoProtesisMamarias;
       this.opcionSinoByEsCirugiaDermolipectomia = opcionSinoByEsCirugiaDermolipectomia;
       this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta = tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta;
       this.opcionSinoByEsFamiliaCalviciePaterno = opcionSinoByEsFamiliaCalviciePaterno;
       this.opcionSinoByEsLaserVbeam = opcionSinoByEsLaserVbeam;
       this.opcionSinoByEsSop = opcionSinoByEsSop;
       this.fototipo = fototipo;
       this.opcionSinoByEsUltracavitacion = opcionSinoByEsUltracavitacion;
       this.opcionSinoByEsFuma = opcionSinoByEsFuma;
       this.opcionSinoByEsAlergiaYodo = opcionSinoByEsAlergiaYodo;
       this.opcionSinoByEsIntervencionQuirurgica = opcionSinoByEsIntervencionQuirurgica;
       this.persona = persona;
       this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia = tipoTratamientoByIdTipoTratamientoRadiofrecuencia;
       this.opcionSinoByEsAcnePapa = opcionSinoByEsAcnePapa;
       this.opcionSinoByEsAcneMama = opcionSinoByEsAcneMama;
       this.opcionSinoByEsDolorPeriodoMenstrual = opcionSinoByEsDolorPeriodoMenstrual;
       this.opcionSinoByEsProtesisMamarias = opcionSinoByEsProtesisMamarias;
       this.frecuenciaActividad = frecuenciaActividad;
       this.opcionSinoByEsFamiliaCalvicieMaterno = opcionSinoByEsFamiliaCalvicieMaterno;
       this.opcionSinoByEsHipotiroidismo = opcionSinoByEsHipotiroidismo;
       this.tipoTratamientoByIdTipoTratamientoVelashape = tipoTratamientoByIdTipoTratamientoVelashape;
       this.opcionSinoByEsPlasmaRicoPlaqueta = opcionSinoByEsPlasmaRicoPlaqueta;
       this.tipoTratamientoByIdTipoTratamientoLaserVbeam = tipoTratamientoByIdTipoTratamientoLaserVbeam;
       this.opcionSinoByEsLaserGalaxy = opcionSinoByEsLaserGalaxy;
       this.opcionSinoByEsLaserQswitch = opcionSinoByEsLaserQswitch;
       this.tipoTratamientoByIdTipoTratamientoLaserGalaxy = tipoTratamientoByIdTipoTratamientoLaserGalaxy;
       this.opcionSinoByEsLaserCo2 = opcionSinoByEsLaserCo2;
       this.opcionSinoByEsMenopausia = opcionSinoByEsMenopausia;
       this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia = tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia;
       this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion = tipoTratamientoByIdTipoTratamientoQuimioexfoliacion;
       this.opcionSinoByEsTomaLicor = opcionSinoByEsTomaLicor;
       this.actividadFisica = actividadFisica;
       this.opcionSinoByEsHipertiroidismo = opcionSinoByEsHipertiroidismo;
       this.opcionSinoByEsIpl = opcionSinoByEsIpl;
       this.opcionSinoByEsAcidoHialuronico = opcionSinoByEsAcidoHialuronico;
       this.escalaEvaluacion = escalaEvaluacion;
       this.opcionSinoByEsTomaCafe = opcionSinoByEsTomaCafe;
       this.opcionSinoByEsAlergiaMedicamento = opcionSinoByEsAlergiaMedicamento;
       this.opcionSinoByEsTensionArterial = opcionSinoByEsTensionArterial;
       this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico = tipoTratamientoByIdTipoTratamientoAcidoHialuronico;
       this.opcionSinoByEsAlergiaHuevo = opcionSinoByEsAlergiaHuevo;
       this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial = tipoTratamientoByIdTipoTratamientoLimpiezaFacial;
       this.tipoTratamientoByIdTipoTratamientoLaserQswitch = tipoTratamientoByIdTipoTratamientoLaserQswitch;
       this.fotoenvejecimiento = fotoenvejecimiento;
       this.opcionSinoByEsDiabetes = opcionSinoByEsDiabetes;
       this.opcionSinoByEsAnticonceptivosOrales = opcionSinoByEsAnticonceptivosOrales;
       this.tipoTratamientoByIdTipoTratamientoIpl = tipoTratamientoByIdTipoTratamientoIpl;
       this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico = tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico;
       this.tipoTratamientoByIdTipoTratamientoUltracavitacion = tipoTratamientoByIdTipoTratamientoUltracavitacion;
       this.opcionSinoByEsQuimioexfoliacion = opcionSinoByEsQuimioexfoliacion;
       this.opcionSinoByEsMasajeDrenajeLinfatico = opcionSinoByEsMasajeDrenajeLinfatico;
       this.tipoTratamientoByIdTipoTratamientoDepilacionLaser = tipoTratamientoByIdTipoTratamientoDepilacionLaser;
       this.opcionSinoByEsVelashape = opcionSinoByEsVelashape;
       this.opcionSinoByEsLaserErbium = opcionSinoByEsLaserErbium;
       this.tipoTratamientoByIdTipoTratamientoLaserCo2 = tipoTratamientoByIdTipoTratamientoLaserCo2;
       this.opcionSinoByEsAsma = opcionSinoByEsAsma;
       this.opcionSinoByEsLimpiezaFacial = opcionSinoByEsLimpiezaFacial;
       this.opcionSinoByEsDepilacionLaser = opcionSinoByEsDepilacionLaser;
       this.tipoTratamientoByIdTipoTratamientoLaserErbium = tipoTratamientoByIdTipoTratamientoLaserErbium;
       this.opcionSinoByEsRadiofrecuencia = opcionSinoByEsRadiofrecuencia;
       this.tensionArterialTto = tensionArterialTto;
       this.diabetesTto = diabetesTto;
       this.asmaTto = asmaTto;
       this.alergiaHuevoTto = alergiaHuevoTto;
       this.alergiaMedicamentoTto = alergiaMedicamentoTto;
       this.alergiaYodoTto = alergiaYodoTto;
       this.hipotiroidismoTto = hipotiroidismoTto;
       this.hipertiroidismoTto = hipertiroidismoTto;
       this.fumaCuantoDescripcion = fumaCuantoDescripcion;
       this.fumaFechaDesde = fumaFechaDesde;
       this.fumaFechaHasta = fumaFechaHasta;
       this.cigarroPaqueteDia = cigarroPaqueteDia;
       this.licorCuantoDescripcion = licorCuantoDescripcion;
       this.cafeCuantoDescripcion = cafeCuantoDescripcion;
       this.intervencionQuirurgicaDescripcion = intervencionQuirurgicaDescripcion;
       this.evacuacionesDiarias = evacuacionesDiarias;
       this.otrasAlergias = otrasAlergias;
       this.medicamentosConsume = medicamentosConsume;
       this.edadMenarquia = edadMenarquia;
       this.duracionPeriodoMenstrual = duracionPeriodoMenstrual;
       this.frecuenciaPeriodoMenstrual = frecuenciaPeriodoMenstrual;
       this.edadMenopausia = edadMenopausia;
       this.numeroGestas = numeroGestas;
       this.numeroPartos = numeroPartos;
       this.numeroAbortos = numeroAbortos;
       this.numeroCesareas = numeroCesareas;
       this.edadUltimoEmbarazo = edadUltimoEmbarazo;
       this.edadAcneAdolescencia = edadAcneAdolescencia;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
    }
   
  @GenericGenerator(name = "persona_antecedentes_dermatoestetica_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "persona_antecedentes_dermatoestetica_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "persona_antecedentes_dermatoestetica_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_protesis_mamarias")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoProtesisMamarias() {
        return this.tipoTratamientoByIdTipoTratamientoProtesisMamarias;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoProtesisMamarias(TipoTratamiento tipoTratamientoByIdTipoTratamientoProtesisMamarias) {
        this.tipoTratamientoByIdTipoTratamientoProtesisMamarias = tipoTratamientoByIdTipoTratamientoProtesisMamarias;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_cirugia_dermolipectomia")
    public OpcionSino getOpcionSinoByEsCirugiaDermolipectomia() {
        return this.opcionSinoByEsCirugiaDermolipectomia;
    }
    
    public void setOpcionSinoByEsCirugiaDermolipectomia(OpcionSino opcionSinoByEsCirugiaDermolipectomia) {
        this.opcionSinoByEsCirugiaDermolipectomia = opcionSinoByEsCirugiaDermolipectomia;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_plasma_rico_plaqueta")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta() {
        return this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta(TipoTratamiento tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta) {
        this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta = tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_familia_calvicie_paterno")
    public OpcionSino getOpcionSinoByEsFamiliaCalviciePaterno() {
        return this.opcionSinoByEsFamiliaCalviciePaterno;
    }
    
    public void setOpcionSinoByEsFamiliaCalviciePaterno(OpcionSino opcionSinoByEsFamiliaCalviciePaterno) {
        this.opcionSinoByEsFamiliaCalviciePaterno = opcionSinoByEsFamiliaCalviciePaterno;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_laser_vbeam")
    public OpcionSino getOpcionSinoByEsLaserVbeam() {
        return this.opcionSinoByEsLaserVbeam;
    }
    
    public void setOpcionSinoByEsLaserVbeam(OpcionSino opcionSinoByEsLaserVbeam) {
        this.opcionSinoByEsLaserVbeam = opcionSinoByEsLaserVbeam;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_sop")
    public OpcionSino getOpcionSinoByEsSop() {
        return this.opcionSinoByEsSop;
    }
    
    public void setOpcionSinoByEsSop(OpcionSino opcionSinoByEsSop) {
        this.opcionSinoByEsSop = opcionSinoByEsSop;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_fototipo")
    public Fototipo getFototipo() {
        return this.fototipo;
    }
    
    public void setFototipo(Fototipo fototipo) {
        this.fototipo = fototipo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_ultracavitacion")
    public OpcionSino getOpcionSinoByEsUltracavitacion() {
        return this.opcionSinoByEsUltracavitacion;
    }
    
    public void setOpcionSinoByEsUltracavitacion(OpcionSino opcionSinoByEsUltracavitacion) {
        this.opcionSinoByEsUltracavitacion = opcionSinoByEsUltracavitacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_fuma")
    public OpcionSino getOpcionSinoByEsFuma() {
        return this.opcionSinoByEsFuma;
    }
    
    public void setOpcionSinoByEsFuma(OpcionSino opcionSinoByEsFuma) {
        this.opcionSinoByEsFuma = opcionSinoByEsFuma;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_alergia_yodo")
    public OpcionSino getOpcionSinoByEsAlergiaYodo() {
        return this.opcionSinoByEsAlergiaYodo;
    }
    
    public void setOpcionSinoByEsAlergiaYodo(OpcionSino opcionSinoByEsAlergiaYodo) {
        this.opcionSinoByEsAlergiaYodo = opcionSinoByEsAlergiaYodo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_intervencion_quirurgica")
    public OpcionSino getOpcionSinoByEsIntervencionQuirurgica() {
        return this.opcionSinoByEsIntervencionQuirurgica;
    }
    
    public void setOpcionSinoByEsIntervencionQuirurgica(OpcionSino opcionSinoByEsIntervencionQuirurgica) {
        this.opcionSinoByEsIntervencionQuirurgica = opcionSinoByEsIntervencionQuirurgica;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_persona", unique=true, nullable=false)
    public Persona getPersona() {
        return this.persona;
    }
    
    public void setPersona(Persona persona) {
        this.persona = persona;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_radiofrecuencia")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoRadiofrecuencia() {
        return this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoRadiofrecuencia(TipoTratamiento tipoTratamientoByIdTipoTratamientoRadiofrecuencia) {
        this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia = tipoTratamientoByIdTipoTratamientoRadiofrecuencia;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_acne_papa")
    public OpcionSino getOpcionSinoByEsAcnePapa() {
        return this.opcionSinoByEsAcnePapa;
    }
    
    public void setOpcionSinoByEsAcnePapa(OpcionSino opcionSinoByEsAcnePapa) {
        this.opcionSinoByEsAcnePapa = opcionSinoByEsAcnePapa;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_acne_mama")
    public OpcionSino getOpcionSinoByEsAcneMama() {
        return this.opcionSinoByEsAcneMama;
    }
    
    public void setOpcionSinoByEsAcneMama(OpcionSino opcionSinoByEsAcneMama) {
        this.opcionSinoByEsAcneMama = opcionSinoByEsAcneMama;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_dolor_periodo_menstrual")
    public OpcionSino getOpcionSinoByEsDolorPeriodoMenstrual() {
        return this.opcionSinoByEsDolorPeriodoMenstrual;
    }
    
    public void setOpcionSinoByEsDolorPeriodoMenstrual(OpcionSino opcionSinoByEsDolorPeriodoMenstrual) {
        this.opcionSinoByEsDolorPeriodoMenstrual = opcionSinoByEsDolorPeriodoMenstrual;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_protesis_mamarias")
    public OpcionSino getOpcionSinoByEsProtesisMamarias() {
        return this.opcionSinoByEsProtesisMamarias;
    }
    
    public void setOpcionSinoByEsProtesisMamarias(OpcionSino opcionSinoByEsProtesisMamarias) {
        this.opcionSinoByEsProtesisMamarias = opcionSinoByEsProtesisMamarias;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_frecuencia_actividad")
    public FrecuenciaActividad getFrecuenciaActividad() {
        return this.frecuenciaActividad;
    }
    
    public void setFrecuenciaActividad(FrecuenciaActividad frecuenciaActividad) {
        this.frecuenciaActividad = frecuenciaActividad;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_familia_calvicie_materno")
    public OpcionSino getOpcionSinoByEsFamiliaCalvicieMaterno() {
        return this.opcionSinoByEsFamiliaCalvicieMaterno;
    }
    
    public void setOpcionSinoByEsFamiliaCalvicieMaterno(OpcionSino opcionSinoByEsFamiliaCalvicieMaterno) {
        this.opcionSinoByEsFamiliaCalvicieMaterno = opcionSinoByEsFamiliaCalvicieMaterno;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_hipotiroidismo")
    public OpcionSino getOpcionSinoByEsHipotiroidismo() {
        return this.opcionSinoByEsHipotiroidismo;
    }
    
    public void setOpcionSinoByEsHipotiroidismo(OpcionSino opcionSinoByEsHipotiroidismo) {
        this.opcionSinoByEsHipotiroidismo = opcionSinoByEsHipotiroidismo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_velashape")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoVelashape() {
        return this.tipoTratamientoByIdTipoTratamientoVelashape;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoVelashape(TipoTratamiento tipoTratamientoByIdTipoTratamientoVelashape) {
        this.tipoTratamientoByIdTipoTratamientoVelashape = tipoTratamientoByIdTipoTratamientoVelashape;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_plasma_rico_plaqueta")
    public OpcionSino getOpcionSinoByEsPlasmaRicoPlaqueta() {
        return this.opcionSinoByEsPlasmaRicoPlaqueta;
    }
    
    public void setOpcionSinoByEsPlasmaRicoPlaqueta(OpcionSino opcionSinoByEsPlasmaRicoPlaqueta) {
        this.opcionSinoByEsPlasmaRicoPlaqueta = opcionSinoByEsPlasmaRicoPlaqueta;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_laser_vbeam")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLaserVbeam() {
        return this.tipoTratamientoByIdTipoTratamientoLaserVbeam;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLaserVbeam(TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserVbeam) {
        this.tipoTratamientoByIdTipoTratamientoLaserVbeam = tipoTratamientoByIdTipoTratamientoLaserVbeam;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_laser_galaxy")
    public OpcionSino getOpcionSinoByEsLaserGalaxy() {
        return this.opcionSinoByEsLaserGalaxy;
    }
    
    public void setOpcionSinoByEsLaserGalaxy(OpcionSino opcionSinoByEsLaserGalaxy) {
        this.opcionSinoByEsLaserGalaxy = opcionSinoByEsLaserGalaxy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_laser_qswitch")
    public OpcionSino getOpcionSinoByEsLaserQswitch() {
        return this.opcionSinoByEsLaserQswitch;
    }
    
    public void setOpcionSinoByEsLaserQswitch(OpcionSino opcionSinoByEsLaserQswitch) {
        this.opcionSinoByEsLaserQswitch = opcionSinoByEsLaserQswitch;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_laser_galaxy")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLaserGalaxy() {
        return this.tipoTratamientoByIdTipoTratamientoLaserGalaxy;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLaserGalaxy(TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserGalaxy) {
        this.tipoTratamientoByIdTipoTratamientoLaserGalaxy = tipoTratamientoByIdTipoTratamientoLaserGalaxy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_laser_co2")
    public OpcionSino getOpcionSinoByEsLaserCo2() {
        return this.opcionSinoByEsLaserCo2;
    }
    
    public void setOpcionSinoByEsLaserCo2(OpcionSino opcionSinoByEsLaserCo2) {
        this.opcionSinoByEsLaserCo2 = opcionSinoByEsLaserCo2;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_menopausia")
    public OpcionSino getOpcionSinoByEsMenopausia() {
        return this.opcionSinoByEsMenopausia;
    }
    
    public void setOpcionSinoByEsMenopausia(OpcionSino opcionSinoByEsMenopausia) {
        this.opcionSinoByEsMenopausia = opcionSinoByEsMenopausia;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_cirugia_dermolipectomia")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia() {
        return this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia(TipoTratamiento tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia) {
        this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia = tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_quimioexfoliacion")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoQuimioexfoliacion() {
        return this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoQuimioexfoliacion(TipoTratamiento tipoTratamientoByIdTipoTratamientoQuimioexfoliacion) {
        this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion = tipoTratamientoByIdTipoTratamientoQuimioexfoliacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_toma_licor")
    public OpcionSino getOpcionSinoByEsTomaLicor() {
        return this.opcionSinoByEsTomaLicor;
    }
    
    public void setOpcionSinoByEsTomaLicor(OpcionSino opcionSinoByEsTomaLicor) {
        this.opcionSinoByEsTomaLicor = opcionSinoByEsTomaLicor;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_actividad_fisica")
    public ActividadFisica getActividadFisica() {
        return this.actividadFisica;
    }
    
    public void setActividadFisica(ActividadFisica actividadFisica) {
        this.actividadFisica = actividadFisica;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_hipertiroidismo")
    public OpcionSino getOpcionSinoByEsHipertiroidismo() {
        return this.opcionSinoByEsHipertiroidismo;
    }
    
    public void setOpcionSinoByEsHipertiroidismo(OpcionSino opcionSinoByEsHipertiroidismo) {
        this.opcionSinoByEsHipertiroidismo = opcionSinoByEsHipertiroidismo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_ipl")
    public OpcionSino getOpcionSinoByEsIpl() {
        return this.opcionSinoByEsIpl;
    }
    
    public void setOpcionSinoByEsIpl(OpcionSino opcionSinoByEsIpl) {
        this.opcionSinoByEsIpl = opcionSinoByEsIpl;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_acido_hialuronico")
    public OpcionSino getOpcionSinoByEsAcidoHialuronico() {
        return this.opcionSinoByEsAcidoHialuronico;
    }
    
    public void setOpcionSinoByEsAcidoHialuronico(OpcionSino opcionSinoByEsAcidoHialuronico) {
        this.opcionSinoByEsAcidoHialuronico = opcionSinoByEsAcidoHialuronico;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_escala_evaluacion")
    public EscalaEvaluacion getEscalaEvaluacion() {
        return this.escalaEvaluacion;
    }
    
    public void setEscalaEvaluacion(EscalaEvaluacion escalaEvaluacion) {
        this.escalaEvaluacion = escalaEvaluacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_toma_cafe")
    public OpcionSino getOpcionSinoByEsTomaCafe() {
        return this.opcionSinoByEsTomaCafe;
    }
    
    public void setOpcionSinoByEsTomaCafe(OpcionSino opcionSinoByEsTomaCafe) {
        this.opcionSinoByEsTomaCafe = opcionSinoByEsTomaCafe;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_alergia_medicamento")
    public OpcionSino getOpcionSinoByEsAlergiaMedicamento() {
        return this.opcionSinoByEsAlergiaMedicamento;
    }
    
    public void setOpcionSinoByEsAlergiaMedicamento(OpcionSino opcionSinoByEsAlergiaMedicamento) {
        this.opcionSinoByEsAlergiaMedicamento = opcionSinoByEsAlergiaMedicamento;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_tension_arterial")
    public OpcionSino getOpcionSinoByEsTensionArterial() {
        return this.opcionSinoByEsTensionArterial;
    }
    
    public void setOpcionSinoByEsTensionArterial(OpcionSino opcionSinoByEsTensionArterial) {
        this.opcionSinoByEsTensionArterial = opcionSinoByEsTensionArterial;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_acido_hialuronico")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoAcidoHialuronico() {
        return this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoAcidoHialuronico(TipoTratamiento tipoTratamientoByIdTipoTratamientoAcidoHialuronico) {
        this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico = tipoTratamientoByIdTipoTratamientoAcidoHialuronico;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_alergia_huevo")
    public OpcionSino getOpcionSinoByEsAlergiaHuevo() {
        return this.opcionSinoByEsAlergiaHuevo;
    }
    
    public void setOpcionSinoByEsAlergiaHuevo(OpcionSino opcionSinoByEsAlergiaHuevo) {
        this.opcionSinoByEsAlergiaHuevo = opcionSinoByEsAlergiaHuevo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_limpieza_facial")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLimpiezaFacial() {
        return this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLimpiezaFacial(TipoTratamiento tipoTratamientoByIdTipoTratamientoLimpiezaFacial) {
        this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial = tipoTratamientoByIdTipoTratamientoLimpiezaFacial;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_laser_qswitch")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLaserQswitch() {
        return this.tipoTratamientoByIdTipoTratamientoLaserQswitch;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLaserQswitch(TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserQswitch) {
        this.tipoTratamientoByIdTipoTratamientoLaserQswitch = tipoTratamientoByIdTipoTratamientoLaserQswitch;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_fotoenvejecimiento")
    public Fotoenvejecimiento getFotoenvejecimiento() {
        return this.fotoenvejecimiento;
    }
    
    public void setFotoenvejecimiento(Fotoenvejecimiento fotoenvejecimiento) {
        this.fotoenvejecimiento = fotoenvejecimiento;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_diabetes")
    public OpcionSino getOpcionSinoByEsDiabetes() {
        return this.opcionSinoByEsDiabetes;
    }
    
    public void setOpcionSinoByEsDiabetes(OpcionSino opcionSinoByEsDiabetes) {
        this.opcionSinoByEsDiabetes = opcionSinoByEsDiabetes;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_anticonceptivos_orales")
    public OpcionSino getOpcionSinoByEsAnticonceptivosOrales() {
        return this.opcionSinoByEsAnticonceptivosOrales;
    }
    
    public void setOpcionSinoByEsAnticonceptivosOrales(OpcionSino opcionSinoByEsAnticonceptivosOrales) {
        this.opcionSinoByEsAnticonceptivosOrales = opcionSinoByEsAnticonceptivosOrales;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_ipl")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoIpl() {
        return this.tipoTratamientoByIdTipoTratamientoIpl;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoIpl(TipoTratamiento tipoTratamientoByIdTipoTratamientoIpl) {
        this.tipoTratamientoByIdTipoTratamientoIpl = tipoTratamientoByIdTipoTratamientoIpl;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_masaje_drenaje_linfatico")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico() {
        return this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico(TipoTratamiento tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico) {
        this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico = tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_ultracavitacion")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoUltracavitacion() {
        return this.tipoTratamientoByIdTipoTratamientoUltracavitacion;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoUltracavitacion(TipoTratamiento tipoTratamientoByIdTipoTratamientoUltracavitacion) {
        this.tipoTratamientoByIdTipoTratamientoUltracavitacion = tipoTratamientoByIdTipoTratamientoUltracavitacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_quimioexfoliacion")
    public OpcionSino getOpcionSinoByEsQuimioexfoliacion() {
        return this.opcionSinoByEsQuimioexfoliacion;
    }
    
    public void setOpcionSinoByEsQuimioexfoliacion(OpcionSino opcionSinoByEsQuimioexfoliacion) {
        this.opcionSinoByEsQuimioexfoliacion = opcionSinoByEsQuimioexfoliacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_masaje_drenaje_linfatico")
    public OpcionSino getOpcionSinoByEsMasajeDrenajeLinfatico() {
        return this.opcionSinoByEsMasajeDrenajeLinfatico;
    }
    
    public void setOpcionSinoByEsMasajeDrenajeLinfatico(OpcionSino opcionSinoByEsMasajeDrenajeLinfatico) {
        this.opcionSinoByEsMasajeDrenajeLinfatico = opcionSinoByEsMasajeDrenajeLinfatico;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_depilacion_laser")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoDepilacionLaser() {
        return this.tipoTratamientoByIdTipoTratamientoDepilacionLaser;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoDepilacionLaser(TipoTratamiento tipoTratamientoByIdTipoTratamientoDepilacionLaser) {
        this.tipoTratamientoByIdTipoTratamientoDepilacionLaser = tipoTratamientoByIdTipoTratamientoDepilacionLaser;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_velashape")
    public OpcionSino getOpcionSinoByEsVelashape() {
        return this.opcionSinoByEsVelashape;
    }
    
    public void setOpcionSinoByEsVelashape(OpcionSino opcionSinoByEsVelashape) {
        this.opcionSinoByEsVelashape = opcionSinoByEsVelashape;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_laser_erbium")
    public OpcionSino getOpcionSinoByEsLaserErbium() {
        return this.opcionSinoByEsLaserErbium;
    }
    
    public void setOpcionSinoByEsLaserErbium(OpcionSino opcionSinoByEsLaserErbium) {
        this.opcionSinoByEsLaserErbium = opcionSinoByEsLaserErbium;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_laser_co2")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLaserCo2() {
        return this.tipoTratamientoByIdTipoTratamientoLaserCo2;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLaserCo2(TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserCo2) {
        this.tipoTratamientoByIdTipoTratamientoLaserCo2 = tipoTratamientoByIdTipoTratamientoLaserCo2;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_asma")
    public OpcionSino getOpcionSinoByEsAsma() {
        return this.opcionSinoByEsAsma;
    }
    
    public void setOpcionSinoByEsAsma(OpcionSino opcionSinoByEsAsma) {
        this.opcionSinoByEsAsma = opcionSinoByEsAsma;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_limpieza_facial")
    public OpcionSino getOpcionSinoByEsLimpiezaFacial() {
        return this.opcionSinoByEsLimpiezaFacial;
    }
    
    public void setOpcionSinoByEsLimpiezaFacial(OpcionSino opcionSinoByEsLimpiezaFacial) {
        this.opcionSinoByEsLimpiezaFacial = opcionSinoByEsLimpiezaFacial;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_depilacion_laser")
    public OpcionSino getOpcionSinoByEsDepilacionLaser() {
        return this.opcionSinoByEsDepilacionLaser;
    }
    
    public void setOpcionSinoByEsDepilacionLaser(OpcionSino opcionSinoByEsDepilacionLaser) {
        this.opcionSinoByEsDepilacionLaser = opcionSinoByEsDepilacionLaser;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_tratamiento_laser_erbium")
    public TipoTratamiento getTipoTratamientoByIdTipoTratamientoLaserErbium() {
        return this.tipoTratamientoByIdTipoTratamientoLaserErbium;
    }
    
    public void setTipoTratamientoByIdTipoTratamientoLaserErbium(TipoTratamiento tipoTratamientoByIdTipoTratamientoLaserErbium) {
        this.tipoTratamientoByIdTipoTratamientoLaserErbium = tipoTratamientoByIdTipoTratamientoLaserErbium;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_radiofrecuencia")
    public OpcionSino getOpcionSinoByEsRadiofrecuencia() {
        return this.opcionSinoByEsRadiofrecuencia;
    }
    
    public void setOpcionSinoByEsRadiofrecuencia(OpcionSino opcionSinoByEsRadiofrecuencia) {
        this.opcionSinoByEsRadiofrecuencia = opcionSinoByEsRadiofrecuencia;
    }
    
    @Column(name="tension_arterial_tto", length=64)
    public String getTensionArterialTto() {
        return this.tensionArterialTto;
    }
    
    public void setTensionArterialTto(String tensionArterialTto) {
        this.tensionArterialTto = tensionArterialTto;
    }
    
    @Column(name="diabetes_tto", length=64)
    public String getDiabetesTto() {
        return this.diabetesTto;
    }
    
    public void setDiabetesTto(String diabetesTto) {
        this.diabetesTto = diabetesTto;
    }
    
    @Column(name="asma_tto", length=64)
    public String getAsmaTto() {
        return this.asmaTto;
    }
    
    public void setAsmaTto(String asmaTto) {
        this.asmaTto = asmaTto;
    }
    
    @Column(name="alergia_huevo_tto", length=64)
    public String getAlergiaHuevoTto() {
        return this.alergiaHuevoTto;
    }
    
    public void setAlergiaHuevoTto(String alergiaHuevoTto) {
        this.alergiaHuevoTto = alergiaHuevoTto;
    }
    
    @Column(name="alergia_medicamento_tto", length=64)
    public String getAlergiaMedicamentoTto() {
        return this.alergiaMedicamentoTto;
    }
    
    public void setAlergiaMedicamentoTto(String alergiaMedicamentoTto) {
        this.alergiaMedicamentoTto = alergiaMedicamentoTto;
    }
    
    @Column(name="alergia_yodo_tto", length=64)
    public String getAlergiaYodoTto() {
        return this.alergiaYodoTto;
    }
    
    public void setAlergiaYodoTto(String alergiaYodoTto) {
        this.alergiaYodoTto = alergiaYodoTto;
    }
    
    @Column(name="hipotiroidismo_tto", length=64)
    public String getHipotiroidismoTto() {
        return this.hipotiroidismoTto;
    }
    
    public void setHipotiroidismoTto(String hipotiroidismoTto) {
        this.hipotiroidismoTto = hipotiroidismoTto;
    }
    
    @Column(name="hipertiroidismo_tto", length=64)
    public String getHipertiroidismoTto() {
        return this.hipertiroidismoTto;
    }
    
    public void setHipertiroidismoTto(String hipertiroidismoTto) {
        this.hipertiroidismoTto = hipertiroidismoTto;
    }
    
    @Column(name="fuma_cuanto_descripcion")
    public Long getFumaCuantoDescripcion() {
        return this.fumaCuantoDescripcion;
    }
    
    public void setFumaCuantoDescripcion(Long fumaCuantoDescripcion) {
        this.fumaCuantoDescripcion = fumaCuantoDescripcion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fuma_fecha_desde", length=29)
    public Date getFumaFechaDesde() {
        return this.fumaFechaDesde;
    }
    
    public void setFumaFechaDesde(Date fumaFechaDesde) {
        this.fumaFechaDesde = fumaFechaDesde;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fuma_fecha_hasta", length=29)
    public Date getFumaFechaHasta() {
        return this.fumaFechaHasta;
    }
    
    public void setFumaFechaHasta(Date fumaFechaHasta) {
        this.fumaFechaHasta = fumaFechaHasta;
    }
    
    @Column(name="cigarro_paquete_dia", precision=17, scale=17)
    public Double getCigarroPaqueteDia() {
        return this.cigarroPaqueteDia;
    }
    
    public void setCigarroPaqueteDia(Double cigarroPaqueteDia) {
        this.cigarroPaqueteDia = cigarroPaqueteDia;
    }
    
    @Column(name="licor_cuanto_descripcion", length=64)
    public String getLicorCuantoDescripcion() {
        return this.licorCuantoDescripcion;
    }
    
    public void setLicorCuantoDescripcion(String licorCuantoDescripcion) {
        this.licorCuantoDescripcion = licorCuantoDescripcion;
    }
    
    @Column(name="cafe_cuanto_descripcion", length=64)
    public String getCafeCuantoDescripcion() {
        return this.cafeCuantoDescripcion;
    }
    
    public void setCafeCuantoDescripcion(String cafeCuantoDescripcion) {
        this.cafeCuantoDescripcion = cafeCuantoDescripcion;
    }
    
    @Column(name="intervencion_quirurgica_descripcion", length=64)
    public String getIntervencionQuirurgicaDescripcion() {
        return this.intervencionQuirurgicaDescripcion;
    }
    
    public void setIntervencionQuirurgicaDescripcion(String intervencionQuirurgicaDescripcion) {
        this.intervencionQuirurgicaDescripcion = intervencionQuirurgicaDescripcion;
    }
    
    @Column(name="evacuaciones_diarias", length=64)
    public String getEvacuacionesDiarias() {
        return this.evacuacionesDiarias;
    }
    
    public void setEvacuacionesDiarias(String evacuacionesDiarias) {
        this.evacuacionesDiarias = evacuacionesDiarias;
    }
    
    @Column(name="otras_alergias")
    public String getOtrasAlergias() {
        return this.otrasAlergias;
    }
    
    public void setOtrasAlergias(String otrasAlergias) {
        this.otrasAlergias = otrasAlergias;
    }
    
    @Column(name="medicamentos_consume")
    public String getMedicamentosConsume() {
        return this.medicamentosConsume;
    }
    
    public void setMedicamentosConsume(String medicamentosConsume) {
        this.medicamentosConsume = medicamentosConsume;
    }
    
    @Column(name="edad_menarquia", length=64)
    public String getEdadMenarquia() {
        return this.edadMenarquia;
    }
    
    public void setEdadMenarquia(String edadMenarquia) {
        this.edadMenarquia = edadMenarquia;
    }
    
    @Column(name="duracion_periodo_menstrual", length=64)
    public String getDuracionPeriodoMenstrual() {
        return this.duracionPeriodoMenstrual;
    }
    
    public void setDuracionPeriodoMenstrual(String duracionPeriodoMenstrual) {
        this.duracionPeriodoMenstrual = duracionPeriodoMenstrual;
    }
    
    @Column(name="frecuencia_periodo_menstrual", length=64)
    public String getFrecuenciaPeriodoMenstrual() {
        return this.frecuenciaPeriodoMenstrual;
    }
    
    public void setFrecuenciaPeriodoMenstrual(String frecuenciaPeriodoMenstrual) {
        this.frecuenciaPeriodoMenstrual = frecuenciaPeriodoMenstrual;
    }
    
    @Column(name="edad_menopausia", length=32)
    public String getEdadMenopausia() {
        return this.edadMenopausia;
    }
    
    public void setEdadMenopausia(String edadMenopausia) {
        this.edadMenopausia = edadMenopausia;
    }
    
    @Column(name="numero_gestas")
    public Long getNumeroGestas() {
        return this.numeroGestas;
    }
    
    public void setNumeroGestas(Long numeroGestas) {
        this.numeroGestas = numeroGestas;
    }
    
    @Column(name="numero_partos")
    public Long getNumeroPartos() {
        return this.numeroPartos;
    }
    
    public void setNumeroPartos(Long numeroPartos) {
        this.numeroPartos = numeroPartos;
    }
    
    @Column(name="numero_abortos")
    public Long getNumeroAbortos() {
        return this.numeroAbortos;
    }
    
    public void setNumeroAbortos(Long numeroAbortos) {
        this.numeroAbortos = numeroAbortos;
    }
    
    @Column(name="numero_cesareas")
    public Long getNumeroCesareas() {
        return this.numeroCesareas;
    }
    
    public void setNumeroCesareas(Long numeroCesareas) {
        this.numeroCesareas = numeroCesareas;
    }
    
    @Column(name="edad_ultimo_embarazo", length=32)
    public String getEdadUltimoEmbarazo() {
        return this.edadUltimoEmbarazo;
    }
    
    public void setEdadUltimoEmbarazo(String edadUltimoEmbarazo) {
        this.edadUltimoEmbarazo = edadUltimoEmbarazo;
    }
    
    @Column(name="edad_acne_adolescencia", length=32)
    public String getEdadAcneAdolescencia() {
        return this.edadAcneAdolescencia;
    }
    
    public void setEdadAcneAdolescencia(String edadAcneAdolescencia) {
        this.edadAcneAdolescencia = edadAcneAdolescencia;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_creacion", length=29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_modificacion", length=29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoProtesisMamarias").append("='").append(getTipoTratamientoByIdTipoTratamientoProtesisMamarias()).append("' ");			
      buffer.append("opcionSinoByEsCirugiaDermolipectomia").append("='").append(getOpcionSinoByEsCirugiaDermolipectomia()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta").append("='").append(getTipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta()).append("' ");			
      buffer.append("opcionSinoByEsFamiliaCalviciePaterno").append("='").append(getOpcionSinoByEsFamiliaCalviciePaterno()).append("' ");			
      buffer.append("opcionSinoByEsLaserVbeam").append("='").append(getOpcionSinoByEsLaserVbeam()).append("' ");			
      buffer.append("opcionSinoByEsSop").append("='").append(getOpcionSinoByEsSop()).append("' ");			
      buffer.append("fototipo").append("='").append(getFototipo()).append("' ");			
      buffer.append("opcionSinoByEsUltracavitacion").append("='").append(getOpcionSinoByEsUltracavitacion()).append("' ");			
      buffer.append("opcionSinoByEsFuma").append("='").append(getOpcionSinoByEsFuma()).append("' ");			
      buffer.append("opcionSinoByEsAlergiaYodo").append("='").append(getOpcionSinoByEsAlergiaYodo()).append("' ");			
      buffer.append("opcionSinoByEsIntervencionQuirurgica").append("='").append(getOpcionSinoByEsIntervencionQuirurgica()).append("' ");			
      buffer.append("persona").append("='").append(getPersona()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoRadiofrecuencia").append("='").append(getTipoTratamientoByIdTipoTratamientoRadiofrecuencia()).append("' ");			
      buffer.append("opcionSinoByEsAcnePapa").append("='").append(getOpcionSinoByEsAcnePapa()).append("' ");			
      buffer.append("opcionSinoByEsAcneMama").append("='").append(getOpcionSinoByEsAcneMama()).append("' ");			
      buffer.append("opcionSinoByEsDolorPeriodoMenstrual").append("='").append(getOpcionSinoByEsDolorPeriodoMenstrual()).append("' ");			
      buffer.append("opcionSinoByEsProtesisMamarias").append("='").append(getOpcionSinoByEsProtesisMamarias()).append("' ");			
      buffer.append("frecuenciaActividad").append("='").append(getFrecuenciaActividad()).append("' ");			
      buffer.append("opcionSinoByEsFamiliaCalvicieMaterno").append("='").append(getOpcionSinoByEsFamiliaCalvicieMaterno()).append("' ");			
      buffer.append("opcionSinoByEsHipotiroidismo").append("='").append(getOpcionSinoByEsHipotiroidismo()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoVelashape").append("='").append(getTipoTratamientoByIdTipoTratamientoVelashape()).append("' ");			
      buffer.append("opcionSinoByEsPlasmaRicoPlaqueta").append("='").append(getOpcionSinoByEsPlasmaRicoPlaqueta()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLaserVbeam").append("='").append(getTipoTratamientoByIdTipoTratamientoLaserVbeam()).append("' ");			
      buffer.append("opcionSinoByEsLaserGalaxy").append("='").append(getOpcionSinoByEsLaserGalaxy()).append("' ");			
      buffer.append("opcionSinoByEsLaserQswitch").append("='").append(getOpcionSinoByEsLaserQswitch()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLaserGalaxy").append("='").append(getTipoTratamientoByIdTipoTratamientoLaserGalaxy()).append("' ");			
      buffer.append("opcionSinoByEsLaserCo2").append("='").append(getOpcionSinoByEsLaserCo2()).append("' ");			
      buffer.append("opcionSinoByEsMenopausia").append("='").append(getOpcionSinoByEsMenopausia()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia").append("='").append(getTipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoQuimioexfoliacion").append("='").append(getTipoTratamientoByIdTipoTratamientoQuimioexfoliacion()).append("' ");			
      buffer.append("opcionSinoByEsTomaLicor").append("='").append(getOpcionSinoByEsTomaLicor()).append("' ");			
      buffer.append("actividadFisica").append("='").append(getActividadFisica()).append("' ");			
      buffer.append("opcionSinoByEsHipertiroidismo").append("='").append(getOpcionSinoByEsHipertiroidismo()).append("' ");			
      buffer.append("opcionSinoByEsIpl").append("='").append(getOpcionSinoByEsIpl()).append("' ");			
      buffer.append("opcionSinoByEsAcidoHialuronico").append("='").append(getOpcionSinoByEsAcidoHialuronico()).append("' ");			
      buffer.append("escalaEvaluacion").append("='").append(getEscalaEvaluacion()).append("' ");			
      buffer.append("opcionSinoByEsTomaCafe").append("='").append(getOpcionSinoByEsTomaCafe()).append("' ");			
      buffer.append("opcionSinoByEsAlergiaMedicamento").append("='").append(getOpcionSinoByEsAlergiaMedicamento()).append("' ");			
      buffer.append("opcionSinoByEsTensionArterial").append("='").append(getOpcionSinoByEsTensionArterial()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoAcidoHialuronico").append("='").append(getTipoTratamientoByIdTipoTratamientoAcidoHialuronico()).append("' ");			
      buffer.append("opcionSinoByEsAlergiaHuevo").append("='").append(getOpcionSinoByEsAlergiaHuevo()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLimpiezaFacial").append("='").append(getTipoTratamientoByIdTipoTratamientoLimpiezaFacial()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLaserQswitch").append("='").append(getTipoTratamientoByIdTipoTratamientoLaserQswitch()).append("' ");			
      buffer.append("fotoenvejecimiento").append("='").append(getFotoenvejecimiento()).append("' ");			
      buffer.append("opcionSinoByEsDiabetes").append("='").append(getOpcionSinoByEsDiabetes()).append("' ");			
      buffer.append("opcionSinoByEsAnticonceptivosOrales").append("='").append(getOpcionSinoByEsAnticonceptivosOrales()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoIpl").append("='").append(getTipoTratamientoByIdTipoTratamientoIpl()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico").append("='").append(getTipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoUltracavitacion").append("='").append(getTipoTratamientoByIdTipoTratamientoUltracavitacion()).append("' ");			
      buffer.append("opcionSinoByEsQuimioexfoliacion").append("='").append(getOpcionSinoByEsQuimioexfoliacion()).append("' ");			
      buffer.append("opcionSinoByEsMasajeDrenajeLinfatico").append("='").append(getOpcionSinoByEsMasajeDrenajeLinfatico()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoDepilacionLaser").append("='").append(getTipoTratamientoByIdTipoTratamientoDepilacionLaser()).append("' ");			
      buffer.append("opcionSinoByEsVelashape").append("='").append(getOpcionSinoByEsVelashape()).append("' ");			
      buffer.append("opcionSinoByEsLaserErbium").append("='").append(getOpcionSinoByEsLaserErbium()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLaserCo2").append("='").append(getTipoTratamientoByIdTipoTratamientoLaserCo2()).append("' ");			
      buffer.append("opcionSinoByEsAsma").append("='").append(getOpcionSinoByEsAsma()).append("' ");			
      buffer.append("opcionSinoByEsLimpiezaFacial").append("='").append(getOpcionSinoByEsLimpiezaFacial()).append("' ");			
      buffer.append("opcionSinoByEsDepilacionLaser").append("='").append(getOpcionSinoByEsDepilacionLaser()).append("' ");			
      buffer.append("tipoTratamientoByIdTipoTratamientoLaserErbium").append("='").append(getTipoTratamientoByIdTipoTratamientoLaserErbium()).append("' ");			
      buffer.append("opcionSinoByEsRadiofrecuencia").append("='").append(getOpcionSinoByEsRadiofrecuencia()).append("' ");			
      buffer.append("tensionArterialTto").append("='").append(getTensionArterialTto()).append("' ");			
      buffer.append("diabetesTto").append("='").append(getDiabetesTto()).append("' ");			
      buffer.append("asmaTto").append("='").append(getAsmaTto()).append("' ");			
      buffer.append("alergiaHuevoTto").append("='").append(getAlergiaHuevoTto()).append("' ");			
      buffer.append("alergiaMedicamentoTto").append("='").append(getAlergiaMedicamentoTto()).append("' ");			
      buffer.append("alergiaYodoTto").append("='").append(getAlergiaYodoTto()).append("' ");			
      buffer.append("hipotiroidismoTto").append("='").append(getHipotiroidismoTto()).append("' ");			
      buffer.append("hipertiroidismoTto").append("='").append(getHipertiroidismoTto()).append("' ");			
      buffer.append("fumaCuantoDescripcion").append("='").append(getFumaCuantoDescripcion()).append("' ");			
      buffer.append("fumaFechaDesde").append("='").append(getFumaFechaDesde()).append("' ");			
      buffer.append("fumaFechaHasta").append("='").append(getFumaFechaHasta()).append("' ");			
      buffer.append("cigarroPaqueteDia").append("='").append(getCigarroPaqueteDia()).append("' ");			
      buffer.append("licorCuantoDescripcion").append("='").append(getLicorCuantoDescripcion()).append("' ");			
      buffer.append("cafeCuantoDescripcion").append("='").append(getCafeCuantoDescripcion()).append("' ");			
      buffer.append("intervencionQuirurgicaDescripcion").append("='").append(getIntervencionQuirurgicaDescripcion()).append("' ");			
      buffer.append("evacuacionesDiarias").append("='").append(getEvacuacionesDiarias()).append("' ");			
      buffer.append("otrasAlergias").append("='").append(getOtrasAlergias()).append("' ");			
      buffer.append("medicamentosConsume").append("='").append(getMedicamentosConsume()).append("' ");			
      buffer.append("edadMenarquia").append("='").append(getEdadMenarquia()).append("' ");			
      buffer.append("duracionPeriodoMenstrual").append("='").append(getDuracionPeriodoMenstrual()).append("' ");			
      buffer.append("frecuenciaPeriodoMenstrual").append("='").append(getFrecuenciaPeriodoMenstrual()).append("' ");			
      buffer.append("edadMenopausia").append("='").append(getEdadMenopausia()).append("' ");			
      buffer.append("numeroGestas").append("='").append(getNumeroGestas()).append("' ");			
      buffer.append("numeroPartos").append("='").append(getNumeroPartos()).append("' ");			
      buffer.append("numeroAbortos").append("='").append(getNumeroAbortos()).append("' ");			
      buffer.append("numeroCesareas").append("='").append(getNumeroCesareas()).append("' ");			
      buffer.append("edadUltimoEmbarazo").append("='").append(getEdadUltimoEmbarazo()).append("' ");			
      buffer.append("edadAcneAdolescencia").append("='").append(getEdadAcneAdolescencia()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof PersonaAntecedentesDermatoestetica)) 
		 	return false;
		 	
		 PersonaAntecedentesDermatoestetica castOther = ( PersonaAntecedentesDermatoestetica ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
		if(this.tipoTratamientoByIdTipoTratamientoProtesisMamarias != null &&
			(tipoTratamientoByIdTipoTratamientoProtesisMamarias.getId() == null || this.tipoTratamientoByIdTipoTratamientoProtesisMamarias.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoProtesisMamarias = null;
		}
		if(this.opcionSinoByEsCirugiaDermolipectomia != null &&
			(opcionSinoByEsCirugiaDermolipectomia.getId() == null || this.opcionSinoByEsCirugiaDermolipectomia.getId().longValue() == 0)) {
			opcionSinoByEsCirugiaDermolipectomia = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta != null &&
			(tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta.getId() == null || this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta = null;
		}
		if(this.opcionSinoByEsFamiliaCalviciePaterno != null &&
			(opcionSinoByEsFamiliaCalviciePaterno.getId() == null || this.opcionSinoByEsFamiliaCalviciePaterno.getId().longValue() == 0)) {
			opcionSinoByEsFamiliaCalviciePaterno = null;
		}
		if(this.opcionSinoByEsLaserVbeam != null &&
			(opcionSinoByEsLaserVbeam.getId() == null || this.opcionSinoByEsLaserVbeam.getId().longValue() == 0)) {
			opcionSinoByEsLaserVbeam = null;
		}
		if(this.opcionSinoByEsSop != null &&
			(opcionSinoByEsSop.getId() == null || this.opcionSinoByEsSop.getId().longValue() == 0)) {
			opcionSinoByEsSop = null;
		}
		if(this.fototipo != null &&
			(fototipo.getId() == null || this.fototipo.getId().longValue() == 0)) {
			fototipo = null;
		}
		if(this.opcionSinoByEsUltracavitacion != null &&
			(opcionSinoByEsUltracavitacion.getId() == null || this.opcionSinoByEsUltracavitacion.getId().longValue() == 0)) {
			opcionSinoByEsUltracavitacion = null;
		}
		if(this.opcionSinoByEsFuma != null &&
			(opcionSinoByEsFuma.getId() == null || this.opcionSinoByEsFuma.getId().longValue() == 0)) {
			opcionSinoByEsFuma = null;
		}
		if(this.opcionSinoByEsAlergiaYodo != null &&
			(opcionSinoByEsAlergiaYodo.getId() == null || this.opcionSinoByEsAlergiaYodo.getId().longValue() == 0)) {
			opcionSinoByEsAlergiaYodo = null;
		}
		if(this.opcionSinoByEsIntervencionQuirurgica != null &&
			(opcionSinoByEsIntervencionQuirurgica.getId() == null || this.opcionSinoByEsIntervencionQuirurgica.getId().longValue() == 0)) {
			opcionSinoByEsIntervencionQuirurgica = null;
		}
		if(this.persona != null &&
			(persona.getId() == null || this.persona.getId().longValue() == 0)) {
			persona = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia != null &&
			(tipoTratamientoByIdTipoTratamientoRadiofrecuencia.getId() == null || this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoRadiofrecuencia = null;
		}
		if(this.opcionSinoByEsAcnePapa != null &&
			(opcionSinoByEsAcnePapa.getId() == null || this.opcionSinoByEsAcnePapa.getId().longValue() == 0)) {
			opcionSinoByEsAcnePapa = null;
		}
		if(this.opcionSinoByEsAcneMama != null &&
			(opcionSinoByEsAcneMama.getId() == null || this.opcionSinoByEsAcneMama.getId().longValue() == 0)) {
			opcionSinoByEsAcneMama = null;
		}
		if(this.opcionSinoByEsDolorPeriodoMenstrual != null &&
			(opcionSinoByEsDolorPeriodoMenstrual.getId() == null || this.opcionSinoByEsDolorPeriodoMenstrual.getId().longValue() == 0)) {
			opcionSinoByEsDolorPeriodoMenstrual = null;
		}
		if(this.opcionSinoByEsProtesisMamarias != null &&
			(opcionSinoByEsProtesisMamarias.getId() == null || this.opcionSinoByEsProtesisMamarias.getId().longValue() == 0)) {
			opcionSinoByEsProtesisMamarias = null;
		}
		if(this.frecuenciaActividad != null &&
			(frecuenciaActividad.getId() == null || this.frecuenciaActividad.getId().longValue() == 0)) {
			frecuenciaActividad = null;
		}
		if(this.opcionSinoByEsFamiliaCalvicieMaterno != null &&
			(opcionSinoByEsFamiliaCalvicieMaterno.getId() == null || this.opcionSinoByEsFamiliaCalvicieMaterno.getId().longValue() == 0)) {
			opcionSinoByEsFamiliaCalvicieMaterno = null;
		}
		if(this.opcionSinoByEsHipotiroidismo != null &&
			(opcionSinoByEsHipotiroidismo.getId() == null || this.opcionSinoByEsHipotiroidismo.getId().longValue() == 0)) {
			opcionSinoByEsHipotiroidismo = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoVelashape != null &&
			(tipoTratamientoByIdTipoTratamientoVelashape.getId() == null || this.tipoTratamientoByIdTipoTratamientoVelashape.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoVelashape = null;
		}
		if(this.opcionSinoByEsPlasmaRicoPlaqueta != null &&
			(opcionSinoByEsPlasmaRicoPlaqueta.getId() == null || this.opcionSinoByEsPlasmaRicoPlaqueta.getId().longValue() == 0)) {
			opcionSinoByEsPlasmaRicoPlaqueta = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserVbeam != null &&
			(tipoTratamientoByIdTipoTratamientoLaserVbeam.getId() == null || this.tipoTratamientoByIdTipoTratamientoLaserVbeam.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLaserVbeam = null;
		}
		if(this.opcionSinoByEsLaserGalaxy != null &&
			(opcionSinoByEsLaserGalaxy.getId() == null || this.opcionSinoByEsLaserGalaxy.getId().longValue() == 0)) {
			opcionSinoByEsLaserGalaxy = null;
		}
		if(this.opcionSinoByEsLaserQswitch != null &&
			(opcionSinoByEsLaserQswitch.getId() == null || this.opcionSinoByEsLaserQswitch.getId().longValue() == 0)) {
			opcionSinoByEsLaserQswitch = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserGalaxy != null &&
			(tipoTratamientoByIdTipoTratamientoLaserGalaxy.getId() == null || this.tipoTratamientoByIdTipoTratamientoLaserGalaxy.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLaserGalaxy = null;
		}
		if(this.opcionSinoByEsLaserCo2 != null &&
			(opcionSinoByEsLaserCo2.getId() == null || this.opcionSinoByEsLaserCo2.getId().longValue() == 0)) {
			opcionSinoByEsLaserCo2 = null;
		}
		if(this.opcionSinoByEsMenopausia != null &&
			(opcionSinoByEsMenopausia.getId() == null || this.opcionSinoByEsMenopausia.getId().longValue() == 0)) {
			opcionSinoByEsMenopausia = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia != null &&
			(tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia.getId() == null || this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion != null &&
			(tipoTratamientoByIdTipoTratamientoQuimioexfoliacion.getId() == null || this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoQuimioexfoliacion = null;
		}
		if(this.opcionSinoByEsTomaLicor != null &&
			(opcionSinoByEsTomaLicor.getId() == null || this.opcionSinoByEsTomaLicor.getId().longValue() == 0)) {
			opcionSinoByEsTomaLicor = null;
		}
		if(this.actividadFisica != null &&
			(actividadFisica.getId() == null || this.actividadFisica.getId().longValue() == 0)) {
			actividadFisica = null;
		}
		if(this.opcionSinoByEsHipertiroidismo != null &&
			(opcionSinoByEsHipertiroidismo.getId() == null || this.opcionSinoByEsHipertiroidismo.getId().longValue() == 0)) {
			opcionSinoByEsHipertiroidismo = null;
		}
		if(this.opcionSinoByEsIpl != null &&
			(opcionSinoByEsIpl.getId() == null || this.opcionSinoByEsIpl.getId().longValue() == 0)) {
			opcionSinoByEsIpl = null;
		}
		if(this.opcionSinoByEsAcidoHialuronico != null &&
			(opcionSinoByEsAcidoHialuronico.getId() == null || this.opcionSinoByEsAcidoHialuronico.getId().longValue() == 0)) {
			opcionSinoByEsAcidoHialuronico = null;
		}
		if(this.escalaEvaluacion != null &&
			(escalaEvaluacion.getId() == null || this.escalaEvaluacion.getId().longValue() == 0)) {
			escalaEvaluacion = null;
		}
		if(this.opcionSinoByEsTomaCafe != null &&
			(opcionSinoByEsTomaCafe.getId() == null || this.opcionSinoByEsTomaCafe.getId().longValue() == 0)) {
			opcionSinoByEsTomaCafe = null;
		}
		if(this.opcionSinoByEsAlergiaMedicamento != null &&
			(opcionSinoByEsAlergiaMedicamento.getId() == null || this.opcionSinoByEsAlergiaMedicamento.getId().longValue() == 0)) {
			opcionSinoByEsAlergiaMedicamento = null;
		}
		if(this.opcionSinoByEsTensionArterial != null &&
			(opcionSinoByEsTensionArterial.getId() == null || this.opcionSinoByEsTensionArterial.getId().longValue() == 0)) {
			opcionSinoByEsTensionArterial = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico != null &&
			(tipoTratamientoByIdTipoTratamientoAcidoHialuronico.getId() == null || this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoAcidoHialuronico = null;
		}
		if(this.opcionSinoByEsAlergiaHuevo != null &&
			(opcionSinoByEsAlergiaHuevo.getId() == null || this.opcionSinoByEsAlergiaHuevo.getId().longValue() == 0)) {
			opcionSinoByEsAlergiaHuevo = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial != null &&
			(tipoTratamientoByIdTipoTratamientoLimpiezaFacial.getId() == null || this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLimpiezaFacial = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserQswitch != null &&
			(tipoTratamientoByIdTipoTratamientoLaserQswitch.getId() == null || this.tipoTratamientoByIdTipoTratamientoLaserQswitch.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLaserQswitch = null;
		}
		if(this.fotoenvejecimiento != null &&
			(fotoenvejecimiento.getId() == null || this.fotoenvejecimiento.getId().longValue() == 0)) {
			fotoenvejecimiento = null;
		}
		if(this.opcionSinoByEsDiabetes != null &&
			(opcionSinoByEsDiabetes.getId() == null || this.opcionSinoByEsDiabetes.getId().longValue() == 0)) {
			opcionSinoByEsDiabetes = null;
		}
		if(this.opcionSinoByEsAnticonceptivosOrales != null &&
			(opcionSinoByEsAnticonceptivosOrales.getId() == null || this.opcionSinoByEsAnticonceptivosOrales.getId().longValue() == 0)) {
			opcionSinoByEsAnticonceptivosOrales = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoIpl != null &&
			(tipoTratamientoByIdTipoTratamientoIpl.getId() == null || this.tipoTratamientoByIdTipoTratamientoIpl.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoIpl = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico != null &&
			(tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico.getId() == null || this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoUltracavitacion != null &&
			(tipoTratamientoByIdTipoTratamientoUltracavitacion.getId() == null || this.tipoTratamientoByIdTipoTratamientoUltracavitacion.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoUltracavitacion = null;
		}
		if(this.opcionSinoByEsQuimioexfoliacion != null &&
			(opcionSinoByEsQuimioexfoliacion.getId() == null || this.opcionSinoByEsQuimioexfoliacion.getId().longValue() == 0)) {
			opcionSinoByEsQuimioexfoliacion = null;
		}
		if(this.opcionSinoByEsMasajeDrenajeLinfatico != null &&
			(opcionSinoByEsMasajeDrenajeLinfatico.getId() == null || this.opcionSinoByEsMasajeDrenajeLinfatico.getId().longValue() == 0)) {
			opcionSinoByEsMasajeDrenajeLinfatico = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoDepilacionLaser != null &&
			(tipoTratamientoByIdTipoTratamientoDepilacionLaser.getId() == null || this.tipoTratamientoByIdTipoTratamientoDepilacionLaser.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoDepilacionLaser = null;
		}
		if(this.opcionSinoByEsVelashape != null &&
			(opcionSinoByEsVelashape.getId() == null || this.opcionSinoByEsVelashape.getId().longValue() == 0)) {
			opcionSinoByEsVelashape = null;
		}
		if(this.opcionSinoByEsLaserErbium != null &&
			(opcionSinoByEsLaserErbium.getId() == null || this.opcionSinoByEsLaserErbium.getId().longValue() == 0)) {
			opcionSinoByEsLaserErbium = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserCo2 != null &&
			(tipoTratamientoByIdTipoTratamientoLaserCo2.getId() == null || this.tipoTratamientoByIdTipoTratamientoLaserCo2.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLaserCo2 = null;
		}
		if(this.opcionSinoByEsAsma != null &&
			(opcionSinoByEsAsma.getId() == null || this.opcionSinoByEsAsma.getId().longValue() == 0)) {
			opcionSinoByEsAsma = null;
		}
		if(this.opcionSinoByEsLimpiezaFacial != null &&
			(opcionSinoByEsLimpiezaFacial.getId() == null || this.opcionSinoByEsLimpiezaFacial.getId().longValue() == 0)) {
			opcionSinoByEsLimpiezaFacial = null;
		}
		if(this.opcionSinoByEsDepilacionLaser != null &&
			(opcionSinoByEsDepilacionLaser.getId() == null || this.opcionSinoByEsDepilacionLaser.getId().longValue() == 0)) {
			opcionSinoByEsDepilacionLaser = null;
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserErbium != null &&
			(tipoTratamientoByIdTipoTratamientoLaserErbium.getId() == null || this.tipoTratamientoByIdTipoTratamientoLaserErbium.getId().longValue() == 0)) {
			tipoTratamientoByIdTipoTratamientoLaserErbium = null;
		}
		if(this.opcionSinoByEsRadiofrecuencia != null &&
			(opcionSinoByEsRadiofrecuencia.getId() == null || this.opcionSinoByEsRadiofrecuencia.getId().longValue() == 0)) {
			opcionSinoByEsRadiofrecuencia = null;
		}
    }
    
    public void fillPOJO() {
		if(this.tipoTratamientoByIdTipoTratamientoProtesisMamarias == null) {
			tipoTratamientoByIdTipoTratamientoProtesisMamarias = new TipoTratamiento();
		}
		if(this.opcionSinoByEsCirugiaDermolipectomia == null) {
			opcionSinoByEsCirugiaDermolipectomia = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta == null) {
			tipoTratamientoByIdTipoTratamientoPlasmaRicoPlaqueta = new TipoTratamiento();
		}
		if(this.opcionSinoByEsFamiliaCalviciePaterno == null) {
			opcionSinoByEsFamiliaCalviciePaterno = new OpcionSino();
		}
		if(this.opcionSinoByEsLaserVbeam == null) {
			opcionSinoByEsLaserVbeam = new OpcionSino();
		}
		if(this.opcionSinoByEsSop == null) {
			opcionSinoByEsSop = new OpcionSino();
		}
		if(this.fototipo == null) {
			fototipo = new Fototipo();
		}
		if(this.opcionSinoByEsUltracavitacion == null) {
			opcionSinoByEsUltracavitacion = new OpcionSino();
		}
		if(this.opcionSinoByEsFuma == null) {
			opcionSinoByEsFuma = new OpcionSino();
		}
		if(this.opcionSinoByEsAlergiaYodo == null) {
			opcionSinoByEsAlergiaYodo = new OpcionSino();
		}
		if(this.opcionSinoByEsIntervencionQuirurgica == null) {
			opcionSinoByEsIntervencionQuirurgica = new OpcionSino();
		}
		if(this.persona == null) {
			persona = new Persona();
		}
		if(this.tipoTratamientoByIdTipoTratamientoRadiofrecuencia == null) {
			tipoTratamientoByIdTipoTratamientoRadiofrecuencia = new TipoTratamiento();
		}
		if(this.opcionSinoByEsAcnePapa == null) {
			opcionSinoByEsAcnePapa = new OpcionSino();
		}
		if(this.opcionSinoByEsAcneMama == null) {
			opcionSinoByEsAcneMama = new OpcionSino();
		}
		if(this.opcionSinoByEsDolorPeriodoMenstrual == null) {
			opcionSinoByEsDolorPeriodoMenstrual = new OpcionSino();
		}
		if(this.opcionSinoByEsProtesisMamarias == null) {
			opcionSinoByEsProtesisMamarias = new OpcionSino();
		}
		if(this.frecuenciaActividad == null) {
			frecuenciaActividad = new FrecuenciaActividad();
		}
		if(this.opcionSinoByEsFamiliaCalvicieMaterno == null) {
			opcionSinoByEsFamiliaCalvicieMaterno = new OpcionSino();
		}
		if(this.opcionSinoByEsHipotiroidismo == null) {
			opcionSinoByEsHipotiroidismo = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoVelashape == null) {
			tipoTratamientoByIdTipoTratamientoVelashape = new TipoTratamiento();
		}
		if(this.opcionSinoByEsPlasmaRicoPlaqueta == null) {
			opcionSinoByEsPlasmaRicoPlaqueta = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserVbeam == null) {
			tipoTratamientoByIdTipoTratamientoLaserVbeam = new TipoTratamiento();
		}
		if(this.opcionSinoByEsLaserGalaxy == null) {
			opcionSinoByEsLaserGalaxy = new OpcionSino();
		}
		if(this.opcionSinoByEsLaserQswitch == null) {
			opcionSinoByEsLaserQswitch = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserGalaxy == null) {
			tipoTratamientoByIdTipoTratamientoLaserGalaxy = new TipoTratamiento();
		}
		if(this.opcionSinoByEsLaserCo2 == null) {
			opcionSinoByEsLaserCo2 = new OpcionSino();
		}
		if(this.opcionSinoByEsMenopausia == null) {
			opcionSinoByEsMenopausia = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia == null) {
			tipoTratamientoByIdTipoTratamientoCirugiaDermolipectomia = new TipoTratamiento();
		}
		if(this.tipoTratamientoByIdTipoTratamientoQuimioexfoliacion == null) {
			tipoTratamientoByIdTipoTratamientoQuimioexfoliacion = new TipoTratamiento();
		}
		if(this.opcionSinoByEsTomaLicor == null) {
			opcionSinoByEsTomaLicor = new OpcionSino();
		}
		if(this.actividadFisica == null) {
			actividadFisica = new ActividadFisica();
		}
		if(this.opcionSinoByEsHipertiroidismo == null) {
			opcionSinoByEsHipertiroidismo = new OpcionSino();
		}
		if(this.opcionSinoByEsIpl == null) {
			opcionSinoByEsIpl = new OpcionSino();
		}
		if(this.opcionSinoByEsAcidoHialuronico == null) {
			opcionSinoByEsAcidoHialuronico = new OpcionSino();
		}
		if(this.escalaEvaluacion == null) {
			escalaEvaluacion = new EscalaEvaluacion();
		}
		if(this.opcionSinoByEsTomaCafe == null) {
			opcionSinoByEsTomaCafe = new OpcionSino();
		}
		if(this.opcionSinoByEsAlergiaMedicamento == null) {
			opcionSinoByEsAlergiaMedicamento = new OpcionSino();
		}
		if(this.opcionSinoByEsTensionArterial == null) {
			opcionSinoByEsTensionArterial = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoAcidoHialuronico == null) {
			tipoTratamientoByIdTipoTratamientoAcidoHialuronico = new TipoTratamiento();
		}
		if(this.opcionSinoByEsAlergiaHuevo == null) {
			opcionSinoByEsAlergiaHuevo = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLimpiezaFacial == null) {
			tipoTratamientoByIdTipoTratamientoLimpiezaFacial = new TipoTratamiento();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserQswitch == null) {
			tipoTratamientoByIdTipoTratamientoLaserQswitch = new TipoTratamiento();
		}
		if(this.fotoenvejecimiento == null) {
			fotoenvejecimiento = new Fotoenvejecimiento();
		}
		if(this.opcionSinoByEsDiabetes == null) {
			opcionSinoByEsDiabetes = new OpcionSino();
		}
		if(this.opcionSinoByEsAnticonceptivosOrales == null) {
			opcionSinoByEsAnticonceptivosOrales = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoIpl == null) {
			tipoTratamientoByIdTipoTratamientoIpl = new TipoTratamiento();
		}
		if(this.tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico == null) {
			tipoTratamientoByIdTipoTratamientoMasajeDrenajeLinfatico = new TipoTratamiento();
		}
		if(this.tipoTratamientoByIdTipoTratamientoUltracavitacion == null) {
			tipoTratamientoByIdTipoTratamientoUltracavitacion = new TipoTratamiento();
		}
		if(this.opcionSinoByEsQuimioexfoliacion == null) {
			opcionSinoByEsQuimioexfoliacion = new OpcionSino();
		}
		if(this.opcionSinoByEsMasajeDrenajeLinfatico == null) {
			opcionSinoByEsMasajeDrenajeLinfatico = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoDepilacionLaser == null) {
			tipoTratamientoByIdTipoTratamientoDepilacionLaser = new TipoTratamiento();
		}
		if(this.opcionSinoByEsVelashape == null) {
			opcionSinoByEsVelashape = new OpcionSino();
		}
		if(this.opcionSinoByEsLaserErbium == null) {
			opcionSinoByEsLaserErbium = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserCo2 == null) {
			tipoTratamientoByIdTipoTratamientoLaserCo2 = new TipoTratamiento();
		}
		if(this.opcionSinoByEsAsma == null) {
			opcionSinoByEsAsma = new OpcionSino();
		}
		if(this.opcionSinoByEsLimpiezaFacial == null) {
			opcionSinoByEsLimpiezaFacial = new OpcionSino();
		}
		if(this.opcionSinoByEsDepilacionLaser == null) {
			opcionSinoByEsDepilacionLaser = new OpcionSino();
		}
		if(this.tipoTratamientoByIdTipoTratamientoLaserErbium == null) {
			tipoTratamientoByIdTipoTratamientoLaserErbium = new TipoTratamiento();
		}
		if(this.opcionSinoByEsRadiofrecuencia == null) {
			opcionSinoByEsRadiofrecuencia = new OpcionSino();
		}
    }
    
    public PersonaAntecedentesDermatoestetica createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

