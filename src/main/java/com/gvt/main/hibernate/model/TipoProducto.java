package com.gvt.main.hibernate.model;
// Generated 09-feb-2020 20:04:15 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * TipoProducto generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="tipo_producto"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames={"codigo_tipo_producto", "id_organizacion"}) 
)
public class TipoProducto  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private CategoriaProducto categoriaProducto;
 	
 	private OpcionSino opcionSinoByEsIvaGeneral;
 	
 	private OpcionSino opcionSinoByEsServicio;
 	
 	private OpcionSino opcionSinoByEsDeshabilitado;
 	
 	private MarcaProducto marcaProducto;
 	
 	private UnidadMedida unidadMedida;
 	
 	private OpcionSino opcionSinoByEsExento;
 	
 	private OpcionSino opcionSinoByEsLote;
 	
 	private ModeloProducto modeloProducto;
 	
 	private Organizacion organizacion;
 	
 	private String codigoTipoProducto;
 	
 	private String nombreTipoProducto;
 	
 	private String descripcionTipoProducto;
 	
 	private BigDecimal costoAnterior;
 	
 	private BigDecimal costoActual;
 	
 	private Float porcentajeIva;
 	
 	private Double peso;
 	
 	private String urlFoto;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private Date fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private Date fechaModificacion;
 	
 	private Set<TipoProductoOrganizacion> tipoProductoOrganizacions = new HashSet<TipoProductoOrganizacion>(0);
 	
 	private Set<TipoProductoAlmacen> tipoProductoAlmacens = new HashSet<TipoProductoAlmacen>(0);

    public TipoProducto() {
    	// default constructor
    }

	
    public TipoProducto(OpcionSino opcionSinoByEsIvaGeneral, OpcionSino opcionSinoByEsServicio, OpcionSino opcionSinoByEsDeshabilitado, OpcionSino opcionSinoByEsExento, Organizacion organizacion, String codigoTipoProducto, String nombreTipoProducto, BigDecimal costoActual) {
        this.opcionSinoByEsIvaGeneral = opcionSinoByEsIvaGeneral;
        this.opcionSinoByEsServicio = opcionSinoByEsServicio;
        this.opcionSinoByEsDeshabilitado = opcionSinoByEsDeshabilitado;
        this.opcionSinoByEsExento = opcionSinoByEsExento;
        this.organizacion = organizacion;
        this.codigoTipoProducto = codigoTipoProducto;
        this.nombreTipoProducto = nombreTipoProducto;
        this.costoActual = costoActual;
    }
    public TipoProducto(CategoriaProducto categoriaProducto, OpcionSino opcionSinoByEsIvaGeneral, OpcionSino opcionSinoByEsServicio, OpcionSino opcionSinoByEsDeshabilitado, MarcaProducto marcaProducto, UnidadMedida unidadMedida, OpcionSino opcionSinoByEsExento, OpcionSino opcionSinoByEsLote, ModeloProducto modeloProducto, Organizacion organizacion, String codigoTipoProducto, String nombreTipoProducto, String descripcionTipoProducto, BigDecimal costoAnterior, BigDecimal costoActual, Float porcentajeIva, Double peso, String urlFoto, String usuarioCreacion, Date fechaCreacion, String usuarioModificacion, Date fechaModificacion, Set<TipoProductoOrganizacion> tipoProductoOrganizacions, Set<TipoProductoAlmacen> tipoProductoAlmacens) {
       this.categoriaProducto = categoriaProducto;
       this.opcionSinoByEsIvaGeneral = opcionSinoByEsIvaGeneral;
       this.opcionSinoByEsServicio = opcionSinoByEsServicio;
       this.opcionSinoByEsDeshabilitado = opcionSinoByEsDeshabilitado;
       this.marcaProducto = marcaProducto;
       this.unidadMedida = unidadMedida;
       this.opcionSinoByEsExento = opcionSinoByEsExento;
       this.opcionSinoByEsLote = opcionSinoByEsLote;
       this.modeloProducto = modeloProducto;
       this.organizacion = organizacion;
       this.codigoTipoProducto = codigoTipoProducto;
       this.nombreTipoProducto = nombreTipoProducto;
       this.descripcionTipoProducto = descripcionTipoProducto;
       this.costoAnterior = costoAnterior;
       this.costoActual = costoActual;
       this.porcentajeIva = porcentajeIva;
       this.peso = peso;
       this.urlFoto = urlFoto;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
       this.tipoProductoOrganizacions = tipoProductoOrganizacions;
       this.tipoProductoAlmacens = tipoProductoAlmacens;
    }
   
  @GenericGenerator(name = "tipo_producto_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "tipo_producto_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "tipo_producto_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_categoria_producto")
    public CategoriaProducto getCategoriaProducto() {
        return this.categoriaProducto;
    }
    
    public void setCategoriaProducto(CategoriaProducto categoriaProducto) {
        this.categoriaProducto = categoriaProducto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_iva_general", nullable=false)
    public OpcionSino getOpcionSinoByEsIvaGeneral() {
        return this.opcionSinoByEsIvaGeneral;
    }
    
    public void setOpcionSinoByEsIvaGeneral(OpcionSino opcionSinoByEsIvaGeneral) {
        this.opcionSinoByEsIvaGeneral = opcionSinoByEsIvaGeneral;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_servicio", nullable=false)
    public OpcionSino getOpcionSinoByEsServicio() {
        return this.opcionSinoByEsServicio;
    }
    
    public void setOpcionSinoByEsServicio(OpcionSino opcionSinoByEsServicio) {
        this.opcionSinoByEsServicio = opcionSinoByEsServicio;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_deshabilitado", nullable=false)
    public OpcionSino getOpcionSinoByEsDeshabilitado() {
        return this.opcionSinoByEsDeshabilitado;
    }
    
    public void setOpcionSinoByEsDeshabilitado(OpcionSino opcionSinoByEsDeshabilitado) {
        this.opcionSinoByEsDeshabilitado = opcionSinoByEsDeshabilitado;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_marca_producto")
    public MarcaProducto getMarcaProducto() {
        return this.marcaProducto;
    }
    
    public void setMarcaProducto(MarcaProducto marcaProducto) {
        this.marcaProducto = marcaProducto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_unidad_medida")
    public UnidadMedida getUnidadMedida() {
        return this.unidadMedida;
    }
    
    public void setUnidadMedida(UnidadMedida unidadMedida) {
        this.unidadMedida = unidadMedida;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_exento", nullable=false)
    public OpcionSino getOpcionSinoByEsExento() {
        return this.opcionSinoByEsExento;
    }
    
    public void setOpcionSinoByEsExento(OpcionSino opcionSinoByEsExento) {
        this.opcionSinoByEsExento = opcionSinoByEsExento;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_lote")
    public OpcionSino getOpcionSinoByEsLote() {
        return this.opcionSinoByEsLote;
    }
    
    public void setOpcionSinoByEsLote(OpcionSino opcionSinoByEsLote) {
        this.opcionSinoByEsLote = opcionSinoByEsLote;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_modelo_producto")
    public ModeloProducto getModeloProducto() {
        return this.modeloProducto;
    }
    
    public void setModeloProducto(ModeloProducto modeloProducto) {
        this.modeloProducto = modeloProducto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_organizacion", nullable=false)
    public Organizacion getOrganizacion() {
        return this.organizacion;
    }
    
    public void setOrganizacion(Organizacion organizacion) {
        this.organizacion = organizacion;
    }
    
    @Column(name="codigo_tipo_producto", nullable=false, length=64)
    public String getCodigoTipoProducto() {
        return this.codigoTipoProducto;
    }
    
    public void setCodigoTipoProducto(String codigoTipoProducto) {
        this.codigoTipoProducto = codigoTipoProducto;
    }
    
    @Column(name="nombre_tipo_producto", nullable=false, length=64)
    public String getNombreTipoProducto() {
        return this.nombreTipoProducto;
    }
    
    public void setNombreTipoProducto(String nombreTipoProducto) {
        this.nombreTipoProducto = nombreTipoProducto;
    }
    
    @Column(name="descripcion_tipo_producto")
    public String getDescripcionTipoProducto() {
        return this.descripcionTipoProducto;
    }
    
    public void setDescripcionTipoProducto(String descripcionTipoProducto) {
        this.descripcionTipoProducto = descripcionTipoProducto;
    }
    
    @Column(name="costo_anterior", precision=22)
    public BigDecimal getCostoAnterior() {
        return this.costoAnterior;
    }
    
    public void setCostoAnterior(BigDecimal costoAnterior) {
        this.costoAnterior = costoAnterior;
    }
    
    @Column(name="costo_actual", nullable=false, precision=22)
    public BigDecimal getCostoActual() {
        return this.costoActual;
    }
    
    public void setCostoActual(BigDecimal costoActual) {
        this.costoActual = costoActual;
    }
    
    @Column(name="porcentaje_iva", precision=8, scale=8)
    public Float getPorcentajeIva() {
        return this.porcentajeIva;
    }
    
    public void setPorcentajeIva(Float porcentajeIva) {
        this.porcentajeIva = porcentajeIva;
    }
    
    @Column(name="peso", precision=17, scale=17)
    public Double getPeso() {
        return this.peso;
    }
    
    public void setPeso(Double peso) {
        this.peso = peso;
    }
    
    @Column(name="url_foto")
    public String getUrlFoto() {
        return this.urlFoto;
    }
    
    public void setUrlFoto(String urlFoto) {
        this.urlFoto = urlFoto;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_creacion", length=29)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_modificacion", length=29)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tipoProducto")
    public Set<TipoProductoOrganizacion> getTipoProductoOrganizacions() {
        return this.tipoProductoOrganizacions;
    }
    
    public void setTipoProductoOrganizacions(Set<TipoProductoOrganizacion> tipoProductoOrganizacions) {
        this.tipoProductoOrganizacions = tipoProductoOrganizacions;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tipoProducto")
    public Set<TipoProductoAlmacen> getTipoProductoAlmacens() {
        return this.tipoProductoAlmacens;
    }
    
    public void setTipoProductoAlmacens(Set<TipoProductoAlmacen> tipoProductoAlmacens) {
        this.tipoProductoAlmacens = tipoProductoAlmacens;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("categoriaProducto").append("='").append(getCategoriaProducto()).append("' ");			
      buffer.append("opcionSinoByEsIvaGeneral").append("='").append(getOpcionSinoByEsIvaGeneral()).append("' ");			
      buffer.append("opcionSinoByEsServicio").append("='").append(getOpcionSinoByEsServicio()).append("' ");			
      buffer.append("opcionSinoByEsDeshabilitado").append("='").append(getOpcionSinoByEsDeshabilitado()).append("' ");			
      buffer.append("marcaProducto").append("='").append(getMarcaProducto()).append("' ");			
      buffer.append("unidadMedida").append("='").append(getUnidadMedida()).append("' ");			
      buffer.append("opcionSinoByEsExento").append("='").append(getOpcionSinoByEsExento()).append("' ");			
      buffer.append("opcionSinoByEsLote").append("='").append(getOpcionSinoByEsLote()).append("' ");			
      buffer.append("modeloProducto").append("='").append(getModeloProducto()).append("' ");			
      buffer.append("organizacion").append("='").append(getOrganizacion()).append("' ");			
      buffer.append("codigoTipoProducto").append("='").append(getCodigoTipoProducto()).append("' ");			
      buffer.append("nombreTipoProducto").append("='").append(getNombreTipoProducto()).append("' ");			
      buffer.append("descripcionTipoProducto").append("='").append(getDescripcionTipoProducto()).append("' ");			
      buffer.append("costoAnterior").append("='").append(getCostoAnterior()).append("' ");			
      buffer.append("costoActual").append("='").append(getCostoActual()).append("' ");			
      buffer.append("porcentajeIva").append("='").append(getPorcentajeIva()).append("' ");			
      buffer.append("peso").append("='").append(getPeso()).append("' ");			
      buffer.append("urlFoto").append("='").append(getUrlFoto()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof TipoProducto)) 
		 	return false;
		 	
		 TipoProducto castOther = ( TipoProducto ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
		if(this.categoriaProducto != null &&
			(categoriaProducto.getId() == null || this.categoriaProducto.getId().longValue() == 0)) {
			categoriaProducto = null;
		}
		if(this.opcionSinoByEsIvaGeneral != null &&
			(opcionSinoByEsIvaGeneral.getId() == null || this.opcionSinoByEsIvaGeneral.getId().longValue() == 0)) {
			opcionSinoByEsIvaGeneral = null;
		}
		if(this.opcionSinoByEsServicio != null &&
			(opcionSinoByEsServicio.getId() == null || this.opcionSinoByEsServicio.getId().longValue() == 0)) {
			opcionSinoByEsServicio = null;
		}
		if(this.opcionSinoByEsDeshabilitado != null &&
			(opcionSinoByEsDeshabilitado.getId() == null || this.opcionSinoByEsDeshabilitado.getId().longValue() == 0)) {
			opcionSinoByEsDeshabilitado = null;
		}
		if(this.marcaProducto != null &&
			(marcaProducto.getId() == null || this.marcaProducto.getId().longValue() == 0)) {
			marcaProducto = null;
		}
		if(this.unidadMedida != null &&
			(unidadMedida.getId() == null || this.unidadMedida.getId().longValue() == 0)) {
			unidadMedida = null;
		}
		if(this.opcionSinoByEsExento != null &&
			(opcionSinoByEsExento.getId() == null || this.opcionSinoByEsExento.getId().longValue() == 0)) {
			opcionSinoByEsExento = null;
		}
		if(this.opcionSinoByEsLote != null &&
			(opcionSinoByEsLote.getId() == null || this.opcionSinoByEsLote.getId().longValue() == 0)) {
			opcionSinoByEsLote = null;
		}
		if(this.modeloProducto != null &&
			(modeloProducto.getId() == null || this.modeloProducto.getId().longValue() == 0)) {
			modeloProducto = null;
		}
		if(this.organizacion != null &&
			(organizacion.getId() == null || this.organizacion.getId().longValue() == 0)) {
			organizacion = null;
		}
    }
    
    public void fillPOJO() {
		if(this.categoriaProducto == null) {
			categoriaProducto = new CategoriaProducto();
		}
		if(this.opcionSinoByEsIvaGeneral == null) {
			opcionSinoByEsIvaGeneral = new OpcionSino();
		}
		if(this.opcionSinoByEsServicio == null) {
			opcionSinoByEsServicio = new OpcionSino();
		}
		if(this.opcionSinoByEsDeshabilitado == null) {
			opcionSinoByEsDeshabilitado = new OpcionSino();
		}
		if(this.marcaProducto == null) {
			marcaProducto = new MarcaProducto();
		}
		if(this.unidadMedida == null) {
			unidadMedida = new UnidadMedida();
		}
		if(this.opcionSinoByEsExento == null) {
			opcionSinoByEsExento = new OpcionSino();
		}
		if(this.opcionSinoByEsLote == null) {
			opcionSinoByEsLote = new OpcionSino();
		}
		if(this.modeloProducto == null) {
			modeloProducto = new ModeloProducto();
		}
		if(this.organizacion == null) {
			organizacion = new Organizacion();
		}
    }
    
    public TipoProducto createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

