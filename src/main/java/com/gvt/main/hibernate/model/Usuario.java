package com.gvt.main.hibernate.model;
// Generated 29-oct-2020 13:48:51 by Hibernate Tools 3.2.2.GA and Assent Architecture


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * Usuario generated by hbm2java
 */
@Entity
@EntityListeners({ AuditingEntityListener.class })
@Table(name="usuario"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="codigo_usuario") 
)
public class Usuario  implements Versionable,Seleccionable,Identificable,Fillable,Cleanable,Auditable,java.io.Serializable {


 	
 	private Long id;
 	
 	private long version;
 	
 	private DistintivoPersona distintivoPersona;
 	
 	private OpcionSino opcionSinoByEsCuentaExpirada;
 	
 	private OpcionSino opcionSinoByEsPinHabilitado;
 	
 	private OpcionSino opcionSinoByEsConfiguradoPerfil;
 	
 	private Profesion profesion;
 	
 	private OpcionSino opcionSinoByEsCredencialesExpiradas;
 	
 	private OpcionSino opcionSinoByEsActiva;
 	
 	private UbicacionGeografica ubicacionGeografica;
 	
 	private OpcionSino opcionSinoByEsCuentaBloqueada;
 	
 	private Especialidad especialidad;
 	
 	private OpcionSino opcionSinoByPrintTicketCita;
 	
 	private TipoUsuario tipoUsuario;
 	
 	private String codigoUsuario;
 	
 	private String passwordUsuario;
 	
 	private String passwordHintUsuario;
 	
 	private String cedulaUsuario;
 	
 	private String nombreUsuario;
 	
 	private String apellidoUsuario;
 	
 	private String EMailUsuario;
 	
 	private String url1;
 	
 	private String textoArribaDerecha;
 	
 	private String textoPieDePagina;
 	
 	private String formatoFirma;
 	
 	private String contextParam;
 	
 	private Integer refreshEditorContext;
 	
 	private Integer refreshConsultaContext;
 	
 	private Integer refreshLobbyContext;
 	
 	private Integer refreshUsuarioContextEditor;
 	
 	private Integer refreshUsuarioContextConsulta;
 	
 	private Integer refreshUsuarioContextLobby;
 	
 	private LocalDateTime fechaUltimoLogin;
 	@CreatedBy
 	private String usuarioCreacion;
 	@CreatedDate
 	private LocalDateTime fechaCreacion;
 	@LastModifiedBy
 	private String usuarioModificacion;
 	@LastModifiedDate
 	private LocalDateTime fechaModificacion;
 	
 	private Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario = new HashSet<UsuarioAgendarUsuario>(0);
 	
 	private Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionador = new HashSet<UsuarioGestion>(0);
 	
 	private Set<TimelineImagen> timelineImagens = new HashSet<TimelineImagen>(0);
 	
 	private Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario = new HashSet<UsuarioConfigurarUsuario>(0);
 	
 	private Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioConfigurador = new HashSet<UsuarioConfigurarUsuario>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuarioTrabajaCon = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuario = new HashSet<UsuarioOrganizacion>(0);
 	
 	private Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionado = new HashSet<UsuarioGestion>(0);
 	
 	private Set<Timeline> timelines = new HashSet<Timeline>(0);
 	
 	private Set<TimelineProtocoloCie10> timelineProtocoloCie10s = new HashSet<TimelineProtocoloCie10>(0);
 	
 	private Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAgendador = new HashSet<UsuarioAgendarUsuario>(0);
 	
 	private Set<RolUsuario> rolUsuarios = new HashSet<RolUsuario>(0);

    public Usuario() {
    	// default constructor
    }

	
    public Usuario(OpcionSino opcionSinoByEsActiva, String codigoUsuario, String passwordUsuario, String cedulaUsuario, String nombreUsuario, String apellidoUsuario, String EMailUsuario) {
        this.opcionSinoByEsActiva = opcionSinoByEsActiva;
        this.codigoUsuario = codigoUsuario;
        this.passwordUsuario = passwordUsuario;
        this.cedulaUsuario = cedulaUsuario;
        this.nombreUsuario = nombreUsuario;
        this.apellidoUsuario = apellidoUsuario;
        this.EMailUsuario = EMailUsuario;
    }
    public Usuario(DistintivoPersona distintivoPersona, OpcionSino opcionSinoByEsCuentaExpirada, OpcionSino opcionSinoByEsPinHabilitado, OpcionSino opcionSinoByEsConfiguradoPerfil, Profesion profesion, OpcionSino opcionSinoByEsCredencialesExpiradas, OpcionSino opcionSinoByEsActiva, UbicacionGeografica ubicacionGeografica, OpcionSino opcionSinoByEsCuentaBloqueada, Especialidad especialidad, OpcionSino opcionSinoByPrintTicketCita, TipoUsuario tipoUsuario, String codigoUsuario, String passwordUsuario, String passwordHintUsuario, String cedulaUsuario, String nombreUsuario, String apellidoUsuario, String EMailUsuario, String url1, String textoArribaDerecha, String textoPieDePagina, String formatoFirma, String contextParam, Integer refreshEditorContext, Integer refreshConsultaContext, Integer refreshLobbyContext, Integer refreshUsuarioContextEditor, Integer refreshUsuarioContextConsulta, Integer refreshUsuarioContextLobby, LocalDateTime fechaUltimoLogin, String usuarioCreacion, LocalDateTime fechaCreacion, String usuarioModificacion, LocalDateTime fechaModificacion, Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario, Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionador, Set<TimelineImagen> timelineImagens, Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario, Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioConfigurador, Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuarioTrabajaCon, Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuario, Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionado, Set<Timeline> timelines, Set<TimelineProtocoloCie10> timelineProtocoloCie10s, Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAgendador, Set<RolUsuario> rolUsuarios) {
       this.distintivoPersona = distintivoPersona;
       this.opcionSinoByEsCuentaExpirada = opcionSinoByEsCuentaExpirada;
       this.opcionSinoByEsPinHabilitado = opcionSinoByEsPinHabilitado;
       this.opcionSinoByEsConfiguradoPerfil = opcionSinoByEsConfiguradoPerfil;
       this.profesion = profesion;
       this.opcionSinoByEsCredencialesExpiradas = opcionSinoByEsCredencialesExpiradas;
       this.opcionSinoByEsActiva = opcionSinoByEsActiva;
       this.ubicacionGeografica = ubicacionGeografica;
       this.opcionSinoByEsCuentaBloqueada = opcionSinoByEsCuentaBloqueada;
       this.especialidad = especialidad;
       this.opcionSinoByPrintTicketCita = opcionSinoByPrintTicketCita;
       this.tipoUsuario = tipoUsuario;
       this.codigoUsuario = codigoUsuario;
       this.passwordUsuario = passwordUsuario;
       this.passwordHintUsuario = passwordHintUsuario;
       this.cedulaUsuario = cedulaUsuario;
       this.nombreUsuario = nombreUsuario;
       this.apellidoUsuario = apellidoUsuario;
       this.EMailUsuario = EMailUsuario;
       this.url1 = url1;
       this.textoArribaDerecha = textoArribaDerecha;
       this.textoPieDePagina = textoPieDePagina;
       this.formatoFirma = formatoFirma;
       this.contextParam = contextParam;
       this.refreshEditorContext = refreshEditorContext;
       this.refreshConsultaContext = refreshConsultaContext;
       this.refreshLobbyContext = refreshLobbyContext;
       this.refreshUsuarioContextEditor = refreshUsuarioContextEditor;
       this.refreshUsuarioContextConsulta = refreshUsuarioContextConsulta;
       this.refreshUsuarioContextLobby = refreshUsuarioContextLobby;
       this.fechaUltimoLogin = fechaUltimoLogin;
       this.usuarioCreacion = usuarioCreacion;
       this.fechaCreacion = fechaCreacion;
       this.usuarioModificacion = usuarioModificacion;
       this.fechaModificacion = fechaModificacion;
       this.usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario = usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario;
       this.usuarioGestionsForIdUsuarioGestionador = usuarioGestionsForIdUsuarioGestionador;
       this.timelineImagens = timelineImagens;
       this.usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario = usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario;
       this.usuarioConfigurarUsuariosForIdUsuarioConfigurador = usuarioConfigurarUsuariosForIdUsuarioConfigurador;
       this.usuarioOrganizacionsForIdUsuarioTrabajaCon = usuarioOrganizacionsForIdUsuarioTrabajaCon;
       this.usuarioOrganizacionsForIdUsuario = usuarioOrganizacionsForIdUsuario;
       this.usuarioGestionsForIdUsuarioGestionado = usuarioGestionsForIdUsuarioGestionado;
       this.timelines = timelines;
       this.timelineProtocoloCie10s = timelineProtocoloCie10s;
       this.usuarioAgendarUsuariosForIdUsuarioAgendador = usuarioAgendarUsuariosForIdUsuarioAgendador;
       this.rolUsuarios = rolUsuarios;
    }
   
  @GenericGenerator(name = "usuario_seq_gen", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                    @Parameter(name = "sequence_name", value = "usuario_id_seq"),
                    @Parameter(name = "initial_value", value = "1"),
                    @Parameter(name = "increment_size", value = "1")
            })
  @GeneratedValue(generator = "usuario_seq_gen")
  @Id
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    @Version
    @Column(name="version", nullable=false)
    public long getVersion() {
        return this.version;
    }
    
    public void setVersion(long version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_distintivo_persona")
    public DistintivoPersona getDistintivoPersona() {
        return this.distintivoPersona;
    }
    
    public void setDistintivoPersona(DistintivoPersona distintivoPersona) {
        this.distintivoPersona = distintivoPersona;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_cuenta_expirada")
    public OpcionSino getOpcionSinoByEsCuentaExpirada() {
        return this.opcionSinoByEsCuentaExpirada;
    }
    
    public void setOpcionSinoByEsCuentaExpirada(OpcionSino opcionSinoByEsCuentaExpirada) {
        this.opcionSinoByEsCuentaExpirada = opcionSinoByEsCuentaExpirada;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_pin_habilitado")
    public OpcionSino getOpcionSinoByEsPinHabilitado() {
        return this.opcionSinoByEsPinHabilitado;
    }
    
    public void setOpcionSinoByEsPinHabilitado(OpcionSino opcionSinoByEsPinHabilitado) {
        this.opcionSinoByEsPinHabilitado = opcionSinoByEsPinHabilitado;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_configurado_perfil")
    public OpcionSino getOpcionSinoByEsConfiguradoPerfil() {
        return this.opcionSinoByEsConfiguradoPerfil;
    }
    
    public void setOpcionSinoByEsConfiguradoPerfil(OpcionSino opcionSinoByEsConfiguradoPerfil) {
        this.opcionSinoByEsConfiguradoPerfil = opcionSinoByEsConfiguradoPerfil;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_profesion")
    public Profesion getProfesion() {
        return this.profesion;
    }
    
    public void setProfesion(Profesion profesion) {
        this.profesion = profesion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_credenciales_expiradas")
    public OpcionSino getOpcionSinoByEsCredencialesExpiradas() {
        return this.opcionSinoByEsCredencialesExpiradas;
    }
    
    public void setOpcionSinoByEsCredencialesExpiradas(OpcionSino opcionSinoByEsCredencialesExpiradas) {
        this.opcionSinoByEsCredencialesExpiradas = opcionSinoByEsCredencialesExpiradas;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_activa", nullable=false)
    public OpcionSino getOpcionSinoByEsActiva() {
        return this.opcionSinoByEsActiva;
    }
    
    public void setOpcionSinoByEsActiva(OpcionSino opcionSinoByEsActiva) {
        this.opcionSinoByEsActiva = opcionSinoByEsActiva;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_ubicacion_geografica")
    public UbicacionGeografica getUbicacionGeografica() {
        return this.ubicacionGeografica;
    }
    
    public void setUbicacionGeografica(UbicacionGeografica ubicacionGeografica) {
        this.ubicacionGeografica = ubicacionGeografica;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="es_cuenta_bloqueada")
    public OpcionSino getOpcionSinoByEsCuentaBloqueada() {
        return this.opcionSinoByEsCuentaBloqueada;
    }
    
    public void setOpcionSinoByEsCuentaBloqueada(OpcionSino opcionSinoByEsCuentaBloqueada) {
        this.opcionSinoByEsCuentaBloqueada = opcionSinoByEsCuentaBloqueada;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_especialidad")
    public Especialidad getEspecialidad() {
        return this.especialidad;
    }
    
    public void setEspecialidad(Especialidad especialidad) {
        this.especialidad = especialidad;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="print_ticket_cita")
    public OpcionSino getOpcionSinoByPrintTicketCita() {
        return this.opcionSinoByPrintTicketCita;
    }
    
    public void setOpcionSinoByPrintTicketCita(OpcionSino opcionSinoByPrintTicketCita) {
        this.opcionSinoByPrintTicketCita = opcionSinoByPrintTicketCita;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_usuario")
    public TipoUsuario getTipoUsuario() {
        return this.tipoUsuario;
    }
    
    public void setTipoUsuario(TipoUsuario tipoUsuario) {
        this.tipoUsuario = tipoUsuario;
    }
    
    @Column(name="codigo_usuario", unique=true, nullable=false, length=64)
    public String getCodigoUsuario() {
        return this.codigoUsuario;
    }
    
    public void setCodigoUsuario(String codigoUsuario) {
        this.codigoUsuario = codigoUsuario;
    }
    
    @Column(name="password_usuario", nullable=false, length=128)
    public String getPasswordUsuario() {
        return this.passwordUsuario;
    }
    
    public void setPasswordUsuario(String passwordUsuario) {
        this.passwordUsuario = passwordUsuario;
    }
    
    @Column(name="password_hint_usuario", length=64)
    public String getPasswordHintUsuario() {
        return this.passwordHintUsuario;
    }
    
    public void setPasswordHintUsuario(String passwordHintUsuario) {
        this.passwordHintUsuario = passwordHintUsuario;
    }
    
    @Column(name="cedula_usuario", nullable=false, length=64)
    public String getCedulaUsuario() {
        return this.cedulaUsuario;
    }
    
    public void setCedulaUsuario(String cedulaUsuario) {
        this.cedulaUsuario = cedulaUsuario;
    }
    
    @Column(name="nombre_usuario", nullable=false, length=64)
    public String getNombreUsuario() {
        return this.nombreUsuario;
    }
    
    public void setNombreUsuario(String nombreUsuario) {
        this.nombreUsuario = nombreUsuario;
    }
    
    @Column(name="apellido_usuario", nullable=false, length=64)
    public String getApellidoUsuario() {
        return this.apellidoUsuario;
    }
    
    public void setApellidoUsuario(String apellidoUsuario) {
        this.apellidoUsuario = apellidoUsuario;
    }
    
    @Column(name="e_mail_usuario", nullable=false, length=64)
    public String getEMailUsuario() {
        return this.EMailUsuario;
    }
    
    public void setEMailUsuario(String EMailUsuario) {
        this.EMailUsuario = EMailUsuario;
    }
    
    @Column(name="url1")
    public String getUrl1() {
        return this.url1;
    }
    
    public void setUrl1(String url1) {
        this.url1 = url1;
    }
    
    @Column(name="texto_arriba_derecha")
    public String getTextoArribaDerecha() {
        return this.textoArribaDerecha;
    }
    
    public void setTextoArribaDerecha(String textoArribaDerecha) {
        this.textoArribaDerecha = textoArribaDerecha;
    }
    
    @Column(name="texto_pie_de_pagina")
    public String getTextoPieDePagina() {
        return this.textoPieDePagina;
    }
    
    public void setTextoPieDePagina(String textoPieDePagina) {
        this.textoPieDePagina = textoPieDePagina;
    }
    
    @Column(name="formato_firma")
    public String getFormatoFirma() {
        return this.formatoFirma;
    }
    
    public void setFormatoFirma(String formatoFirma) {
        this.formatoFirma = formatoFirma;
    }
    
    @Column(name="context_param")
    public String getContextParam() {
        return this.contextParam;
    }
    
    public void setContextParam(String contextParam) {
        this.contextParam = contextParam;
    }
    
    @Column(name="refresh_editor_context")
    public Integer getRefreshEditorContext() {
        return this.refreshEditorContext;
    }
    
    public void setRefreshEditorContext(Integer refreshEditorContext) {
        this.refreshEditorContext = refreshEditorContext;
    }
    
    @Column(name="refresh_consulta_context")
    public Integer getRefreshConsultaContext() {
        return this.refreshConsultaContext;
    }
    
    public void setRefreshConsultaContext(Integer refreshConsultaContext) {
        this.refreshConsultaContext = refreshConsultaContext;
    }
    
    @Column(name="refresh_lobby_context")
    public Integer getRefreshLobbyContext() {
        return this.refreshLobbyContext;
    }
    
    public void setRefreshLobbyContext(Integer refreshLobbyContext) {
        this.refreshLobbyContext = refreshLobbyContext;
    }
    
    @Column(name="refresh_usuario_context_editor")
    public Integer getRefreshUsuarioContextEditor() {
        return this.refreshUsuarioContextEditor;
    }
    
    public void setRefreshUsuarioContextEditor(Integer refreshUsuarioContextEditor) {
        this.refreshUsuarioContextEditor = refreshUsuarioContextEditor;
    }
    
    @Column(name="refresh_usuario_context_consulta")
    public Integer getRefreshUsuarioContextConsulta() {
        return this.refreshUsuarioContextConsulta;
    }
    
    public void setRefreshUsuarioContextConsulta(Integer refreshUsuarioContextConsulta) {
        this.refreshUsuarioContextConsulta = refreshUsuarioContextConsulta;
    }
    
    @Column(name="refresh_usuario_context_lobby")
    public Integer getRefreshUsuarioContextLobby() {
        return this.refreshUsuarioContextLobby;
    }
    
    public void setRefreshUsuarioContextLobby(Integer refreshUsuarioContextLobby) {
        this.refreshUsuarioContextLobby = refreshUsuarioContextLobby;
    }
    
    @Column(name="fecha_ultimo_login", length=29)
    public LocalDateTime getFechaUltimoLogin() {
        return this.fechaUltimoLogin;
    }
    
    public void setFechaUltimoLogin(LocalDateTime fechaUltimoLogin) {
        this.fechaUltimoLogin = fechaUltimoLogin;
    }
    
    @Column(name="usuario_creacion", length=64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }
    
    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }
    
    @Column(name="fecha_creacion", length=29)
    public LocalDateTime getFechaCreacion() {
        return this.fechaCreacion;
    }
    
    public void setFechaCreacion(LocalDateTime fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }
    
    @Column(name="usuario_modificacion", length=64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }
    
    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }
    
    @Column(name="fecha_modificacion", length=29)
    public LocalDateTime getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(LocalDateTime fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioAAgendarCalendario")
    public Set<UsuarioAgendarUsuario> getUsuarioAgendarUsuariosForIdUsuarioAAgendarCalendario() {
        return this.usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario;
    }
    
    public void setUsuarioAgendarUsuariosForIdUsuarioAAgendarCalendario(Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario) {
        this.usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario = usuarioAgendarUsuariosForIdUsuarioAAgendarCalendario;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioGestionador")
    public Set<UsuarioGestion> getUsuarioGestionsForIdUsuarioGestionador() {
        return this.usuarioGestionsForIdUsuarioGestionador;
    }
    
    public void setUsuarioGestionsForIdUsuarioGestionador(Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionador) {
        this.usuarioGestionsForIdUsuarioGestionador = usuarioGestionsForIdUsuarioGestionador;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<TimelineImagen> getTimelineImagens() {
        return this.timelineImagens;
    }
    
    public void setTimelineImagens(Set<TimelineImagen> timelineImagens) {
        this.timelineImagens = timelineImagens;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioAConfigurarCalendario")
    public Set<UsuarioConfigurarUsuario> getUsuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario() {
        return this.usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario;
    }
    
    public void setUsuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario(Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario) {
        this.usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario = usuarioConfigurarUsuariosForIdUsuarioAConfigurarCalendario;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioConfigurador")
    public Set<UsuarioConfigurarUsuario> getUsuarioConfigurarUsuariosForIdUsuarioConfigurador() {
        return this.usuarioConfigurarUsuariosForIdUsuarioConfigurador;
    }
    
    public void setUsuarioConfigurarUsuariosForIdUsuarioConfigurador(Set<UsuarioConfigurarUsuario> usuarioConfigurarUsuariosForIdUsuarioConfigurador) {
        this.usuarioConfigurarUsuariosForIdUsuarioConfigurador = usuarioConfigurarUsuariosForIdUsuarioConfigurador;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioTrabajaCon")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacionsForIdUsuarioTrabajaCon() {
        return this.usuarioOrganizacionsForIdUsuarioTrabajaCon;
    }
    
    public void setUsuarioOrganizacionsForIdUsuarioTrabajaCon(Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuarioTrabajaCon) {
        this.usuarioOrganizacionsForIdUsuarioTrabajaCon = usuarioOrganizacionsForIdUsuarioTrabajaCon;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuario")
    public Set<UsuarioOrganizacion> getUsuarioOrganizacionsForIdUsuario() {
        return this.usuarioOrganizacionsForIdUsuario;
    }
    
    public void setUsuarioOrganizacionsForIdUsuario(Set<UsuarioOrganizacion> usuarioOrganizacionsForIdUsuario) {
        this.usuarioOrganizacionsForIdUsuario = usuarioOrganizacionsForIdUsuario;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioGestionado")
    public Set<UsuarioGestion> getUsuarioGestionsForIdUsuarioGestionado() {
        return this.usuarioGestionsForIdUsuarioGestionado;
    }
    
    public void setUsuarioGestionsForIdUsuarioGestionado(Set<UsuarioGestion> usuarioGestionsForIdUsuarioGestionado) {
        this.usuarioGestionsForIdUsuarioGestionado = usuarioGestionsForIdUsuarioGestionado;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<Timeline> getTimelines() {
        return this.timelines;
    }
    
    public void setTimelines(Set<Timeline> timelines) {
        this.timelines = timelines;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<TimelineProtocoloCie10> getTimelineProtocoloCie10s() {
        return this.timelineProtocoloCie10s;
    }
    
    public void setTimelineProtocoloCie10s(Set<TimelineProtocoloCie10> timelineProtocoloCie10s) {
        this.timelineProtocoloCie10s = timelineProtocoloCie10s;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuarioByIdUsuarioAgendador")
    public Set<UsuarioAgendarUsuario> getUsuarioAgendarUsuariosForIdUsuarioAgendador() {
        return this.usuarioAgendarUsuariosForIdUsuarioAgendador;
    }
    
    public void setUsuarioAgendarUsuariosForIdUsuarioAgendador(Set<UsuarioAgendarUsuario> usuarioAgendarUsuariosForIdUsuarioAgendador) {
        this.usuarioAgendarUsuariosForIdUsuarioAgendador = usuarioAgendarUsuariosForIdUsuarioAgendador;
    }
	@XmlTransient
	@JsonIgnore
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usuario")
    public Set<RolUsuario> getRolUsuarios() {
        return this.rolUsuarios;
    }
    
    public void setRolUsuarios(Set<RolUsuario> rolUsuarios) {
        this.rolUsuarios = rolUsuarios;
    }

    /**
     * toString
     * @return String
     */
     @Override
     public String toString() {
	  StringBuilder buffer = new StringBuilder();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("version").append("='").append(getVersion()).append("' ");			
      buffer.append("distintivoPersona").append("='").append(getDistintivoPersona()).append("' ");			
      buffer.append("opcionSinoByEsCuentaExpirada").append("='").append(getOpcionSinoByEsCuentaExpirada()).append("' ");			
      buffer.append("opcionSinoByEsPinHabilitado").append("='").append(getOpcionSinoByEsPinHabilitado()).append("' ");			
      buffer.append("opcionSinoByEsConfiguradoPerfil").append("='").append(getOpcionSinoByEsConfiguradoPerfil()).append("' ");			
      buffer.append("profesion").append("='").append(getProfesion()).append("' ");			
      buffer.append("opcionSinoByEsCredencialesExpiradas").append("='").append(getOpcionSinoByEsCredencialesExpiradas()).append("' ");			
      buffer.append("opcionSinoByEsActiva").append("='").append(getOpcionSinoByEsActiva()).append("' ");			
      buffer.append("ubicacionGeografica").append("='").append(getUbicacionGeografica()).append("' ");			
      buffer.append("opcionSinoByEsCuentaBloqueada").append("='").append(getOpcionSinoByEsCuentaBloqueada()).append("' ");			
      buffer.append("especialidad").append("='").append(getEspecialidad()).append("' ");			
      buffer.append("opcionSinoByPrintTicketCita").append("='").append(getOpcionSinoByPrintTicketCita()).append("' ");			
      buffer.append("tipoUsuario").append("='").append(getTipoUsuario()).append("' ");			
      buffer.append("codigoUsuario").append("='").append(getCodigoUsuario()).append("' ");			
      buffer.append("passwordUsuario").append("='").append(getPasswordUsuario()).append("' ");			
      buffer.append("passwordHintUsuario").append("='").append(getPasswordHintUsuario()).append("' ");			
      buffer.append("cedulaUsuario").append("='").append(getCedulaUsuario()).append("' ");			
      buffer.append("nombreUsuario").append("='").append(getNombreUsuario()).append("' ");			
      buffer.append("apellidoUsuario").append("='").append(getApellidoUsuario()).append("' ");			
      buffer.append("EMailUsuario").append("='").append(getEMailUsuario()).append("' ");			
      buffer.append("url1").append("='").append(getUrl1()).append("' ");			
      buffer.append("textoArribaDerecha").append("='").append(getTextoArribaDerecha()).append("' ");			
      buffer.append("textoPieDePagina").append("='").append(getTextoPieDePagina()).append("' ");			
      buffer.append("formatoFirma").append("='").append(getFormatoFirma()).append("' ");			
      buffer.append("contextParam").append("='").append(getContextParam()).append("' ");			
      buffer.append("refreshEditorContext").append("='").append(getRefreshEditorContext()).append("' ");			
      buffer.append("refreshConsultaContext").append("='").append(getRefreshConsultaContext()).append("' ");			
      buffer.append("refreshLobbyContext").append("='").append(getRefreshLobbyContext()).append("' ");			
      buffer.append("refreshUsuarioContextEditor").append("='").append(getRefreshUsuarioContextEditor()).append("' ");			
      buffer.append("refreshUsuarioContextConsulta").append("='").append(getRefreshUsuarioContextConsulta()).append("' ");			
      buffer.append("refreshUsuarioContextLobby").append("='").append(getRefreshUsuarioContextLobby()).append("' ");			
      buffer.append("fechaUltimoLogin").append("='").append(getFechaUltimoLogin()).append("' ");			
      buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");			
      buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");			
      buffer.append("usuarioModificacion").append("='").append(getUsuarioModificacion()).append("' ");			
      buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

	@Override
	public boolean equals(Object other) {
         if (this == other) 
         	return true;
         	
		 if (other == null) 
		 	return false;
		 	
		 if (!(other instanceof Usuario)) 
		 	return false;
		 	
		 Usuario castOther = ( Usuario ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && (this.getVersion()==castOther.getVersion());
   }
   
   @Override
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + (int) this.getVersion();
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }   

  // The following is extra code specified in src/main/config/templates
// Adding extra-code
	private boolean comesFromExternalDataSource = false;
	private boolean selected;
	
	@javax.persistence.Transient
    public boolean isExternalDataSource() {
		return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

	@javax.persistence.Transient
	public boolean getSelected() {
		return selected;
	}

    public void setSelected(boolean selected) {
		this.selected = selected;
    }
    
    public void cleanPOJO() {
		if(this.distintivoPersona != null &&
			(distintivoPersona.getId() == null || this.distintivoPersona.getId().longValue() == 0)) {
			distintivoPersona = null;
		}
		if(this.opcionSinoByEsCuentaExpirada != null &&
			(opcionSinoByEsCuentaExpirada.getId() == null || this.opcionSinoByEsCuentaExpirada.getId().longValue() == 0)) {
			opcionSinoByEsCuentaExpirada = null;
		}
		if(this.opcionSinoByEsPinHabilitado != null &&
			(opcionSinoByEsPinHabilitado.getId() == null || this.opcionSinoByEsPinHabilitado.getId().longValue() == 0)) {
			opcionSinoByEsPinHabilitado = null;
		}
		if(this.opcionSinoByEsConfiguradoPerfil != null &&
			(opcionSinoByEsConfiguradoPerfil.getId() == null || this.opcionSinoByEsConfiguradoPerfil.getId().longValue() == 0)) {
			opcionSinoByEsConfiguradoPerfil = null;
		}
		if(this.profesion != null &&
			(profesion.getId() == null || this.profesion.getId().longValue() == 0)) {
			profesion = null;
		}
		if(this.opcionSinoByEsCredencialesExpiradas != null &&
			(opcionSinoByEsCredencialesExpiradas.getId() == null || this.opcionSinoByEsCredencialesExpiradas.getId().longValue() == 0)) {
			opcionSinoByEsCredencialesExpiradas = null;
		}
		if(this.opcionSinoByEsActiva != null &&
			(opcionSinoByEsActiva.getId() == null || this.opcionSinoByEsActiva.getId().longValue() == 0)) {
			opcionSinoByEsActiva = null;
		}
		if(this.ubicacionGeografica != null &&
			(ubicacionGeografica.getId() == null || this.ubicacionGeografica.getId().longValue() == 0)) {
			ubicacionGeografica = null;
		}
		if(this.opcionSinoByEsCuentaBloqueada != null &&
			(opcionSinoByEsCuentaBloqueada.getId() == null || this.opcionSinoByEsCuentaBloqueada.getId().longValue() == 0)) {
			opcionSinoByEsCuentaBloqueada = null;
		}
		if(this.especialidad != null &&
			(especialidad.getId() == null || this.especialidad.getId().longValue() == 0)) {
			especialidad = null;
		}
		if(this.opcionSinoByPrintTicketCita != null &&
			(opcionSinoByPrintTicketCita.getId() == null || this.opcionSinoByPrintTicketCita.getId().longValue() == 0)) {
			opcionSinoByPrintTicketCita = null;
		}
		if(this.tipoUsuario != null &&
			(tipoUsuario.getId() == null || this.tipoUsuario.getId().longValue() == 0)) {
			tipoUsuario = null;
		}
    }
    
    public void fillPOJO() {
		if(this.distintivoPersona == null) {
			distintivoPersona = new DistintivoPersona();
		}
		if(this.opcionSinoByEsCuentaExpirada == null) {
			opcionSinoByEsCuentaExpirada = new OpcionSino();
		}
		if(this.opcionSinoByEsPinHabilitado == null) {
			opcionSinoByEsPinHabilitado = new OpcionSino();
		}
		if(this.opcionSinoByEsConfiguradoPerfil == null) {
			opcionSinoByEsConfiguradoPerfil = new OpcionSino();
		}
		if(this.profesion == null) {
			profesion = new Profesion();
		}
		if(this.opcionSinoByEsCredencialesExpiradas == null) {
			opcionSinoByEsCredencialesExpiradas = new OpcionSino();
		}
		if(this.opcionSinoByEsActiva == null) {
			opcionSinoByEsActiva = new OpcionSino();
		}
		if(this.ubicacionGeografica == null) {
			ubicacionGeografica = new UbicacionGeografica();
		}
		if(this.opcionSinoByEsCuentaBloqueada == null) {
			opcionSinoByEsCuentaBloqueada = new OpcionSino();
		}
		if(this.especialidad == null) {
			especialidad = new Especialidad();
		}
		if(this.opcionSinoByPrintTicketCita == null) {
			opcionSinoByPrintTicketCita = new OpcionSino();
		}
		if(this.tipoUsuario == null) {
			tipoUsuario = new TipoUsuario();
		}
    }
    
    public Usuario createPOJO() {
		fillPOJO();
		
		return this;
	}
	
//	@PrePersist
//	public void onPrePersist() {
//		this.fechaCreacion = new Date();
//		this.usuarioCreacion = getSecurityContextPrincipal();
//	}
//
//	@PreUpdate
//	public void onPreUpdate() {
//		this.fechaModificacion = new Date();
//		this.usuarioModificacion = getSecurityContextPrincipal();
//	}
//
//	@javax.persistence.Transient
//	private String getSecurityContextPrincipal() {
//		String principal;
//		String UNKNOWN_USER = "unknownUser";
//
//		if (SecurityContextHolder.getContext().getAuthentication() == null) {
//			principal = UNKNOWN_USER;
//		} else {
//			try {
//				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
//						.getUsername();
//			} catch (ClassCastException e) {
//				principal = UNKNOWN_USER;
//			}
//		}
//
//		return principal;
//	}
	
  // end of extra code specified in the hbm.xml files

}

